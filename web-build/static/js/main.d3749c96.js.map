{"version":3,"file":"static/js/main.d3749c96.js","mappings":"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","sources":["src/styles/commonStyles.js","src/styles/productStyles.js","src/components/user/userLoginStyles.js","src/utils/commonAppFonctions.js","src/remote/server.js","src/context/UserContext.js","src/components/specific/Home.js","src/components/common/BadgeIcon.js","src/styles/commentsStyles.js","src/styles/filtersStyles.js","src/styles/searchBarStyles.js","src/styles/productDetailsStyles.js","src/styles/commonSimpleComponentsStyles.js","src/utils/offersDatas.js","src/store/favourites/favouritesSlice.js","src/utils/commonAppNetworkFunctions.js","src/components/common/CommonSimpleComponents.js","src/context/AccountancyContext.js","src/components/specific/ViewAccountancies.js","src/styles/addAccountancyStyles.js","src/components/specific/SupplyFunds.js","src/components/specific/ViewAccountanciesDetails.js","src/components/specific/AddAccountancy.js","src/components/forms/validations/userValidation.js","src/components/user/UserLogin.js","src/components/user/UserSignup.js","src/components/user/ResetPassword.js","src/components/user/LoaderPage.js","src/components/common/HeaderNavigation.js","src/navigation/commonNavigationFonctions.js","src/navigation/MainNavigation.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import {StyleSheet, Platform, Dimensions } from \"react-native\";\r\nexport const screen = Dimensions.get(\"window\")\r\nexport const screenWidth = screen.width\r\nexport const screenHeight = screen.height\r\n\r\nexport const appColors = {\r\n    mainColor : \"#F0F0F0\",\r\n    secondaryColor1 : \"blue\", //rgb(32, 137, 220)\r\n    lightOrange : \"rgba(242, 122, 26, 0.1)\",\r\n    lightOrange2 : \"rgba(242, 122, 26, 0.04)\",\r\n    lightOrange3 : \"rgba(242, 122, 26, 1)\",\r\n    secondaryColor2 : \"#fff\",\r\n    secondaryColor3 : \"#ccc\",\r\n    secondaryColor4 : \"#777\",\r\n    secondaryColor5 : \"#444\",\r\n    gray : \"gray\",\r\n    red : \"red\",\r\n    blue : \"rgb(32, 137, 220)\",\r\n    green : \"green\",\r\n    clearGreen : '#90EE90',\r\n    pink : \"pink\",\r\n    voilet : \"violet\",\r\n    orange : \"orange\",\r\n    white : \"#fff\",\r\n    yellow : '#FFC107',\r\n    yellow2 : '#FFF5Cc',\r\n    lightBlack : \"rgba(0, 0, 0, 0.2)\",\r\n    black : \"rgba(0, 0, 0, 0.9)\",\r\n    clearBlack : \"rgba(0, 0, 0, 0.7)\",\r\n    transparentBlack : \"rgba(0, 0, 0, 0.3)\",\r\n    lightWhite : \"rgba(245, 245, 245, 1)\",\r\n    //lightWhite : \"rgba(240, 240, 240, 1)\",\r\n    //lightWhite2 : \"rgba(240, 240, 240, 0.02)\",\r\n\r\n    skeletonBackgroundColor : \"#fff2e0\",\r\n    skeletonForegrundColor : \"#ffffff\",\r\n\r\n    transparent : 'rgba(0,0,0,0)',\r\n\r\n    lightGreen : 'rgba(19, 243, 19, 0.25)',\r\n    lightRed : 'rgba(249, 28, 19, 0.25)',\r\n}\r\n\r\nexport const appFont = {\r\n    mainFontFamily : Platform.select({\r\n        ios: 'Helvetica',\r\n        android: 'Roboto',\r\n    }),\r\n    secondaryFontFamily1 :  \"Arial\",\r\n    secondaryFontFamily2 : \"Georgia\",\r\n    secondaryFontFamily3 :  Platform.select({\r\n        ios: 'Helvetica',\r\n        android: 'Roboto',\r\n    }),\r\n    secondaryFontFamily4 : \"Courier\",\r\n\r\n}\r\n\r\nexport const appFontSize = {\r\n    mainFontSize : 14,\r\n\r\n}\r\nexport const customText = {\r\n    text :\r\n    {\r\n        fontFamily : appFont.mainFontFamily,\r\n        fontSize : appFontSize.mainFontSize,\r\n        color : appColors.black,\r\n    },\r\n}\r\n\r\nexport const inputTextStyle = {\r\n    fontSize: 16,\r\n    color: appColors.secondaryColor5,\r\n    fontFamily : appFont.mainFontFamily,\r\n    fontWeight : \"bold\",\r\n\r\n}\r\n\r\nexport const formErrorStyle = {\r\n    text :\r\n    {\r\n        color : appColors.red,\r\n    }\r\n    \r\n}\r\n\r\nexport const disabledButton = \r\n{\r\n    backgroundColor : appColors.secondaryColor3,\r\n    color : appColors.white,\r\n    fontWeight : 'bold',\r\n}\r\nexport const button = \r\n{\r\n    backgroundColor : appColors.secondaryColor1,\r\n    color : appColors.white,\r\n    fontWeight : 'bold',\r\n} \r\nexport const buttonInvers = \r\n{\r\n    backgroundColor : appColors.white,\r\n    color : appColors.secondaryColor1,\r\n    fontWeight : 'bold',\r\n} \r\nexport const buttonAccepted = \r\n{\r\n    backgroundColor : appColors.green,\r\n    color : appColors.white,\r\n    borderWidth : 1,\r\n    borderColor : appColors.green,\r\n    fontWeight : 'bold',\r\n} ","import { StyleSheet, Dimensions } from \"react-native\";\r\nimport { appColors, appFont } from \"./commonStyles\";\r\n\r\nexport const numProduct = 2\r\nexport const paddingForProductContainer = { horizontal : 10, vertical : 10, }\r\n\r\nexport const marginHorizontal = 5\r\nexport const marginVertical = 5\r\nexport const screenWidth = Dimensions.get('window').width;\r\nexport const cardWidth = (screenWidth/numProduct) - marginHorizontal - paddingForProductContainer.horizontal;\r\n\r\nexport const productStyles = StyleSheet.create({\r\n    container : \r\n    {\r\n        backgroundColor : appColors.secondaryColor2,\r\n        width : cardWidth,\r\n        //height : 100,\r\n        marginHorizontal : marginHorizontal,\r\n        marginVertical : marginVertical,\r\n        paddingBottom : 5,\r\n    },\r\n    containerVisibility :\r\n    {\r\n        position : 'absolute',\r\n        width : '100%',\r\n        height : '100%',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        backgroundColor : appColors.gray,\r\n        opacity : 0.5,\r\n        zIndex : 999,\r\n    },\r\n    containerVisibilityInfo :\r\n    {\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        position : 'absolute',\r\n        left : 0,\r\n        right : 0,\r\n        bottom : 0,\r\n        padding : 10,\r\n        zIndex : 9999+1,\r\n        backgroundColor : appColors.secondaryColor5,\r\n        opacity : 1,\r\n    },\r\n    containerHorizontal : //Horizontal container ?\r\n    {\r\n        backgroundColor : appColors.secondaryColor2,\r\n        width : screenWidth/2,\r\n        //height : 100,\r\n        marginHorizontal : marginHorizontal,\r\n        marginVertical : marginVertical,\r\n        paddingBottom : 5,\r\n    },\r\n    imageHorizontal : \r\n    {\r\n        width : \"100%\",\r\n        //height: 300 * 1.2,\r\n        borderRadius: 0,\r\n    },\r\n\r\n\r\n    pressable :\r\n    {\r\n        flex : 1 ,\r\n    },\r\n\r\n    image : \r\n    {\r\n        width : \"100%\",\r\n        height: cardWidth * 1.2,\r\n        borderRadius: 0,\r\n    },\r\n    text : \r\n    {\r\n        paddingHorizontal : 10,\r\n        paddingVertical : 5\r\n    },\r\n\r\n    shopName :\r\n    {\r\n        fontWeight : \"bold\",\r\n        fontStyle : \"italic\",\r\n        fontFamily : appFont.mainFontFamily,\r\n        color : \"gray\",\r\n        \r\n    },\r\n    productName :\r\n    { \r\n        //fontWeight : \"bold\",\r\n        fontStyle : \"normal\",\r\n        fontFamily : appFont.mainFontFamily,\r\n        color : appColors.secondaryColor5,\r\n        //paddingTop : 7,\r\n        alignSelf : \"center\",\r\n        fontSize: 15,\r\n    },\r\n    price :\r\n    {\r\n        color : appColors.secondaryColor1,\r\n        fontWeight : \"bold\",\r\n    },\r\n\r\n    top :\r\n    {\r\n        height : 25,\r\n        width : \"100%\",\r\n        position : \"absolute\",\r\n        //top : -cardWidth * 1.2,\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-between\",\r\n        paddingHorizontal : 2,\r\n        //marginLeft : -5,\r\n        left : 0,\r\n        right : 0,\r\n        zIndex : 100,\r\n        backgroundColor:appColors.lightBlack,\r\n    },\r\n    bottom :\r\n    {\r\n        top : 5,\r\n        borderRadius: 0,\r\n        padding : 5,\r\n        borderWidth : 1,\r\n        borderColor : appColors.secondaryColor1,\r\n        flexDirection : \"row\",\r\n        justifyContent : \"center\",\r\n    },\r\n    category :\r\n    {\r\n        fontSize : 14,\r\n        fontWeight : \"bold\",\r\n        fontStyle : \"normal\",\r\n        fontFamily : appFont.mainFontFamily,\r\n        color : appColors.secondaryColor1,\r\n    },\r\n    feesBy : \r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        backgroundColor : appColors.secondaryColor5,\r\n        paddingRight : 4,\r\n    },\r\n    bottomIcons :\r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n    },\r\n    bottomIconsButton :\r\n    {\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        paddingHorizontal : 2,\r\n        flexWrap:'wrap',\r\n        width : 52,\r\n    },\r\n\r\n\r\n    card : \r\n    {\r\n        borderRadius: 8,\r\n        shadowColor: appColors.lightWhite,\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 8,\r\n        elevation: 5,\r\n    },\r\n\r\n    isBasketPresent : \r\n    {\r\n        backgroundColor : appColors.secondaryColor5,\r\n        borderColor : appColors.lightBlack,\r\n    },\r\n    isBasketPresentText :\r\n    {\r\n        color : appColors.white,\r\n\r\n    }\r\n\r\n    \r\n})","import { StyleSheet, StatusBar} from \"react-native\";\r\nimport { appColors, appFont, screenWidth, customText, inputTextStyle, screenHeight} from \"../../styles/commonStyles\";\r\n\r\nimport { productStyles } from \"../../styles/productStyles\";\r\n\r\n\r\nexport const cardContainer = {\r\n    position : 'relative',\r\n    justifyContent : 'center',\r\n    alignSelf : 'center',\r\n    left : 0,\r\n    right : 0,\r\n    //top : screenHeight/5,\r\n    //height : 300,\r\n    backgroundColor : appColors.white,\r\n    paddingHorizontal : 30,\r\n    zIndex : 100,\r\n  \r\n     // Ombre sur iOS\r\n    shadowColor: appColors.black,\r\n    shadowOffset: { width: 0, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    // Ombre sur Android\r\n    elevation: 10,\r\n    borderRadius: 10,\r\n    paddingVertical : 30,\r\n}\r\n\r\nexport const userLoginStyles = StyleSheet.create({\r\n    container :\r\n    {\r\n        flex : 1,\r\n        backgroundColor : appColors.lightWhite,\r\n        justifyContent : 'center',\r\n    },\r\n\r\n\r\n    backgroundImage: \r\n    {\r\n        flex: 1,\r\n        resizeMode: 'cover', // Ajuste l'image pour couvrir tout l'écran\r\n        //justifyContent: 'center', // Centre le contenu (texte, etc.)\r\n        alignItems : 'center',\r\n    },\r\n    cover : \r\n    {\r\n        position : 'absolute',\r\n        flex : 1,\r\n        left : 0,\r\n        right : 0,\r\n        top : 0,\r\n        bottom : 0,\r\n        backgroundColor : appColors.transparentBlack,\r\n        zIndex : 99,\r\n    },\r\n\r\n    registerOrLogin :\r\n    {\r\n        flexDirection : 'row',\r\n    },\r\n    credentialGroup :\r\n    {\r\n        flexDirection : 'row',\r\n        justifyContent : 'space-around',\r\n        width : '100%',\r\n    },\r\n\r\n\r\n    pressable :\r\n    {\r\n        paddingVertical : 15,\r\n        borderRadius : 20,\r\n        bottom : 10\r\n    },\r\n    infoContainer :\r\n    {\r\n        ...cardContainer,\r\n        position : 'absolute',\r\n    },\r\n\r\n    credentialContainers :\r\n    {\r\n        \r\n    },\r\n\r\n    forgotBox :\r\n    {\r\n        flexDirection : 'row',\r\n        justifyContent : 'flex-end',\r\n    },\r\n    forgotText :\r\n    {\r\n        textDecorationLine : 'underline',\r\n        color : appColors.blue,\r\n    },\r\n\r\n\r\n    titleBox :\r\n    {\r\n        left : 20,\r\n        \r\n    },\r\n    title :\r\n    {\r\n        ...customText.text,\r\n        color : appColors.white,\r\n        fontSize : 30,\r\n        fontWeight : \"bold\",\r\n    },\r\n  \r\n    inputContainer :\r\n    {\r\n       // paddingLeft : 20,\r\n    },\r\n    inputFocused :\r\n    {\r\n        borderColor : appColors.secondaryColor1,\r\n    },\r\n    input:\r\n    {\r\n        ...customText.text,\r\n        fontSize : 16,\r\n        left : 10,\r\n\r\n    }\r\n\r\n})","import nlp from \"compromise\";\r\nconst Fuse = require('fuse.js');\r\nimport { Linking, Share, Alert, Platform} from 'react-native';\r\n\r\n \r\n\r\nexport const handleSharePress = async (link) => {\r\n    if (!link) {\r\n        console.error(\"Lien manquant pour le partage\");\r\n        return false;\r\n    }\r\n    try {\r\n        await Share.share({\r\n            message: link\r\n        });\r\n        return true\r\n    } catch (error) {\r\n        console.error('Erreur lors du partage :', error);\r\n        return false\r\n    }\r\n}\r\n\r\n\r\nexport const capitalizeFirstLetter = str => str ? str[0].toUpperCase() + str.slice(1).toLowerCase() : str;\r\nexport const debouncer = (callback, time) => {\r\n    let timeoutId;\r\n  \r\n    return (...args) => {\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n  \r\n      timeoutId = setTimeout(() => {\r\n        callback(...args);\r\n        //console.log(\"debouning\")\r\n      }, time);\r\n    };\r\n  };\r\n\r\n\r\n\r\n\r\nexport const openWhatsApp = async (phoneNumber, message) => {\r\n // const url = `https://wa.me/${phoneNumber}` //?text=${encodeURIComponent(message)}`;\r\n\r\n  const url = `whatsapp://send?phone=${phoneNumber}&text=${message}`;\r\n  const fallbackUrl = `https://wa.me/${phoneNumber}?text=${message}`;\r\n\r\n  try {\r\n    // Check if WhatsApp can be opened\r\n    await Linking.openURL(url);\r\n  } catch (err) {\r\n    // If WhatsApp is not installed, open the fallback URL\r\n    await Linking.openURL(fallbackUrl);\r\n  }\r\n\r\n}\r\n\r\nexport const whatsappMessage = (buyer, seller, status, orderNo, group, product) => {\r\n    return `Buyer : ${buyer}\\nSeller : ${seller}\\nStatus: ${status}\\nOrder No: ${orderNo}\\nGroup: ${group}\\nProduct: JW-PROD-${product}`\r\n}\r\n\r\n\r\n\r\n\r\nexport const sinceDate = (_date) => {\r\n    const date2 = new Date(_date)\r\n    const date1 = new Date()\r\n    const date = date1.getTime() - date2.getTime()\r\n    //console.log(date1)\r\n    //console.log(Date.now() + \" - \" + date2.getTime() + \" = \" + date)\r\n    let oneDay = 1000 * 60 * 60 * 24\r\n\r\n    let years = Math.floor(date/(oneDay*365))\r\n    let months = Math.floor(date/(oneDay*30))\r\n    let weeks = Math.floor(date/(oneDay*7))\r\n    let days = Math.floor(date/oneDay)\r\n    let hours = Math.floor(date/(oneDay/24))\r\n    let minutes = Math.floor(date/(oneDay/(24*60)))\r\n    let seconds = Math.floor(date/(oneDay/60*60*24))\r\n\r\n    \r\n    if(years != 0)\r\n        return [isNaN(years)?0:years, years==1 ? \"an\" : \"ans\"]\r\n    else if(months != 0)\r\n        return [isNaN(months)?0:months, \"mois\"]\r\n    else if(weeks != 0)\r\n        return [isNaN(weeks)?0:weeks, weeks==1 ? \"semaine\" : \"semaines\"]\r\n    else if(days != 0)\r\n        return [isNaN(days)?0:days, days==1 ? \"jour\" : \"jours\"]\r\n    else if(hours != 0)\r\n        return [isNaN(hours)?0:hours, hours==1 ? \"heure\" : \"heures\"]\r\n    else if(minutes != 0)\r\n        return [isNaN(minutes)?0:minutes, minutes==1 ? \"minute\" : \"minutes\"]\r\n    else\r\n        return [isNaN(seconds)?0:seconds, (seconds==1 || seconds==0) ? \"seconde\" : \"secondes\"]\r\n\r\n}\r\n\r\nexport const truncateText = (text, numChars, clicked=false) => {\r\n    if(text?.length > numChars)\r\n        return [text?.substring(0, numChars+1), 1, clicked]\r\n    else\r\n        return [text?.substring(0, numChars+1), 0, clicked]\r\n}\r\n\r\nexport const truncateTextAndAddDots = (text, numChars, clicked=false) => {\r\n    const data = truncateText(text, numChars, clicked)\r\n    return data[0] + (data[1] === 1 ? \"...\" : \"\")\r\n}\r\n\r\nexport  const displayComment = (comments) => {\r\n    \r\n    return true\r\n}\r\n\r\nexport  const reshapeComments = (datas) => {\r\n    let comments = [...datas]\r\n    let newComments = []\r\n    for(let i in comments)\r\n    {\r\n        let subComment = []\r\n        let j = i\r\n        for( j in comments)\r\n        {\r\n            if(i != j)\r\n            {\r\n                if(comments[i] != undefined && comments[j] != undefined)\r\n                {\r\n                    if(comments[i]._id == comments[j].isResponseTo)\r\n                    {\r\n                        subComment.push(comments[j])\r\n                        comments[i] = {...comments[i], subComment : subComment}\r\n                        //comments.splice(j, 1)\r\n                        delete comments[j]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n       // console.log(i)     \r\n    }\r\n    for(let j in comments)\r\n        if(comments[j] != undefined)\r\n            newComments.push(comments[j])\r\n    return newComments;\r\n}\r\n\r\n\r\nexport  const formatMoney = (m) => {\r\n    m = m || \"\"\r\n    let money = [];\r\n    let money_separator = '.'\r\n    let m_tmp = m.toString().split('')\r\n    let money_reverse = []\r\n    for(let j=m_tmp.length-1;j>=0;j--)\r\n    {\r\n        if(m_tmp[j] != money_separator)\r\n        {\r\n            money_reverse.push(m_tmp[j])\r\n        }\r\n    }\r\n    for(let i in money_reverse)\r\n    {\r\n            if(money_reverse[i] != money_separator)\r\n            {\r\n                money.push(money_reverse[i])\r\n            }\r\n        if((i+1)%3 == 0 && i != money_reverse.length-1)\r\n        {\r\n            money.push(money_separator)\r\n        }\r\n    }\r\n    return money.reverse().join('')\r\n}\r\n\r\n\r\nexport  const countDatas = (datas) => {\r\n    let count = 0\r\n\r\n    for(let i of datas)\r\n    {\r\n        count += 1;\r\n        if(Array.isArray(i))\r\n        {\r\n            count += i.length;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\n\r\nexport  const reshapeBasketProducts = (p) => {\r\n    const products = [...p]\r\n\r\n}\r\n\r\n\r\n\r\nexport const serialize = (obj, prefix) => {\r\n    const str = [];\r\n    for (const p in obj) {\r\n      if (obj.hasOwnProperty(p)) {\r\n        const k = prefix ? `${prefix}[${p}]` : p;\r\n        const v = obj[p];\r\n        if (v !== null && typeof v === 'object') {\r\n          str.push(serialize(v, k));\r\n        } else {\r\n          str.push(`${encodeURIComponent(k)}=${encodeURIComponent(v)}`);\r\n        }\r\n      }\r\n    }\r\n    \r\n    //console.log(queryString)\r\n    //const params = new URLSearchParams(obj);\r\n    //const queryString = params.toString();\r\n    return str.join(\"&\");\r\n  }\r\n//export  const serialize = serialize\r\n\r\n\r\n// Fonction pour transformer les nombres écrits en lettres en chiffres dans un texte\r\nexport  const convertWordsToNumbers = (text) => {\r\n    // Utilisation de Compromise.js pour analyser le texte\r\n        const comment = new String(text);\r\n        //console.log(doc)\r\n    // Regex pour détecter les nombres écrits en mots\r\n    const numberRegex = /(?:\\b(?:zero|un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|seize|dix[\\s\\-](?:sept|huit|neuf))\\b|\\b(?:vingt(?:\\-et\\-un)?|trente|quarante|cinquante|soixante(?:\\-dix)?|quatre\\-vingt(?:\\-dix)?|cent(?:\\s(?:un|et\\sun))?|mille|million|milliard)\\b)/gi;\r\n\r\n    // Fonction pour convertir les mots en chiffres\r\n    function convertWords(match) {\r\n        switch (match.toLowerCase()) {\r\n            case 'zero':\r\n                return '0';\r\n            case 'un':\r\n                return '1';\r\n            case 'deux':\r\n                return '2';\r\n            case 'trois':\r\n                return '3';\r\n            case 'quatre':\r\n                return '4';\r\n            case 'cinq':\r\n                return '5';\r\n            case 'six':\r\n                return '6';\r\n            case 'sept':\r\n                return '7';\r\n            case 'huit':\r\n                return '8';\r\n            case 'neuf':\r\n                return '9';\r\n            case 'dix':\r\n                return '10';\r\n            case 'onze':\r\n                return '11';\r\n            case 'douze':\r\n                return '12';\r\n            case 'treize':\r\n                return '13';\r\n            case 'quatorze':\r\n                return '14';\r\n            case 'quinze':\r\n                return '15';\r\n            case 'seize':\r\n                return '16';\r\n            case 'vingt':\r\n                return '20';\r\n            case 'trente':\r\n                return '30';\r\n            case 'quarante':\r\n                return '40';\r\n            case 'cinquante':\r\n                return '50';\r\n            case 'soixante':\r\n                return '60';\r\n            case 'quatre-vingt':\r\n                return '80';\r\n            case 'cent':\r\n                return '100';\r\n            case 'mille':\r\n                return '1000';\r\n            case 'million':\r\n                return '1000000';\r\n            case 'milliard':\r\n                return '1000000000';\r\n            default:\r\n                return match;\r\n        }\r\n    }\r\n\r\n    // Remplacer chaque mot correspondant à la regex par sa version convertie\r\n    const replacedText = comment.replace(numberRegex, convertWords);\r\n    //console.log(replacedText)\r\n\r\n    function findNumbers(input) {\r\n        const text = input.replace(/[^a-zA-Z0-9]/g, '');\r\n        console.log(text)\r\n        const longNumberRegex = /\\d{8,}/g;\r\n        const matches = text.match(longNumberRegex);\r\n//console.log(matches)\r\n        if (matches) {\r\n            //console.log(\"Plus de 7\")\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    //const inputString = \"123-456789/123456 78abc123 1234567\";\r\n    const result = findNumbers(replacedText);\r\n    \r\n    //console.log(\"Nombres trouvés:\", result.numbers);\r\n    /*if (result.errors.length > 0) {\r\n        console.error(\"Erreurs:\", result.errors.join(', '));\r\n    }*/\r\n\r\n    return result; // Retourner le texte avec les nombres convertis\r\n}\r\n\r\nexport  const containsEmail = (text) => {\r\n    const emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\r\n    return emailRegex.test(text);\r\n    //return text\r\n}\r\n\r\n\r\n\r\n\r\nexport  const getSearchedProducts = async (filters, products) => {\r\n    const { name, customFilters } = filters;\r\n    let result;\r\n        if(!name)\r\n        {\r\n          result = products\r\n          //console.log(\"vide\")\r\n        }\r\n        else\r\n        {\r\n          const fuse = new Fuse(products, {\r\n          keys: ['name', 'description', 'category'],\r\n          threshold: 0.5, // Ajustez ce seuil selon vos besoins\r\n          });\r\n    \r\n          // Effectuer la recherche floue\r\n          result = fuse.search(name).map(result => result.item);\r\n    \r\n          //comme FUSE JS ne conserve pas l'ordre, utiliser la memoire de tri\r\n            result.sort((a, b) => a.sortIndex - b.sortIndex);\r\n        }\r\n        //console.log(result)\r\n        \r\n        // Appliquer des filtres personnalisés si nécessaire\r\n        let filteredResult = result;\r\n        //console.log(customFilters.minPrice)\r\n        if (customFilters.categories?.length > 0) {\r\n          filteredResult = filteredResult.filter(product => customFilters.categories.includes(product.category));\r\n        }\r\n        if (customFilters.brands?.length > 0) {\r\n          filteredResult = filteredResult.filter(product => customFilters.brands.includes(product.brand));\r\n        }\r\n        if (customFilters.condition?.length > 0) {\r\n          filteredResult = filteredResult.filter(product => customFilters.condition.includes(product.condition));\r\n        }\r\n        if (customFilters.minPrice) {\r\n          filteredResult = filteredResult.filter(product => customFilters.minPrice <= product.price);\r\n        }\r\n        if (customFilters.maxPrice) {\r\n          filteredResult = filteredResult.filter(product => customFilters.maxPrice >= product.price);\r\n        }\r\n    \r\n        return filteredResult\r\n}\r\n\r\nexport const checkOfferPrice = (realPrice, offerPrice)=>\r\n{\r\n    if(offerPrice < (realPrice*50/100) || offerPrice >= realPrice)\r\n    {\r\n        return \"price-boundries-off\"\r\n    }\r\n}\r\n\r\n\r\nexport const formatDateToLitteral = (dateString) =>  {\r\n    const mois = [\r\n        'janvier', 'février', 'mars', 'avril', 'mai', 'juin',\r\n        'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'\r\n    ];\r\n\r\n    const date = new Date(dateString);\r\n    const jour = date.getDate();\r\n    const moisNom = mois[date.getMonth()];\r\n    const annee = date.getFullYear();\r\n\r\n    return `${jour} ${capitalizeFirstLetter(mois[date.getMonth()])} ${annee}`;\r\n}\r\n\r\nexport const convertISOToCustomDateFormat = (isoDateString) => {\r\n    const date = new Date(isoDateString);\r\n\r\n    // Extraire le jour, le mois et l'année\r\n    const day = String(date.getDate()).padStart(2, '0'); // Ajoute un zéro au début si nécessaire\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Les mois commencent à 0, donc on ajoute 1\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}/${month}/${year}`;\r\n}\r\n\r\nexport const pluralize = (nombre, nom) => {\r\n    if (typeof nombre !== 'number') {\r\n        throw new Error('Le premier argument doit être un nombre.');\r\n    }\r\n    \r\n    const exceptions = {\r\n        \"oeil\": \"yeux\",\r\n        \"ciel\": \"cieux\",\r\n        \"monsieur\": \"messieurs\",\r\n        \"madame\": \"mesdames\",\r\n        \"mademoiselle\": \"mesdemoiselles\",\r\n    };\r\n\r\n    // Si le mot fait partie des exceptions\r\n    if (exceptions[nom]) {\r\n        return nombre > 1 ? exceptions[nom] : nom;\r\n    }\r\n\r\n    // Règle générale : ajouter 's' au pluriel\r\n    if (nombre > 1) {\r\n        // Mots en 'al' deviennent 'aux'\r\n        if (nom.endsWith('al') && !nom.endsWith('bal') && !nom.endsWith('carnaval')) {\r\n            return nom.slice(0, -2) + 'aux';\r\n        }\r\n\r\n        // Mots en 'eau', 'eu' prennent un 'x'\r\n        if (nom.endsWith('eau') || nom.endsWith('eu')) {\r\n            return nom + 'x';\r\n        }\r\n\r\n        // Sinon ajouter un 's'\r\n        return nom + 's';\r\n    }\r\n\r\n    // Retourne au singulier\r\n    return nom;\r\n}\r\n\r\n\r\nexport const formatLikes = (likes) => {\r\n    if (likes < 1000) {\r\n      return likes.toString(); // Affiche directement si moins de 1000 likes\r\n    } else if (likes >= 1000 && likes < 1000000) {\r\n      return (likes / 1000).toFixed(likes % 1000 === 0 ? 0 : 1) + 'K'; // Affiche en \"K\"\r\n    } else {\r\n      return (likes / 1000000).toFixed(likes % 1000000 === 0 ? 0 : 1) + 'M'; // Affiche en \"M\"\r\n    }\r\n  }\r\n  \r\n\r\n//ORDERS\r\n\r\nexport  const formatPhoneNumber = (phone) => {\r\n    return phone\r\n}\r\n\r\nexport  const deFormatPhoneNumber = (phone) => {\r\n    return phone\r\n}\r\n\r\n\r\nexport  const generateOrderNo = (prefixe = \"CMD\") => {\r\n    const date = new Date();\r\n    const annee = date.getFullYear();\r\n    const mois = String(date.getMonth() + 1).padStart(2, '0');\r\n    const jour = String(date.getDate()).padStart(2, '0');\r\n\r\n    const nombreAleatoire = Math.floor(1000 + Math.random() * 9000); \r\n    const codeCommande = `${prefixe}-${annee}${mois}${jour}-${nombreAleatoire}`;\r\n    return codeCommande;\r\n}\r\nexport const choosePrice = (product) => {\r\n    if(product.hasOwnProperty('offers') && Object.keys(product.offers)?.length>0 && product.offers?.offers?.length>0 && product.offers?.offers?.at(-1)?.hasGotResponse==1 )\r\n    {\r\n        return product.offers?.offers?.at(-1)?.price\r\n    }\r\n    return product.newPrice\r\n}\r\n\r\n//export  const choosePrice = choosePrice\r\n\r\nexport  const hasPropositionPrice = (product) => {\r\n    //console.log(product)\r\n    return product.hasOwnProperty('offers') && Object.keys(product?.offers)?.length>0 && product?.offers?.offers?.length>0 && product?.offers?.offers?.at(-1)?.hasGotResponse==1\r\n}\r\n\r\nexport const calculateTotalPrice = (products) => {\r\n    const totalPrice = products.reduce((total, product) =>{\r\n        const priceToPay = choosePrice(product)\r\n        return total+parseInt(priceToPay)*(product.orderQuantity||1)\r\n    }, 0)\r\n    return totalPrice\r\n}\r\n//export  const calculateTotalPrice = calculateTotalPrice\r\n\r\n\r\nexport  const formDataToJSON = (formData) => {\r\n    const jsonObject = {};\r\n    console.log(\"   FORM DATAS\")\r\n    console.log(formData)\r\n    if (formData instanceof FormData) {\r\n      for (const [key, value] of formData.entries()) {\r\n        jsonObject[key] = value;\r\n      }\r\n    } else {\r\n      throw new Error('Provided data is not an instance of FormData');\r\n    }\r\n    \r\n    return JSON.stringify(jsonObject);\r\n  }\r\n\r\nexport  const getFirebaseErrorMessage = (errorCode) => {\r\n    switch (errorCode) {\r\n      case 'auth/invalid-email':\r\n        return \"L'adresse e-mail est invalide.\";\r\n      case 'auth/user-disabled':\r\n        return \"Ce compte a été désactivé.\";\r\n      case 'auth/user-not-found':\r\n        return \"Aucun utilisateur trouvé avec cette adresse e-mail.\";\r\n      case 'auth/wrong-password':\r\n        return \"Le mot de passe est incorrect.\";\r\n      case 'auth/too-many-requests':\r\n        return \"Trop de tentatives de connexion. Réessayez plus tard.  Si vous ne voulez pas attendre réinitialisez votre mot de passe.\";\r\n      default:\r\n        return \"Une erreur inconnue s'est produite. Veuillez réessayer.\";\r\n    }\r\n};\r\n\r\nexport  const getDate = () => {\r\n    const today = new Date();\r\n\r\n    const month = String(today.getMonth() + 1).padStart(2, '0');\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    const year = String(today.getFullYear()).slice(-2);\r\n\r\n    const formattedDate = `${day}/${month}/${year}`;\r\n    return formattedDate\r\n}\r\n\r\nexport  const isValidDate = (date) => {\r\n\r\n    return date.split('/').length === 3\r\n}\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const showAlert = (datas) => {\r\n    if (Platform.OS === 'web') {\r\n      Swal.fire({\r\n        title: datas.title,\r\n        text: datas.text,\r\n        icon: datas.icon, //warning\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Ok',\r\n        cancelButtonText: 'No',\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            datas.action()\r\n        } else {\r\n            //console.log(typeof datas.refuseAction=='function')\r\n            typeof datas.refuseAction=='function' ? datas.refuseAction() : datas.action()\r\n        }\r\n      });\r\n    } else {\r\n        Alert.alert(\r\n            datas.title, \r\n            datas.text,\r\n            [\r\n                {\r\n                    text: 'Yes',\r\n                    onPress: () => null,\r\n                    style: 'cancel',\r\n                },\r\n              {\r\n                text: \"Ok\",\r\n                onPress: () => datas.action()\r\n              },\r\n            ],\r\n            { cancelable: false } \r\n          );\r\n    }\r\n  };\r\n\r\n\r\n\r\n","import { Platform } from \"react-native\";\r\n\r\nexport const appName = 'jirashopping'\r\nexport const storeUrl = 'https://play.google.com/store/apps/details?id=com.jira877832.jiraShopping';\r\n\r\n\r\n//export const server = 'https://jirashoppingbackend.onrender.com'\r\n//export const server = 'http://192.168.56.1:3000'\r\nexport const server = 'https://dkbbackend.onrender.com'\r\n\r\n\r\n//export const server = 'https://jirashopping-25ee1eaa49ff.herokuapp.com'\r\n\r\n\r\n/*\r\nexport const noImagePath = `${server}/userApp/assets/images/products/empty-img.png`\r\nexport const productsImagesPath = `${server}/userApp/assets/images/products`\r\nexport const usersImagesPath = `${server}/userApp/assets/images/users`\r\n*/\r\n\r\nexport const noImagePath = `https://www.dropbox.com/scl/fi/82ynwo73s4eb4mkglqovr/empty-img.png?rlkey=p3zdu1gtf0gri0akd7t431dzl&st=onkx5j9t&dl=1`\r\nexport const productsImagesPath = `https://www.dropbox.com/scl/fi`\r\nexport const usersImagesPath = `https://www.dropbox.com/scl/fi`\r\n\r\nexport const orderPhone = `+237692456077`\r\n\r\n","import React, { createContext, useState, useEffect } from 'react'\r\nimport { Alert, Platform } from 'react-native';\r\nimport { serialize, formDataToJSON } from '../utils/commonAppFonctions'\r\nimport { server } from '../remote/server'\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { storeCache, getCache } from '../cache/cacheFunctions';\r\n\r\nconst UserContext = createContext()\r\nconst UserProvider = ({children}) => {\r\n//    const navigation = useNavigation()\r\n    const [refreshComponent, setRefreshComponent] = useState(false)\r\n//IsAuthentiate doit suivre l'evolution de user\r\n    const [user, setUser] = useState({_id:'66feb4217fa2c43a7e8d76d9', username:'dkb61'})\r\n    //const user = {_id:'66feb4217fa2c43a7e8d76d9', username:'dkb61'}\r\n\r\n    const [accounters, setAccounters] = useState([])\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const [temporaryAddress, setTemporaryAddress] = useState({})\r\n\r\n    //Controler les datas avec JOI VALIDATION\r\n    const checkEmail = (email) =>{\r\n\r\n    }\r\n    const checkPassword = (pwd) =>{\r\n\r\n    }\r\n    const checkUsername = (username) =>{\r\n\r\n    }\r\n\r\n    const logout = async () => {\r\n        try {\r\n            await SecureStore.deleteItemAsync('user');\r\n            await SecureStore.deleteItemAsync('authToken');\r\n            setUser(null);\r\n            setIsAuthenticated(false);\r\n        } catch (error) {\r\n          console.error('Error removing token:', error);\r\n        }\r\n      };\r\n\r\n\r\n    const signupUserWithEmailAndPassword = async (email, username, password, adminPassword, role, location) => {\r\n        const user = {\r\n            email : email,\r\n            password : password,\r\n            adminPassword : adminPassword,\r\n            role:role,\r\n            location : location\r\n        }\r\n\r\n        try {\r\n          const response = await fetch(`${server}/api/auth/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n          });\r\n      \r\n          if (!response.ok) {\r\n            throw new Error('Erreur lors de l’inscription'+await response.text());\r\n          }\r\n      \r\n          const data = await response.json();\r\n          console.log('Inscription réussie:', data);\r\n        } catch (error) {\r\n          console.error('Erreur:', error);\r\n        }\r\n      };\r\n      \r\n\r\n      const loginUserWithEmailAndPassword = async (email, username, password, credentialType) => {\r\n        const user = {\r\n            email : email, //\"francky877832@gmail.com\",\r\n            username : username, //\"francky877832\",\r\n            password : password, //\"0000000\",\r\n            type : credentialType\r\n        }\r\n    //console.log(JSON.stringify(user))\r\n        try\r\n        {\r\n            const params = new URLSearchParams(user);\r\n            const queryString = params.toString();\r\n            //console.log(server)\r\n            //const response = await fetch(`${server}/api/auth/login?${serialize(user)}`, {\r\n            //https://jirashopping-25ee1eaa49ff.herokuapp.com/api/auth/login?email=francky877832%40gmail.com&username=&password=00000000000\r\n            //const response = await fetch(`https://jirashopping-25ee1eaa49ff.herokuapp.com/api/auth/login?email=francky877832%40gmail.com&username=&password=000000000`, {\r\n            const response = await fetch(`${server}/api/auth/login?${queryString}`, {\r\n                method: 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            \r\n            //console.log(\"jj\")\r\n            if(response.ok)\r\n            {\r\n                const loggedUser = await response.json()\r\n                const token = loggedUser.token\r\n                const user = loggedUser.user\r\n                //Mis a jour de async storage\r\n                console.log(user)\r\n            /*\r\n                if (Platform.OS != 'web')\r\n                {\r\n                    await SecureStore?.setItemAsync('authToken', token);\r\n                    await SecureStore?.setItemAsync('user', JSON.stringify({email:user.email, username:user.username, password:user.password}));\r\n                }\r\n            */\r\n                \r\n                //console.log(loggedUser)\r\n                \r\n                //Mis a jour du contexte User\r\n                setUser(user)\r\n                //setTemporaryAddress({address:user.address, phone:user.phone, name:user.name})\r\n                setIsAuthenticated(true);\r\n                return user\r\n            }\r\n            else\r\n            {\r\n                throw new Error((await response.json()).error)\r\n                //throw new Error(\"await response.json()\")\r\n                //return false\r\n            }\r\n        \r\n            //Alert.alert(\"Signed In\")\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            //Alert.alert(\"Une erreur est survenue\", `${error.message} => Verifier vos identifiants.`)\r\n            setIsAuthenticated(false);\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n\r\n   const  updateUser = async (userId, updatedFormData) => {\r\n    try {\r\n            const response = await fetch(`${server}/api/auth/users/update/${encodeURIComponent(userId)}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n                body: updatedFormData,  // Convertit les données mises à jour en FormData\r\n            });\r\n    \r\n            // Vérification si la requête a réussi\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                console.error('Erreur lors de la mise à jour de l\\'utilisateur:', errorData.message);\r\n                return;\r\n            }\r\n            //console.log(updatedFormData)\r\n            \r\n            const responseData = await response.json();\r\n            //Mise a jour des donnees locales\r\n           // const newDatas = formDataToJSON(updatedFormData)\r\n            \r\n\r\n            //console.log('Réponse du serveur:', responseData);\r\n    \r\n            if (responseData.success) {\r\n                //console.log('Informations mises à jour avec succès:', responseData.user);\r\n            }\r\n            return responseData.user\r\n        } catch (error) {\r\n            console.error('Erreur lors de la requête:', error);\r\n        }\r\n    }\r\n\r\n    const getUser = async (email) => {\r\n        try\r\n        {\r\n            const response = await fetch(`${server}/api/auth/users/get/${encodeURI(email)}`, {\r\n                method: 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n\r\n            if(!response)\r\n            {\r\n                throw new Error(\"Cet email ne'existe pas \" + await response.text())\r\n            }\r\n            \r\n            const data = await response.json()\r\n            //console.log(data)\r\n            return true\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const getUserAccounters = async () => {\r\n        try\r\n        {\r\n            const response = await fetch(`${server}/api/auth/accountancies/get`, {\r\n                method: 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n\r\n            if(!response)\r\n            {\r\n                const errorData = await response.text();\r\n               throw new Error(errorData.message);\r\n            }\r\n            \r\n            const res = await response.json()\r\n            setAccounters(res.datas)\r\n            return res.datas\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            return []\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    \r\n    \r\n\r\n    const filterStateVars = {temporaryAddress, refreshComponent, email, username, password, user, isAuthenticated }\r\n    const filterStateSetters = {setTemporaryAddress, setRefreshComponent, setEmail, setUsername, setPassword, setUser, setIsAuthenticated}\r\n    const utilsFunctions = { getUserAccounters, getUser, updateUser, checkEmail, checkPassword, checkUsername, signupUserWithEmailAndPassword, loginUserWithEmailAndPassword}\r\n    return (\r\n        <UserContext.Provider value={{...filterStateVars, ...filterStateSetters, ...utilsFunctions}}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport { UserContext, UserProvider }","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, Image} from 'react-native';\r\n\r\nimport { appColors, customText} from '../../styles/commonStyles';\r\nimport { useRoute, useNavigation } from '@react-navigation/native';\r\n\r\nimport { cardContainer } from '../user/userLoginStyles';\r\nimport { UserContext } from '../../context/UserContext';\r\nconst Home = (props) => {\r\n    //console.log('ok--')\r\n    //On va afficher home en fonciton de admin role\r\n    const navigation = useNavigation()\r\n    const route = useRoute()\r\n    const {user} = useContext(UserContext)\r\n\r\n    const view = ['admin', 'boss', 'visualizer']\r\n    const add = ['admin', 'cashier', 'supplier', 'auto-supplier']\r\n    const supply = ['admin', 'boss', 'supplier', 'auto-supplier']\r\n    return (\r\n        <View style={[homeStyles.container]}>\r\n\r\n            <View style={[homeStyles.menu]}>\r\n\r\n        {['boss', 'admin'].includes(user?.role) &&\r\n        \r\n                <Pressable style={[homeStyles.menuItem]} onPress={() => {navigation.navigate('UserLogin', {page:'register'})}}>\r\n                    <Text style={[customText.text, homeStyles.menuItemText ]}>Sign Up</Text>\r\n                </Pressable>\r\n         }\r\n    \r\n                <View style={{width:10}}></View>\r\n    \r\n                <Pressable style={[homeStyles.menuItem]} onPress={() => {navigation.navigate('UserLogin', {page:'login'})}}>\r\n                    <Text style={[customText.text, homeStyles.menuItemText ]}>Logout</Text>\r\n                </Pressable>\r\n            </View>\r\n\r\n            <View style={{height:10}}></View>\r\n    \r\n    \r\n\r\n            <View style={[homeStyles.logoBox]}>\r\n                <Image source={require('../../assets/logos/logo1.jpg')}  style={[homeStyles.logoImage]}/>\r\n            </View>\r\n\r\n            <View style={{height:10}}></View>\r\n\r\n            <View style={[homeStyles.infoContainer]}>\r\n                \r\n                <Pressable  style={[homeStyles.menuButton, {backgroundColor:!view.includes(user.role)?appColors.secondaryColor5:appColors.blue}]} onPress={() => { view.includes(user.role) ? navigation.navigate('ViewAccountancies') : null }}>\r\n                    <Text style={[customText.text, homeStyles.menuText ]}>Visualiser</Text>\r\n                </Pressable>\r\n\r\n                <Pressable style={[homeStyles.menuButton, {backgroundColor:!add.includes(user.role)?appColors.secondaryColor5:appColors.blue}]} onPress={() => { add.includes(user.role) ? navigation.navigate('AddAccountancy') : null }}>\r\n                    <Text style={[customText.text, homeStyles.menuText ]}>Ajouter</Text>\r\n                </Pressable>\r\n\r\n                {\r\n                    <Pressable style={[homeStyles.menuButton, {backgroundColor:!supply.includes(user.role)?appColors.secondaryColor5:appColors.blue}]} onPress={() => { supply.includes(user.role) ? navigation.navigate('SupplyFunds') : null }}>\r\n                        <Text style={[customText.text, homeStyles.menuText ]}>Approvisionnement</Text>\r\n                    </Pressable>\r\n                }\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\nconst homeStyles = StyleSheet.create({\r\n    container :\r\n    {\r\n        flex : 1,\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n    },\r\n    menu :\r\n    {\r\n        flexDirection : 'row',\r\n        width : '100%',\r\n        justifyContent : 'center',\r\n        alignItems : 'center'\r\n    },\r\n    menuItem : \r\n    {\r\n\r\n    },\r\n    menuItemText : \r\n    {\r\n        fontWeight : 'bold',\r\n        fontSize : 15,\r\n        color : appColors.blue,\r\n    },\r\n\r\n    logoBox : \r\n    {\r\n        height : 300,\r\n       width : '100%',\r\n       justifyContent : 'center',\r\n        alignItems : 'center',\r\n    },\r\n    logoImage :\r\n    {\r\n        height : '100%',\r\n        width : '90%'\r\n    },\r\n    infoContainer :\r\n    {\r\n        ...cardContainer,\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        width  : '100%',\r\n    },\r\n    menuButton :\r\n    {\r\n        padding : 20,\r\n        borderRadius : 10,\r\n        borderWidth : 1,\r\n        borderColor : appColors.lightWhite,\r\n        width : '100%',\r\n        alignItems : 'center',\r\n        marginTop : 5,\r\n        backgroundColor : appColors.blue,\r\n    },\r\n    menuText :\r\n    {\r\n        fontWeight : 'bold',\r\n        fontSize : 16,\r\n        color : appColors.white,\r\n    },\r\n})\r\n","import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { appColors } from '../../styles/commonStyles';\r\n\r\nconst BadgeIcon = ({ name, size, color, badgeCount, bottomTab, focused, styles }) => {\r\n  return (\r\n    <View style={[bottomTab?extrBadgeStyles.iconContainer:styles.iconContainer, focused?extrBadgeStyles.focused:null]}>\r\n      <Ionicons name={name} size={size} color={color} />\r\n      {badgeCount > 0 && (\r\n        <View style={styles.badgeContainer}>\r\n          <Text style={styles.badgeText}>{badgeCount}</Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BadgeIcon;\r\n\r\nconst extrBadgeStyles = StyleSheet.create({\r\n  focused :\r\n  {\r\n    backgroundColor : appColors.lightOrange,\r\n    borderRadius : 25,\r\n  },\r\n  iconContainer: \r\n  {\r\n    width: 50,\r\n    //height: 24,\r\n    //margin: 5,\r\n    padding : 5,\r\n    justifyContent : 'center',\r\n    alignItems : 'center',\r\n  },\r\n})","import { StyleSheet, Dimensions } from \"react-native\";\r\nimport { appColors, appFont, customText, inputTextStyle } from \"./commonStyles\";\r\n\r\nimport { productStyles } from \"./productStyles\";\r\n\r\n\r\nexport const screen = Dimensions.get(\"window\")\r\nexport const screenWidth = screen.width\r\nexport const screenHeight = screen.height\r\n\r\nexport const commentsStyles = StyleSheet.create({\r\n    container: \r\n    {\r\n      backgroundColor : appColors.white,\r\n      paddingHorizontal:10,\r\n      paddingBottom : 0,\r\n    },\r\n    commentContainer: \r\n    {\r\n      backgroundColor : \"red\",\r\n    \r\n    },\r\n    flatlistContainerView :\r\n    {\r\n      //flex : 1,\r\n      paddingBottom : 10,\r\n      paddingRight : 10,\r\n    },\r\n    flatlistContainer : \r\n    {\r\n      backgroundColor : appColors.white,\r\n      paddingRight : 15\r\n    },\r\n    flatlistContainerNotAll :\r\n    {\r\n      maxHeight : 600,\r\n    },\r\n    \r\n    comment: \r\n    {\r\n      ///...productStyles.card,\r\n      flexDirection : \"row\",\r\n      backgroundColor : appColors.secondaryColor4,\r\n      padding : 5,\r\n      marginTop : 10,\r\n      alignSelf : \"flex-start\",\r\n      paddingHorizontal : 10,\r\n      paddingVertical : 5,\r\n      borderRadius : 10,\r\n      maxWidth : \"90%\",\r\n      left : 1,\r\n    },\r\n    subComment: \r\n    {\r\n      backgroundColor : appColors.secondaryColor3,\r\n      alignSelf : \"flex-end\",\r\n      width : \"65%\",\r\n      paddingHorizontal : 10,\r\n      paddingVertical : 5,\r\n      left : 1,\r\n    },\r\n    commentText :\r\n    {\r\n      ...customText.text,\r\n    },\r\n    sendButton :\r\n    {\r\n        left : 5,\r\n    },\r\n\r\n    inputContainer :\r\n    {\r\n      top : 0,\r\n      //justifyContent : \"center\",\r\n      //alignItems : \"center\",\r\n    },\r\n    input :\r\n    {\r\n      ...customText,\r\n      ...inputTextStyle,\r\n      padding : 10,\r\n    },\r\n    inputFocused :\r\n    {\r\n      borderBottomWidth : 1,\r\n      borderColor : appColors.secondaryColor1,\r\n    },\r\n\r\n    commentProfileContainer :\r\n    {\r\n      width : 30,\r\n      height : 30,\r\n      borderRadius : 15,\r\n      justifyContent : 'center',\r\n      alignItems : 'center',\r\n      alignSelf : 'flex-end',\r\n      borderWidth : 1,\r\n      borderColor : appColors.lightWhite,\r\n      zIndex : 99,\r\n      //bottom : 0,\r\n      //top : '3%',\r\n    },\r\n    commentProfile :\r\n    {\r\n      width : 30,\r\n      height : 30,\r\n      borderRadius : 15,\r\n      //top : '2%',\r\n    }\r\n  \r\n    \r\n\r\n  });","import { StyleSheet, } from \"react-native\";\r\nimport { appColors, appFont, screenWidth, customText, inputTextStyle} from \"./commonStyles\";\r\nimport { screenHeight } from \"./commentsStyles\";\r\n\r\n\r\nexport const card  = {\r\n    borderRadius: 8,\r\n    shadowColor: appColors.black,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 8,\r\n    elevation: 5,\r\n    borderWidth : 1,\r\n    borderColor : appColors.secondaryColor3,\r\n}\r\n\r\n\r\nexport const topHeight = 55\r\nexport const subTopHeight = 55\r\nexport const totalTopHeight = topHeight+subTopHeight\r\n\r\nexport const filtersStyles = StyleSheet.create({\r\n\r\n    contentContainerStyle :\r\n    {\r\n       // minHeight : 40,\r\n        //height : 40+55,\r\n    },\r\n    container :\r\n    {\r\n        backgroundColor : appColors.white,\r\n        //flex:1,\r\n        zIndex : 98,\r\n        flex : 1,\r\n        //paddingTop : 5,\r\n       ////paddingBottom : 10,\r\n       //backgroundColor : appColors.red,\r\n    },\r\n\r\n    topContainer :\r\n    {\r\n        flexDirection:\"row\",\r\n        justifyContent:\"space-around\",\r\n        alignItems : \"center\",\r\n        //borderWidth : 1,\r\n        borderBottomWidth : 1,\r\n        borderBottomColor : appColors.secondaryColor3,\r\n        //borderTopWidth : 1,\r\n        //borderTopColor : appColors.lightWhite,\r\n        backgroundColor : appColors.white,\r\n        //height : 40,  \r\n        flex : 1, //40+55 for topMostContainer\r\n    },\r\n    topMostContainer :\r\n    {\r\n        height : totalTopHeight,\r\n        //flex : 1,\r\n       // borderWidth : 1,\r\n       //backgroundColor : \"red\",\r\n    },\r\n\r\n    modal :\r\n    {\r\n        //flex : 1,\r\n        paddingBottom : 5,\r\n        borderTopWidth : 1,\r\n        borderTopColor : appColors.secondaryColor3,\r\n        //borderBottomWidth : 1,\r\n        //borderBottomColor : appColors.secondaryColor1,\r\n        backgroundColor : appColors.white,\r\n        zIndex : 100,\r\n        position : \"absolute\", //sor du flow de contentContainerStyle puisque qu!il a un height fixe : 40+55 \r\n        left : 0,\r\n        right : 0,\r\n        top : totalTopHeight,\r\n        borderWidth : 1,\r\n        borderBottomColor : appColors.secondaryColor4,\r\n        borderRadius: 5,\r\n        shadowColor: appColors.lightWhite,\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 8,\r\n        elevation: 5,\r\n        backgroundColor : appColors.lightWhite,\r\n        //paddingTop : 5,\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n    },\r\n      \r\n    filtres :\r\n    {\r\n        justifyContent : \"center\",\r\n        paddingHorizontal : 5,\r\n        //borderTopWidth : 1,\r\n        //borderTopColor : appColors.secondaryColor3,\r\n        flex : 1,//40+55 for topMostContainer\r\n        //height : 55, \r\n        backgroundColor : appColors.white,\r\n        zIndex : 100,\r\n    },\r\n    categoryContainer :\r\n    {\r\n        width: \"100%\",\r\n        //height : 300,\r\n        top : 10,\r\n        paddingBottom : 25,\r\n        justifyContent:\"center\",\r\n    },\r\n    orderByContainer :\r\n    {\r\n        flex: 1, \r\n        //position : \"absolute\",\r\n        width: screenWidth,\r\n        alignSelf : 'center',\r\n        alignItems : \"center\",\r\n        justifyContent: 'center',\r\n        borderBottomWidth : 1,        \r\n        backgroundColor: appColors.clearBlack,\r\n        zIndex : 101,\r\n    },\r\n    radioBox : \r\n    {\r\n        ...card,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor : appColors.lightWhite,\r\n        width : '90%',\r\n        paddingHorizontal : 40,\r\n        paddingVertical : 20,\r\n        borderWidth : 1,\r\n        borderColor : appColors.clearBlack,\r\n        borderRadius : 10,\r\n    },\r\n    radioContainer: \r\n    {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n    },\r\n    modalHeader :\r\n    {\r\n        paddingVertical : 20,\r\n    },  \r\n    modalHeaderText :\r\n    {\r\n        fontSize : 20,\r\n        fontWeight : 'bold',\r\n    },\r\n\r\n    similarContainer : \r\n    {\r\n        top :60,\r\n        paddingBottom : 5,\r\n        backgroundColor : appColors.lightWhite,\r\n    },\r\n\r\n    modalVisibleText : \r\n    {\r\n        color: appColors.secondaryColor1\r\n    },\r\n\r\n    priceContainer : \r\n    {\r\n        flexDirection : \"column\",\r\n        marginTop : 10,\r\n        width: screenWidth,\r\n        backgroundColor : appColors.lightWhite,\r\n    },\r\n    price : \r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n    },\r\n    minPrice : \r\n    {\r\n        paddingHorizontal : 2,\r\n        flex : 1,\r\n        paddingLeft : 5,\r\n    },\r\n    maxPrice : \r\n    {\r\n        paddingHorizontal : 2,\r\n        flex : 1,\r\n        paddingRight : 5,\r\n    },\r\n    label : \r\n    {\r\n        alignSelf : \"center\",\r\n        fontSize : 15,\r\n        fontStyle : appFont.mainFontFamily,\r\n    },\r\n    input : \r\n    {\r\n        ...customText.text,\r\n        ...inputTextStyle,\r\n        width : \"100%\",\r\n        height: 40,\r\n        borderColor : appColors.secondaryColor3,\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        paddingVertical: 2,\r\n        paddingHorizontal : 20,\r\n        flex : 1,\r\n        justifyContent : \"center\", \r\n        backgroundColor : appColors.white,\r\n    },\r\n\r\n    inputFocused : \r\n    {\r\n        borderColor: appColors.secondaryColor1, \r\n    },\r\n\r\n    conditionContainer :\r\n    {\r\n        flexDirection:\"column\", \r\n        justifyContent:\"space-around\",\r\n        marginTop : 10,\r\n        width: screenWidth,\r\n        /*position:\"absolute\",\r\n        top:0,\r\n        left:0,right:0,\r\n        zIndex : 100,*/\r\n    },\r\n   \r\n    categorySeparator :\r\n    {\r\n        width: 20,\r\n    },\r\n     \r\n \r\n\r\n\r\n    categoryFocused :\r\n    {\r\n        backgroundColor : appColors.secondaryColor1,\r\n        borderWidth : 1,\r\n        borderColor : appColors.white,\r\n    },\r\n    textCategoryFocused :\r\n    {\r\n        color : appColors.white,\r\n    },\r\n\r\n    label :\r\n    {\r\n        ...customText.text,\r\n       fontFamily : appFont.secondaryFontFamily3,\r\n       fontWeight : \"bold\",\r\n       color : appColors.secondaryColor5,\r\n    },\r\n    \r\n    filterFlatlist :\r\n    {\r\n        //flex : 1, \r\n        top : 10,\r\n        alignSelf : \"center\",\r\n        width : \"100%\",\r\n        //backgroundColor:\"red\",\r\n    },\r\n    category :\r\n    {\r\n        justifyContent : \"center\",\r\n        backgroundColor : \"#fff\",\r\n        borderWidth : 1, \r\n        borderColor : \"#ccc\",\r\n        paddingVertical : 5,\r\n        paddingHorizontal : 10,\r\n        borderRadius : 15,\r\n        height : 35,\r\n    },\r\n    textCategory :\r\n    {\r\n        color : \"#555\",\r\n        fontFamily : appFont.mainFontFamily,\r\n        fontSize : 12,\r\n        fontWeight : \"bold\",\r\n    },\r\n\r\n\r\n    trierFiltrer :\r\n    {\r\n        flex : 1,\r\n       flexDirection : \"row\",\r\n       justifyContent:\"center\",\r\n       alignItems : \"center\",\r\n       //paddingHorizontal : 20,\r\n       //paddingVertical : 10,\r\n       height : \"100%\", //OK!\r\n\r\n    },\r\n    trierFiltrerFocused :\r\n    {\r\n        borderTopWidth : 1,\r\n        borderTopColor : appColors.secondaryColor1,\r\n    },\r\n\r\n    pressableFilter :\r\n    {\r\n       borderWidth : 1,\r\n       borderColor : appColors.secondaryColor3,\r\n       padding : 7,\r\n       paddingHorizontal : 10,\r\n       borderRadius : 20,\r\n       flexDirection : \"row\",\r\n    },\r\n    pressableFilterFocused :\r\n    {\r\n        borderWidth : 2,\r\n        borderColor : appColors.secondaryColor1,\r\n        backgroundColor : appColors.lightOrange,\r\n    },\r\n\r\n    pressableFilterDisabled:\r\n    {\r\n        borderWidth : 2,\r\n       // borderColor : appColors.secondaryColor1,\r\n        //backgroundColor : appColors.secondaryColor2,\r\n        borderColor : appColors.secondaryColor1,\r\n        backgroundColor : appColors.lightOrange,\r\n    },\r\n    pressableFilterTextDisabled:\r\n    {\r\n       //textDecorationLine : \"line-through\",\r\n       color : appColors.red,\r\n    },\r\n/*\r\n    cardItem : \r\n    {\r\n        borderRadius: 80,\r\n        shadowColor: appColors.lightWhite,\r\n        shadowOffset: { width: 5, height: 10 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 8,\r\n        elevation: 50,\r\n        backgroundColor : appColors.lightWhite,\r\n        paddingTop : 10,\r\n    },\r\n  /*  cardItem : \r\n    {\r\n        borderRadius: 20,\r\n        shadowColor: appColors.lightWhite,\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 8,\r\n        elevation: 50,\r\n        backgroundColor : appColors.lightWhite,\r\n    },\r\n*/\r\n   \r\n//FOR PRODUCTLIST\r\n    productContainer :\r\n    {\r\n        backgroundColor : appColors.lightWhite,\r\n    },\r\n    flatlist :\r\n    {\r\n        backgroundColor : appColors.lightWhite,\r\n    },\r\n\r\n  \r\n})","import { StyleSheet, } from \"react-native\";\r\nimport { appColors, appFont, customText, inputTextStyle } from \"./commonStyles\";\r\n\r\n\r\nexport const searchBarStyles = StyleSheet.create({\r\n    container: \r\n    {\r\n        flex : 1,\r\n        borderTopWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopColor: appColors.mainColor,\r\n        borderBottomColor: appColors.mainColor,\r\n        backgroundColor : appColors.white,\r\n        flexDirection : \"row\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        //height : 35,\r\n        paddingHorizontal : 10,\r\n    },\r\n    containerBox :\r\n    {\r\n        flex:1,\r\n        flexDirection : \"row\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        paddingHorizontal : 5,\r\n        backgroundColor: appColors.white,\r\n    },\r\n    prevButton : \r\n    {\r\n        top : 0,\r\n    },\r\n    inputText : \r\n    {\r\n        ...customText.text,\r\n        ...inputTextStyle,\r\n        fontSize: 16,\r\n        color: '#333',\r\n        fontFamily : appFont.mainFontFamily,\r\n    },\r\n    inputContainer : \r\n    {\r\n        borderWidth: 1,\r\n        borderColor: appColors.lightWhite,\r\n        paddingHorizontal : 5,\r\n        backgroundColor: appColors.white,\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        alignSelf : \"center\",\r\n        borderWidth : 1,\r\n        borderColor: appColors.lightWhite,\r\n        borderRadius : 60,\r\n    },\r\n   \r\n    inputContainerFocused : \r\n    {\r\n        borderWidth : 1,\r\n        borderColor: appColors.secondaryColor1,\r\n    },\r\n\r\n    \r\n})\r\n","import { StyleSheet, StatusBar} from \"react-native\";\r\nimport { appColors, appFont } from \"./commonStyles\";\r\nimport { screenHeight, screenWidth } from \"./commentsStyles\";\r\nimport { productStyles } from \"./productStyles\";\r\nimport { filtersStyles } from \"./filtersStyles\";\r\n\r\nexport const productDetailsStyles = StyleSheet.create({\r\n    container : \r\n    {\r\n        //top : 0,\r\n        width : \"100%\",\r\n        height : \"100%\",\r\n    },\r\n    buttonContainer : \r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-between\",\r\n        paddingHorizontal : 10,\r\n        zIndex : 100,\r\n        backgroundColor : appColors.lightBlack, //transparence sur limage\r\n    },\r\n    likeContainer :\r\n    {\r\n        ...filtersStyles.similarContainer,\r\n        top : 20,\r\n        //paddingLeft : 1,\r\n        paddingBottom :  20,\r\n    },\r\n    getBackPosition :\r\n    {\r\n        bottom : 60 //to get back position from buttonContainer\r\n    },\r\n\r\n    buttonContainerLeft : \r\n    {\r\n       flexDirection : \"row\",\r\n       justifyContent : \"space-between\",\r\n    },\r\n    prevButton :\r\n    {\r\n        color : appColors.white,\r\n    },\r\n    likeButton : //not used cause of different place to display in\r\n    {\r\n        backgroundColor : appColors.white,\r\n        color : appColors.white,\r\n    },\r\n    shareButton :\r\n    {\r\n       \r\n    },\r\n    underCaroussel :\r\n    {\r\n        //flex : 1,\r\n        backgroundColor : appColors.white,\r\n\r\n    },\r\n    since :\r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-between\",\r\n        \r\n    },\r\n    name :\r\n    {\r\n        \r\n        \r\n    },\r\n    details :\r\n    {\r\n        flexDirection:\"row\",\r\n        justifyContent:\"space-between\",\r\n        top : 15,\r\n    },\r\n    description :\r\n    {\r\n      paddingTop : 25,\r\n      paddingBottom : 20,\r\n    },\r\n    descriptionBox : \r\n    {\r\n        flexDirection : \"column\",\r\n        backgroundColor : appColors.secondaryColor3,\r\n        padding : 10,\r\n        top : 5,\r\n        borderRadius : 5,\r\n        width : \"100%\",\r\n    },\r\n    infosBox :\r\n    {\r\n        paddingHorizontal : 10,\r\n        paddingTop : 5,\r\n    },\r\n    commentsContainer : \r\n    {\r\n        //flex : 1,\r\n        width : \"100%\",\r\n        //paddingHorizontal : 5,\r\n        paddingBottom : 10,\r\n        backgroundColor : appColors.white,\r\n        top : 10,\r\n        paddingTop : 10,\r\n    },\r\n    scrollView :\r\n    {\r\n        backgroundColor : appColors.lightWhite,\r\n        width : \"100%\",\r\n        //bottom : -screenHeight/2,\r\n        left : 0,\r\n        right : 0,\r\n        \r\n    },\r\n\r\n    bottom :\r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-between\",\r\n        alignItems : \"center\",\r\n        position : \"relative\",\r\n        left : 0,\r\n        right : 0,\r\n        bottom : 0,\r\n        backgroundColor : appColors.white,\r\n        height : 60,\r\n        borderWidth : 1,\r\n        borderColor : appColors.secondaryColor3,\r\n        //paddingVertical : 10, height est fixe\r\n        paddingHorizontal : 10,\r\n        //zIndex : 0,\r\n\r\n    },\r\n    button:\r\n    {\r\n        ...productStyles.card,\r\n        shadowColor : appColors.white,\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        height : 50,\r\n        borderRadius : 5,\r\n    },\r\n    buttonText:\r\n    {\r\n        textAlign : \"center\",\r\n        fontWeight : \"bold\",\r\n    },\r\n    price :\r\n    {\r\n        flex : 1,\r\n        //flexWrap : 'wrap',\r\n        flexDirection : 'row',\r\n        alignItems : \"center\",\r\n        justifyContent : 'space-evenly',\r\n        paddingHorizontal : 5,\r\n        //backgroundColor:'red',\r\n    },\r\n    acheter :\r\n    {\r\n        flex : 1,\r\n        borderRadius : 5,\r\n    },\r\n    panier :\r\n    {\r\n        flex : 1,\r\n        borderRadius : 5,\r\n       // borderLeftColor : appColors.white,\r\n        //borderLeftWidth : 1,\r\n        borderWidth : 1,\r\n        borderColor : appColors.secondaryColor1,\r\n        left : -5,\r\n    },\r\n\r\n    sellerBrand :\r\n    {\r\n        backgroundColor : appColors.lightOrange,\r\n        paddingVertical : 10,\r\n        paddingHorizontal : 5,\r\n        width : screenWidth,\r\n    }, \r\n\r\n    likeAddersImages : \r\n    {\r\n        width : 50,\r\n        height : 50,\r\n        borderRadius : 25,\r\n        //left : -10,\r\n    },\r\n\r\n    likeAdders : \r\n    {\r\n        backgroundColor : appColors.white,\r\n        padding : 10,\r\n        //alignItems : 'center',\r\n    },\r\n    likeTitle : \r\n    {\r\n\r\n    },\r\n    likeContent :\r\n    {\r\n        width : '100%',\r\n        flexDirection : 'row',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n    },\r\n    likeItem :\r\n    {\r\n        position : 'relaive',\r\n        justifyContent:\"center\",\r\n        alignItems : 'center',\r\n    },\r\n    someText : \r\n    {\r\n        fontWeight: \"bold\", fontSize: 20, color: appColors.black ,paddingLeft:10,\r\n    },\r\n    color:\r\n    {\r\n        width : 16,\r\n        height : 16,\r\n        borderRadius : 8,\r\n    },\r\n\r\n \r\n    //OFFERS\r\n    propositionPrice :\r\n    {\r\n        flexDirection : 'row',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        paddingVertical : 10,\r\n        paddingHorizontal : 10,\r\n        backgroundColor : appColors.black,\r\n        borderTopWidth : 1,\r\n        borderColor : appColors.white,\r\n\r\n    },\r\n\r\n    offerLeftText :\r\n    {\r\n        color : appColors.white,\r\n    },\r\n    offerRightText :\r\n    {\r\n        color : appColors.white,\r\n    },\r\n    \r\n\r\n\r\n    //\r\n    similarContainer : \r\n    {\r\n        ...filtersStyles.similarContainer,\r\n        top : 10,\r\n        paddingLeft : 1,\r\n        paddingBottom :  20,\r\n        backgroundColor : appColors.white,\r\n        flex : 1,\r\n        //justifyContent : 'center',\r\n        //alignItems : 'center',\r\n        //width : '100%',\r\n    },\r\n    similarTitleContainer :\r\n    {\r\n        paddingTop : 10\r\n    },\r\n    similarProducts :\r\n    {\r\n        flex:1,\r\n        top : 10,\r\n        backgroundColor : appColors.white,\r\n      \r\n        //height : '100%',\r\n    }\r\n\r\n  \r\n})","import { StyleSheet, } from \"react-native\";\r\nimport { appColors, appFont, screenWidth} from \"./commonStyles\";\r\nimport { productStyles } from \"./productStyles\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\nimport { card } from \"./filtersStyles\";\r\n\r\n\r\nexport const commonSimpleComponentsStyles = StyleSheet.create({\r\n    \r\n    likeButton : \r\n    {\r\n        likeIcon :\r\n        {\r\n            //...productStyles.card, isCard paramater\r\n            width : 30,\r\n            height : 30,\r\n            //justifyContent:\"center\", \r\n            alignItems : 'center',\r\n        },\r\n        \r\n    },\r\n    shareButton : \r\n    {\r\n        container :\r\n        {\r\n            flex : 1,\r\n            flexDirection : \"row\",\r\n            paddingHorizontal : 10,\r\n        },\r\n        \r\n    },\r\n\r\n    prevButton : \r\n    {\r\n        container :\r\n        {\r\n            flex : 1,\r\n            flexDirection : \"row\",\r\n            paddingHorizontal : 10,\r\n        },\r\n        \r\n    },\r\n    customText : \r\n    {\r\n        container :\r\n        {\r\n            flex : 1,\r\n            flexDirection : \"row\",\r\n            paddingHorizontal : 10,\r\n        },\r\n        \r\n    },\r\n\r\n    conditionChoice : \r\n    {\r\n        checkBox : \r\n        {\r\n            flexDirection:\"column\", \r\n            justifyContent:\"space-around\", \r\n        },\r\n        \r\n    },\r\n\r\n    activityIndicator :\r\n    {\r\n        container :{\r\n            position : \"absolute\",\r\n            left : 0,\r\n            right : 0,\r\n            top : 0,\r\n            bottom : 0,\r\n            backgroundColor : appColors.lightOrange,\r\n        },\r\n        icon :\r\n        {\r\n\r\n        },\r\n        activityIndicator:{\r\n            width : \"100%\",\r\n            height : \"100%\",\r\n            alignSelf : \"center\",\r\n            justifyContent : \"center\",\r\n            alignContent : \"center\",\r\n        },\r\n        \r\n    },\r\n\r\n    modalActivityIndicator : \r\n    {\r\n        modalContainer :\r\n        {\r\n            flex: 1, \r\n            //position : \"absolute\",\r\n            width: screenWidth,\r\n            alignSelf : 'center',\r\n            alignItems : \"center\",\r\n            justifyContent: 'center',\r\n            borderBottomWidth : 1,        \r\n            backgroundColor: appColors.clearBlack,\r\n            zIndex : 101,\r\n        },\r\n        modalContent : \r\n        {\r\n            ...card,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor : appColors.lightWhite,\r\n            width : '90%',\r\n            paddingHorizontal : 40,\r\n            paddingVertical : 20,\r\n            borderWidth : 1,\r\n            borderColor : appColors.clearBlack,\r\n            borderRadius : 10,\r\n        },\r\n    },\r\n    \r\n    counter : \r\n    {\r\n        container :\r\n       {\r\n            left : 20,\r\n            flexDirection : 'row',\r\n            //backgroundColor : appColors.blue,\r\n            alignItems : 'center',\r\n            justifyContent : 'space-between',\r\n       },\r\n       containerStyleInput :\r\n       {\r\n            width : 50,\r\n            height : 35,\r\n            flexDirection : 'row',\r\n            alignItems : 'center',\r\n            //backgroundColor : 'green',\r\n       },\r\n       inputContainer :\r\n       {\r\n           width : 30,\r\n           height : 25,\r\n           backgroundColor : appColors.lightWhite,\r\n       },\r\n       \r\n    },\r\n\r\n\r\n    priceDetails : \r\n    {\r\n       container :\r\n       {\r\n            padding : 10,\r\n            backgroundColor : appColors.black,\r\n       },\r\n       title:\r\n       {\r\n            fontWeight : 'bold',\r\n            color : appColors.white,\r\n       },\r\n       priceLine:\r\n       {\r\n            flexDirection : 'row',\r\n            justifyContent : 'space-between',\r\n            alignItems : 'center',\r\n            paddingVertical : 5,\r\n       },\r\n       semiTitle:\r\n       {\r\n            color : appColors.secondaryColor3,\r\n       },\r\n       price:\r\n       {\r\n            fontWeight : 'bold',\r\n            color : appColors.white,\r\n       },\r\n       totalPriceLine:\r\n       {\r\n            backgroundColor : appColors.secondaryColor1,\r\n            padding : 5,\r\n       },\r\n       totalPriceText:\r\n       {\r\n            color : appColors.white,\r\n            fontWeight : 'bold',\r\n       }\r\n        \r\n    },\r\n\r\n    temporaryNotification :\r\n    {\r\n        container :\r\n        {\r\n            backgroundColor : appColors.clearBlack,\r\n            position : 'absolute',\r\n            bottom : 0,\r\n            left : 0,\r\n            right : 0,\r\n            padding : 20,\r\n            justifyContent : 'center',\r\n            alignItems : 'center',\r\n        },\r\n        message:\r\n        {\r\n            color : appColors.white,\r\n        },\r\n    },\r\n\r\n    \r\n\r\n})","export const offersDatas = [\r\n\t{\r\n\t\tid : 1,\r\n\t\tseller : \"Francky\",\r\n\t\tbuyer : \"Thomas\",\r\n\t\tproduct : \"1\",\r\n\t\trealPrice : 2000,\r\n\t\toffers : [\r\n\t\t\t{_id:\"1\",from:\"Thomas\",price:\"1200\", hasGotResponse:0},{_id:\"2\",from:\"Francky\",price:\"1800\",hasGotResponse:0},{_id:\"3\",from:\"Thomas\",price:\"1300\",hasGotResponse:1,},\r\n\t\t\t{_id:\"4\",from:\"Francky\",price:\"1800\",hasGotResponse:1},{_id:\"5\",from:\"Thomas\",price:\"1300\",hasGotResponse:2,},{_id:\"6\",from:\"Thomas\",price:\"1300\",hasGotResponse:0,},\r\n\t\t],\r\n\t}\r\n]\r\nexport const defaultOffer = [{_id:\"100\",hasGotResponse:0}]\r\n\r\n\r\nexport const settings = [\r\n\t{\r\n\t\tname : \"Parametres Du Compte\",\r\n\t\tcomponent : \"AccountSettings\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"Changer De Mot De Passe\",\r\n\t\tcomponent : \"PasswordChange\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"Mes Adresses\",\r\n\t\tcomponent : \"Address\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"A Propos De Nous\",\r\n\t\tcomponent : \"AboutUs\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"Parrainage\",\r\n\t\tcomponent : \"Referral\",\r\n\t\tavailable : false,\r\n\t},\r\n\t{\r\n\t\tname : \"Devenir Une Boutique Pro\",\r\n\t\tcomponent : \"OpenShop\",\r\n\t\tavailable : false,\r\n\t},\r\n\t{\r\n\t\tname : \"Admin\",\r\n\t\tcomponent : \"AdminPanel\",\r\n\t\tavailable : true,\r\n\t},\r\n\t/*{\r\n\t\tname : \"Admina\",\r\n\t\tcomponent : \"AdminPanel\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"Admin\",\r\n\t\tcomponent : \"AdminPanel\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"Admin\",\r\n\t\tcomponent : \"AdminPanel\",\r\n\t\tavailable : true,\r\n\t},*/\r\n]\r\n\r\n\r\n\r\n\r\nexport const notifications = \r\n\t{\r\n\t\tUSER : {\r\n\t\t\tON_REGISTERED : { \r\n\t\t\t\ttitle : \"Bienveue!!!\",\r\n\t\t\t\tmessage : \"Nous sommes heureux de vous compter parmi nous. Sur jiraShopping, Vendez ce que vous voulez gratuitement.\\nTout le monde merite une seconde chance, meme votre produit.\",\r\n\t\t\t\taction : \"Account\",\r\n\t\t\t},\r\n\t\t},\r\n\r\n\tORDERS : {\r\n\t\tON_NEW_ORDER : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tPAYMENT_SUCCESSFUL : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tPAYMENT_FAILED : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_ORDER_PENDING : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_ORDER_SHIPPED : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_ORDER_DELIVERED : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t},\r\n\r\n\tOFFERS : {\r\n\t\tON_NEW_OFFER : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_OFFER_RESPONSE : {\r\n\t\t\tON_ACCEPTED : { \r\n\t\t\t\tmessage : \"\",\r\n\t\t\t\taction : \"\",\r\n\t\t\t},\r\n\t\t\tON_REFUSED : { \r\n\t\t\t\tmessage : \"\",\r\n\t\t\t\taction : \"\",\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\r\n\tPRODUCTS : {\r\n\t\tON_NEW_LIKE : {\r\n\t\t\ttitle : \"Nouveau Like\",\r\n\t\t\tmessage : \"Un de vos produits a reçu un nouveau Like. Précipitez-vous pour faire une propositon.\",\r\n\t\t\taction : \"ProductDetails\",\r\n\t\t},\r\n\t\tON_NEW_COMMENT : { \r\n\t\t\ttitle : \"Nouveau Commentaire\",\r\n\t\t\tmessage : \"Votre produit a un nouveau commentaire. Profitez-en pour séduire le client.\",\r\n\t\t\taction : \"AllComments\",\r\n\t\t},\r\n\t\tON_RESPONSE_COMMENT : { \r\n\t\t\ttitle : \"Nouveau Commentaire\",\r\n\t\t\tmessage : \"Votre commentaire a reçu a une nouvelle réponse. Profitez-en pour séduire le client.\",\r\n\t\t\taction : \"AllComments\",\r\n\t\t},\r\n\t\tON_NEW_BASKET : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_DELETE_BASKET : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_PRODUCT_UPDATED : { \r\n\t\t\ttitle : \"Produit Mis A Jour\",\r\n\t\t\tmessage : \"Un produit que vous suivez a ete mis a jour. Précipitez-vous pour placer un nouveau deal.\",\r\n\t\t\taction : \"ProductDetails\",\r\n\t\t},\r\n\t\tON_PRODUCT_CREADTED : { \r\n\t\t\ttitle : \"Nouveau Produit\",\r\n\t\t\tmessage : \"Une boutique que vous suivez vient d'ajouter un nouveau produit. Précipitez-vous pour faire une offre.\",\r\n\t\t\taction : \"ProductDetails\",\r\n\t\t},\r\n\t},\r\n\r\n\tADMIN : {\r\n\t\tMISSED_YOU : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tNEW_PRODUCT : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tDONT_WASTE_TIME : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tBE_CAREFULL : {\r\n\t\t\tBAD_COMMENT : { \r\n\t\t\t\tmessage : \"\",\r\n\t\t\t\taction : \"\",\r\n\t\t\t},\r\n\t\t\tBAD_PRODUCT : { \r\n\t\t\t\tmessage : \"\",\r\n\t\t\t\taction : \"\",\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { server } from '../../remote/server';\r\nimport { useCallback } from 'react';\r\nimport { sendNotifications } from '../../utils/commonAppNetworkFunctions' \r\n// slices/favouritesSlice.js\r\n\r\nconst loggedUser = \"Francky\";\r\nconst loggedUserId = \"66715deae5f65636347e7f9e\";\r\n\r\n// Thunks asynchrones\r\n\r\n// Equivalent de la fonction `addFavourite` dans FavouritesContext\r\nexport const addFavourite = createAsyncThunk(\r\n  'favourites/addFavourite',\r\n  async ({ item, bool, user }, { rejectWithValue }) => {\r\n    try {\r\n      let response = {};\r\n      const favourite = {\r\n        user: user._id,\r\n        username: user.username,\r\n        product: item._id,\r\n      };\r\n\r\n      if (bool) {\r\n          response = await fetch(`${server}/api/datas/favourites/update/${user._id}`, {\r\n              method: 'POST',\r\n              body: JSON.stringify(favourite),\r\n              headers: { 'Content-Type': 'application/json' },\r\n          });\r\n\r\n          response = await fetch(`${server}/api/datas/products/likes/update/${item._id}`, {\r\n              method: 'PUT',\r\n              body: JSON.stringify({ updateLikes: 1, userId:user._id }),\r\n              headers: { 'Content-Type': 'application/json' },\r\n          });\r\n\r\n          //console.log(item.seller)\r\n          //'tem/favour'tes cont'ent les produ'ts brutes de la BDD differencts de ceux de ModifiedProducts\r\n          if(!item.favourites.some(el => el._id===user._id))\r\n          {\r\n              await sendNotifications({ user:item.seller._id, source:\"app\", model:\"PRODUCTS\", type:\"ON_NEW_LIKE\", datas:item._id })\r\n          }\r\n        \r\n          \r\n\r\n      } else {\r\n          response = await fetch(`${server}/api/datas/favourites/remove/${user._id}`, {\r\n              method: 'PUT',\r\n              body: JSON.stringify(favourite),\r\n              headers: { 'Content-Type': 'application/json' },\r\n          });\r\n\r\n          response = await fetch(`${server}/api/datas/products/likes/update/${item._id}`, {\r\n              method: 'PUT',\r\n              body: JSON.stringify({ updateLikes: -1, userId:user._id }),\r\n              headers: { 'Content-Type': 'application/json' },\r\n          });\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Erreur lors de la requête addFavourite');\r\n      }\r\n\r\n      //return { item, bool };\r\n    } catch (error) {\r\n        console.error(error)\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Equivalent de la fonction `fetchUserFavourites` dans FavouritesContext\r\nexport const fetchUserFavourites = createAsyncThunk(\r\n  'favourites/fetchUserFavourites',\r\n  async ({ user, page }, { getState, rejectWithValue }) => {\r\n    //console.log(\"page\")\r\n    //console.log(user)\r\n    try {\r\n      const response = await fetch(`${server}/api/datas/favourites/get/${user}?page=${page}`);\r\n      if (!response.ok) {\r\n        throw new Error('Erreur lors de la requête Fetch favourite'+await response.text());\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n        console.error(error)\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Slice Redux\r\nconst favouritesSlice = createSlice({\r\n  name: 'favourites',\r\n  initialState: {\r\n    favourites: [], // Equivalent de `const [favourites, setFavourites] = useState([])`\r\n    liked: null, // Equivalent de `const [liked, setLikedIcon] = useState()`\r\n    isLoading: false, // Equivalent de `const [isLoading, setIsLoading] = useState(false)`\r\n    disableLikeButton: false, // Equivalent de `const [disableLikeButton, setDisableLikeButton] = useState(false)`\r\n    hasMore: true, // Equivalent de `const [hasMore, setHasMore] = useState(true)`\r\n    page: 1, // Equivalent de `const [page, setPage] = useState(1)`\r\n    error: null,\r\n    addLike : 0,\r\n    modifiedProducts : [],\r\n  },\r\n  reducers: {\r\n    addLocalFavourite(state, action) {\r\n        //console.log(action.payload)\r\n      const {product, user} = action.payload;\r\n      //console.log(user)\r\n      if (!state.favourites.some(item => item._id === product._id)) {\r\n        const updatedProduct = {\r\n          ...product,\r\n          likes : product.likes+1,\r\n          favourites: [user, ...product.favourites]\r\n        };\r\n\r\n        state.favourites.unshift(updatedProduct);\r\n        state.modifiedProducts.unshift(updatedProduct);\r\n        //console.log(product.likes)\r\n      }\r\n      //console.log(state.favourites)\r\n      state.addLike = state.addLike+1\r\n    },\r\n    // Méthode pour supprimer un produit de la liste des favoris (exemple)\r\n    removeLocalFavourite(state, action) {\r\n      const {product, user} = action.payload;\r\n\r\n      const updatedProduct = {\r\n        ...product,\r\n        likes : product.likes-1,\r\n        favourites: product.favourites.filter(item => item._id !== user._id)\r\n      };\r\n\r\n      const fav = state.favourites.filter(item => item._id !== product._id);\r\n      const mp = state.modifiedProducts.map(item => {\r\n          if (item._id === product._id) {\r\n            return updatedProduct \r\n          }\r\n            return item\r\n        })\r\n        \r\n        state.favourites = fav\r\n        state.modifiedProducts = mp\r\n        state.addLike = state.addLike-1\r\n    },\r\n    addModifiedProduct(state, action) {\r\n      //console.log(\"addModifiedProduct\")\r\n      const product = action.payload\r\n      const isModifiedProduct = state.modifiedProducts.some(item => item._id === product._id);\r\n      if(isModifiedProduct)\r\n      {\r\n        const mp = state.modifiedProducts.map(item => {\r\n          if (item._id === product._id) {\r\n            return product \r\n          }\r\n          return item\r\n        })\r\n\r\n        state.modifiedProducts = mp\r\n      }\r\n      else\r\n      {\r\n        const updatedProducts = [product, state.modifiedProducts]\r\n        state.modifiedProducts = updatedProducts\r\n      }\r\n      //state.favourites = state.modifiedProducts\r\n    },\r\n    setLikedIcon(state, action) {\r\n      state.liked = action.payload; // Equivalent de `setLikedIcon`\r\n    },\r\n    setIsLoading(state, action) {\r\n      state.isLoading = action.payload; // Equivalent de `setIsLoading`\r\n    },\r\n    setDisableLikeButton(state, action) {\r\n      state.disableLikeButton = action.payload; // Equivalent de `setDisableLikeButton`\r\n    },\r\n    setPage(state, action) {\r\n      state.page = action.payload; // Equivalent de `setPage`\r\n    },\r\n    setHasMore(state, action) {\r\n      state.hasMore = action.payload; // Equivalent de `setHasMore`\r\n    },\r\n    addFavouriteContext(state, action) {\r\n      const { item, bool } = action.payload;\r\n      //console.log(item)\r\n      const favouriteIds = new Set(state.favourites.map(fav => fav._id));\r\n      const isPresent = favouriteIds.has(item._id);\r\n\r\n      if (bool && !isPresent) {\r\n        state.favourites = [item, ...state.favourites];\r\n      } else if (!bool && isPresent) {\r\n        state.favourites = state.favourites.filter(fav => fav._id !== item._id);\r\n      }\r\n    },\r\n    updateLocalFavourites(state, action) {\r\n        const { item, isAdding } = action.payload;\r\n        const existingIndex = state.favourites.findIndex(fav => fav._id === item._id);\r\n  \r\n        if (isAdding) {\r\n          if (existingIndex === -1) {\r\n            state.favourites.push(item);\r\n          }\r\n        } else {\r\n          if (existingIndex !== -1) {\r\n            state.favourites.splice(existingIndex, 1);\r\n          }\r\n        }\r\n      },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(addFavourite.pending, (state) => {\r\n        state.isLoading = true; // eviter un render pour eviter product.likes+2\r\n      })\r\n      .addCase(addFavourite.fulfilled, (state, action) => {\r\n        state.isLoading = false; // eviter un render pour eviter product.likes-2\r\n      })\r\n      .addCase(addFavourite.rejected, (state, action) => {\r\n        state.isLoading = false; // Equivalent de `setIsLoading(false)`\r\n        state.error = action.payload; // Gestion des erreurs\r\n      })\r\n      .addCase(fetchUserFavourites.pending, (state) => {\r\n        state.isLoading = true; // Equivalent de `setIsLoading(true)`\r\n      })\r\n      .addCase(fetchUserFavourites.fulfilled, (state, action) => {\r\n        state.isLoading = false; // Equivalent de `setIsLoading(false)`\r\n        const products = action.payload.datas;\r\n        if (products.length > 0) {\r\n          state.favourites = [...state.favourites, ...products[0].productDetails]; // Equivalent de `setFavourites([...prevProducts, ...products[0].productDetails])`\r\n          state.modifiedProducts = [...state.favourites, ...products[0].productDetails]; \r\n          state.page += 1; // Equivalent de `setPage((prevPage) => prevPage + 1)`\r\n        } else {\r\n          state.hasMore = false; // Equivalent de `setHasMore(false)`\r\n        }\r\n      })\r\n      .addCase(fetchUserFavourites.rejected, (state, action) => {\r\n        state.isLoading = false; // Equivalent de `setIsLoading(false)`\r\n        state.error = action.payload; // Gestion des erreurs\r\n      });\r\n  },\r\n});\r\n\r\nexport const isProductFavourite = (state, productId) => {\r\n    return state.favourites.favourites.some(product => product._id === productId);\r\n  };\r\n  export const hasBeenModifiedProduct = (state, productId) => {\r\n    return state.favourites.modifiedProducts.some(product => product._id === productId);\r\n  };\r\n\r\nexport const { setLikedIcon, setIsLoading, setDisableLikeButton, setPage, setHasMore, addFavouriteContext, updateLocalFavourites,  addLocalFavourite, removeLocalFavourite, addModifiedProduct } = favouritesSlice.actions;\r\n\r\nexport default favouritesSlice.reducer;\r\n","\r\nimport {Alert} from 'react-native';\r\nimport { notifications } from './offersDatas';\r\nimport { server } from '../remote/server';\r\n\r\n\r\n//\r\n\r\n\r\n\r\nexport  const sendNotifications = async ({user, source, model, type, datas}) => {\r\n    const notif = notifications[model]\r\n    const message = notif[type].message\r\n    const action = notif[type].action\r\n    const title = notif[type].title\r\n//console.log(notif)\r\n    const notification = {\r\n        user : user,\r\n        source : source,\r\n        modele : model.toLowerCase(),\r\n        type : type.toLowerCase(),\r\n        message : message,\r\n        action : action,\r\n        read : 0,\r\n        title : title,\r\n        datas : datas\r\n    }\r\n    \r\n        //console.log(notification.type)\r\n            try{\r\n                //console.log(\"Ok\")\r\n                const response = await fetch(`${server}/api/datas/notifications/update/${user}`, {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify(notification),\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },})\r\n                            //console.log(datas)\r\n                if (!response.ok) {\r\n                    throw new Error('Erreur lors de la requête'+(await response.text()));\r\n                }\r\n\r\n                return true\r\n\r\n            }catch(error){\r\n                console.error(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n                return false\r\n            }\r\n}\r\n\r\n\r\nexport  const getNotifications = async (user, page, limit) => {\r\n    //console.log(username, page, limit)\r\n    try{\r\n        const response = await fetch(`${server}/api/datas/notifications/get/${user._id}?page=${page}&limit=${limit}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'Application/json',\r\n            },});\r\n            \r\n        const datas = await response.json()\r\n        //console.log(datas)\r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n       // console.log(datas.notifications)\r\n        return datas.notifications\r\n    }catch(error){\r\n        console.log(error)\r\n        //Alert.alert(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return []\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport  const updateNotificationsRead = async ({user, id}) => {\r\n    console.log(user, id)\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/notifications/read/${user}/${id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({}),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n        },})          \r\n        //const datas = await response.json()\r\n                //console.log(datas)\r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n            //console.log(datas)\r\n            return true\r\n    }catch(error){\r\n        console.log(error)\r\n        Alert.alert(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return false\r\n    }\r\n}\r\n\r\nexport  const getProductFromNotifications = async (id) => {\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/products/get/${id}`);            \r\n        const data = await response.json()\r\n       \r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n         //console.log(data)\r\n        return data\r\n    }catch(error){\r\n        //console.log(error)\r\n        console.log(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return []\r\n    }\r\n}\r\n\r\n\r\n//OFFERS\r\nexport  const getOffers = async (user, page, limit) => {\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/offers/get?user=${user._id}&page=${page}&limit=${limit}`);            \r\n        const data = await response.json()\r\n       \r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n        //console.log(data.offers)\r\n        return data.offers\r\n    }catch(error){\r\n        //console.log(error)\r\n        console.log(\"Get Offers\", \"Une erreur est survenue! \"+ error,)\r\n        return []\r\n    }\r\n}\r\n\r\nexport  const updateOfferRead = async (item) => {\r\n    //console.log(item)\r\n    const offer = {\r\n        seller : item.seller._id,\r\n        buyer : item.buyer._id,\r\n        product : item.product._id\r\n    }\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/offers/offer/read`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(offer),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n        },})          \r\n        //const datas = await response.json()\r\n                //console.log(datas)\r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n            //console.log(datas)\r\n            return true\r\n    }catch(error){\r\n        console.log(error)\r\n        Alert.alert(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return false\r\n    }\r\n}\r\n\r\n\r\n\r\n//ORDERS\r\n\r\nexport  const getOrders = async (user, page, limit) => {\r\n    console.log(\"data.orders\")\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/orders/get/${user._id}?page=${page}&limit=${limit}`);            \r\n        const data = await response.json()\r\n       \r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n        \r\n        return data.orders\r\n    }catch(error){\r\n        console.log(error)\r\n        console.log(\"Get Offers\", \"Une erreur est survenue! \"+ error,)\r\n        return []\r\n    }\r\n}\r\n\r\nexport  const updateOrderRead = async (itemId, productId) => {\r\n    const order = {\r\n        product : productId\r\n    }\r\n\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/orders/offer/update/read/${itemId}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(order),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n        },})          \r\n        //const datas = await response.json()\r\n                //console.log(datas)\r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n            //console.log(datas)\r\n            return true\r\n    }catch(error){\r\n        console.log(error)\r\n        Alert.alert(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return false\r\n    }\r\n}\r\n\r\nexport  const updateOrderStatus = async (itemId, productId, status) => {\r\n    //console.log(item)\r\n    const order = {\r\n        product : productId,\r\n        status : status\r\n    }\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/orders/offer/update/status/${itemId}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(order),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n        },})          \r\n        //const datas = await response.json()\r\n                //console.log(datas)\r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n            //console.log(datas)\r\n            return true\r\n    }catch(error){\r\n        console.log(error)\r\n        Alert.alert(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return false\r\n    }\r\n}\r\n\r\n\r\n\r\nexport  const addOder = async (user, product, price) =>{\r\n    \r\n}\r\n\r\nexport  const getLocalOrders = async (type) => {\r\n    switch(type)\r\n    {\r\n        case \"delivered\" : //acheve\r\n            break\r\n        case \"pending\" || \"shipped\" : //en cours\r\n            break\r\n        case \"canceled\" : //annulé\r\n            break\r\n        default : break\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//SEND EMAIL\r\n\r\nexport  const sendEmail = async (email, senderEmail, senderName, receivers, subject, htmlMessage) => {\r\n    const apiKey = 'API_KEY';\r\n    const apiUrl = 'https://api.brevo.com/v3/smtp/email';\r\n  \r\n    const emailData = {\r\n      sender: { email: sender, name: senderName },\r\n      //to: [{ email: reveiverEmail, name: receiverName }],\r\n      to: receivers,\r\n      subject: subject,\r\n      htmlContent: htmlMessage,\r\n    };\r\n  \r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'api-key': apiKey,\r\n        },\r\n        body: JSON.stringify(emailData),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        console.log('Email envoyé avec succès:', responseData);\r\n      } else {\r\n        const errorData = await response.json();\r\n        console.error('Erreur lors de l\\'envoi de l\\'email:', errorData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur de la requête:', error);\r\n    }\r\n  }\r\n","import React, { useState, useEffect, createContext, useContext, useRef, useCallback } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, ActivityIndicator, Image, Modal, Share  } from 'react-native';\r\n\r\nimport { Input } from 'react-native-elements';\r\nimport BadgeIcon from './BadgeIcon';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { productStyles } from '../../styles/productStyles';\r\nimport { productDetailsStyles } from '../../styles/productDetailsStyles';\r\nimport { searchBarStyles } from '../../styles/searchBarStyles';\r\nimport { commonSimpleComponentsStyles } from '../../styles/commonSimpleComponentsStyles';\r\nimport { appFont, appColors, appFontSize, customText } from '../../styles/commonStyles';\r\n//import { CheckBox } from 'react-native-elements';\r\nimport { CheckBox } from '@rneui/themed';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Icon } from 'react-native-elements';\r\nimport { formatMoney, pluralize, formatLikes, calculateTotalPrice, handleSharePress } from '../../utils/commonAppFonctions';\r\nimport { choosePrice, hasPropositionPrice } from '../../utils/commonAppFonctions';\r\n//contexte\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addFavourite, addFavouriteContext, setLikedIcon, updateLocalFavourites, isProductFavourite, addLocalFavourite, removeLocalFavourite} from '../../store/favourites/favouritesSlice'; \r\nimport { productsImagesPath } from '../../remote/server';\r\nimport { Facebook } from 'react-content-loader/native';\r\n\r\n\r\n\r\nexport  const LikeButton = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { favourites, liked } = useSelector(state => state.favourites);\r\n    const { item, hasLikedItem, _handleLikePressed, synchro, isCard, styles, user, noText } = props;\r\n    const style = styles || {};\r\n\r\n    const timeoutRef = useRef(null);\r\n   // const isFavourite = useSelector((state) => isProductFavourite(state, item._id))\r\n    const isFavourite = hasLikedItem\r\n    const [like, setLikeIcon] = useState(isFavourite);\r\n    \r\n\r\n\r\n    const handleLikePressed = useCallback((product) => {\r\n        _handleLikePressed(product)\r\n        //synchro ? _handleLikePressed() : _handleLikePressed();\r\n        //dispatch(addFavouriteContext({ item:item, bool: !like }));\r\n        //setLikeIcon(!isFavourite);\r\n        \r\n\r\n        \r\n\r\n        if (timeoutRef.current) {\r\n            clearTimeout(timeoutRef.current);\r\n        }\r\n\r\n        // Configurer un nouveau timeout\r\n        timeoutRef.current = setTimeout(() => {\r\n            if (isFavourite) {\r\n                //product.likes--\r\n                dispatch(removeLocalFavourite({product, user}));\r\n            } else {\r\n                //product.likes++\r\n                dispatch(addLocalFavourite({product, user}));\r\n            }\r\n            dispatch(addFavourite({ item:item, bool:!like, user:user }));\r\n        }, 500);\r\n        \r\n\r\n    },[])\r\n\r\n   useEffect(() => {\r\n        // Ici, nous devons également mettre à jour l'état local 'like' en fonction du state global\r\n\r\n       //setLikeIcon(isFavourite);\r\n        //dispatch(setLikedIcon(isFavourite)); // Met à jour l'état global 'liked'\r\n        //console.log(\"okj\")\r\n    },[]);\r\n\r\n    return (\r\n        <Pressable\r\n            style={[commonSimpleComponentsStyles.likeButton.likeIcon, isCard ? productStyles.card : false]}\r\n            onPress={() => handleLikePressed(item)}\r\n        >\r\n            {!hasLikedItem\r\n                ? <BadgeIcon name=\"heart-outline\" size={24} color={style.color} badgeCount={0} styles={{zIndex:99}} />\r\n                : <BadgeIcon name=\"heart-sharp\" size={24} color={appColors.secondaryColor1} badgeCount={0} styles={{}} />\r\n            }\r\n            { item.likes > 0 && !noText &&\r\n                    <View style={[{flexDirection:'row'}]}>\r\n                    <View style={{width:5,}}></View>\r\n                        <Text style={[customText.text, {color:style.color}, {fontSize:12,fontWeight:styles.fontWeight || 'bold'}]}>{formatLikes(item.likes) || 1}</Text> \r\n                    </View>\r\n            }\r\n        </Pressable>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport  const PrevButton = (props) => {\r\n    const {styles} = props\r\n    const navigation = useNavigation()\r\n    const color = styles ? styles.color : appColors.black\r\n    const size = styles ? styles.size : 24\r\n    return(\r\n        <Pressable onPress={() => {navigation.goBack()}}>\r\n            <Icon name='arrow-back' type='ionicon' color={color} size={size} />\r\n        </Pressable>\r\n    )\r\n}\r\n\r\n/*\r\nexport  const ShareButton = (props) => {\r\n    const { link, size, color } = props\r\n    return(\r\n        <Pressable style={[commonSimpleComponentsStyles.shareButton,]} onPress = { ()=>{ console.log(\"share\"); }}>\r\n            <BadgeIcon name=\"share-social-sharp\" size={size} color={color} styles={{}} />\r\n        </Pressable>\r\n    )\r\n}\r\n*/\r\n\r\nexport  const ShareButton = (props) => {\r\n    const { link, size, color } = props\r\n    //console.log(link)\r\n\r\n    return(\r\n        <Pressable style={[commonSimpleComponentsStyles.shareButton,]} onPress = { ()=>{ handleSharePress(link) }}>\r\n            <BadgeIcon name=\"share-social-sharp\" size={size} color={color} styles={{}} />\r\n        </Pressable>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport  const NotificationsSkeleton = (props) => {\r\n    const {number} = props\r\n    return (\r\n        <View style={[{flex:1,paddingHorizontal:10}]}>\r\n        {\r\n          (new Array(number).fill(1)).map((_,key) => {\r\n            return (\r\n              <View key={key}>\r\n                <Facebook backgroundColor={appColors.skeletonBackgroundColor} foregroundColor={appColors.skeletonForegrundColor} />\r\n              </View>\r\n            )\r\n          })\r\n       }\r\n      </View>\r\n    )\r\n}\r\n\r\n\r\nexport  const ConditionChoice = (props) => {\r\n    const {styles, updateConditions, conditions } = props\r\n    \r\n    return(\r\n        <View style={commonSimpleComponentsStyles.conditionChoice.checkBox}>\r\n             <Pressable style={[styles.itemContainer,]}>\r\n                <CheckBox title='Neuf' checked={conditions[\"new\"]} onPress={() => { updateConditions(\"new\")  }} containerStyle={[styles.contentContainer,{}]} textStyle={[customText.text,styles.checkBoxText]}/>\r\n            </Pressable>\r\n\r\n            <Pressable style={[styles.itemContainer,]}>\r\n                <CheckBox title='Utilisé' checked={conditions[\"old\"]} onPress={() => { updateConditions(\"old\"); }} containerStyle={[styles.contentContainer,{}]} textStyle={[customText.text,styles.checkBoxText]} />\r\n            </Pressable>\r\n\r\n            <Pressable style={[styles.itemContainer,]}>\r\n                <CheckBox title='Peu Utilisé' checked={conditions[\"new used\"]} onPress={() => { updateConditions(\"new used\");  }} containerStyle={[styles.contentContainer,{}]} textStyle={[customText.text,styles.checkBoxText]} />\r\n            </Pressable>\r\n        </View>    \r\n        )\r\n}\r\n\r\n\r\nexport  const CustomButton = (props) => {\r\n    const { text, color, backgroundColor, onPress, styles, disabled } = props\r\n    \r\n    const styles_ = StyleSheet.create({\r\n        bg:{backgroundColor:(backgroundColor || appColors.blue)},\r\n        color:{color:(color || appColors.white),}\r\n    })\r\n    return(\r\n       <Pressable style={[{justifyContent:\"center\",alignItems:\"center\"},styles.pressable, styles_.bg]} onPress={onPress} disabled={disabled}>\r\n            <Text style={[styles.text, styles_.color]}>{text}</Text>\r\n       </Pressable> \r\n        )\r\n}\r\n\r\nexport  const CustomActivityIndicator = (props) => {\r\n\r\n    return (\r\n        <View style={[commonSimpleComponentsStyles.activityIndicator.container,{}]}>\r\n                <ActivityIndicator style={[commonSimpleComponentsStyles.activityIndicator.activityIndicator,{}]} size=\"large\" color={appColors.secondaryColor1} />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport  const CustomModalActivityIndicator = (props) => { \r\n    const {onRequestClose, isLoading, size, color, message} = props\r\n    return (\r\n        <Modal visible={isLoading} transparent={true}  onRequestClose={() => onRequestClose(true)}>\r\n                <View style={[commonSimpleComponentsStyles.modalActivityIndicator.modalContainer]}>\r\n                    <View style={[commonSimpleComponentsStyles.modalActivityIndicator.modalContent]}>\r\n                        <Text style={[customText.text, {fontWeight:'bold'}]}>{message}</Text>\r\n                        <ActivityIndicator color={color} size={size} />\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n    )\r\n}\r\n\r\nexport  const Counter = (props) => {\r\n    const { product, number, dispatch, setNumber, quantities, limit} = props\r\n\r\n    /*\r\n         <Input value={quantities[product2._id]} onChangeText={(qt)=>{updateQuantities(product2._id, qt)}}\r\n                inputMode='numeric'\r\n                multiline={false}\r\n                maxLength={2}\r\n                placeholder='1'\r\n                placeholderTextColor={appColors.secondaryColor3}\r\n                inputStyle = {[searchBarStyles.inputText, {color:appColors.gray,}]}\r\n                onFocus={() => updateQuantitiesFocused(product2._id, true)}\r\n                onBlur={() => updateQuantitiesFocused(product2._id, false)}\r\n                underlineColorAndroid='transparent'\r\n                style={[{textAlign : 'center'}]}\r\n                containerStyle={[{justifyContent:'center',alignItems:'center'}]}\r\n                inputContainerStyle = {[radioProductStyles.inputContainer, quantitiesFocused[product2._id] && radioProductStyles.inputContainerFocused,]}\r\n            />\r\n    */\r\n   const num = isNaN(parseInt(number)) ? 1 : parseInt(number)\r\n   //console.log(number)\r\n    return (\r\n        <View style={[commonSimpleComponentsStyles.counter.container]}>\r\n            <Pressable style={[{}]} onPress={()=>{setNumber(product, Math.max(num-1, 1))}}>\r\n                <Icon name=\"remove\" type=\"ionicon\" color={appColors.black} size={20} />\r\n            </Pressable>\r\n            <Input value={num}\r\n                inputMode='numeric'\r\n                editable={false}\r\n                multiline={false}\r\n                maxLength={2}\r\n                placeholder={num+\"\"}\r\n                placeholderTextColor={appColors.clearBlack}\r\n                inputStyle = {[searchBarStyles.inputText, {color:appColors.clearBlack,fontSize:12}]}\r\n                \r\n                underlineColorAndroid='transparent'\r\n                style={[{textAlign : 'center'}]}\r\n                containerStyle={[commonSimpleComponentsStyles.counter.containerStyleInput]}\r\n                inputContainerStyle = {[commonSimpleComponentsStyles.counter.inputContainer,]}\r\n            />\r\n            <Pressable onPress={()=>{setNumber(product, Math.min(num+1, limit)) }}>\r\n                <Icon name=\"add\" type=\"ionicon\" color={appColors.black} size={20} />\r\n            </Pressable>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport  const DisplayPrice = (props) => {\r\n    const { product } = props\r\n    //import { formatMoney, pluralize, choosePrice, hasPropositionPrice } from '../../utils/commonAppFonctions';\r\n\r\n    return (\r\n        <View style={[{flexDirection : 'row'}]}>\r\n            <Text style={[customText.text, {top:10,fontWeight:\"bold\"}]}>{formatMoney(choosePrice(product))} XAF</Text>                                                    \r\n\r\n            {\r\n                hasPropositionPrice(product) \r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nexport  const TemporaryNotification = (props) => {\r\n    const {message} = props\r\n    return (\r\n        <View style={[commonSimpleComponentsStyles.temporaryNotification.container,{}]}>\r\n            <Text style={[customText, commonSimpleComponentsStyles.temporaryNotification.message]}>{message}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport  const PriceDetails = (props) => {\r\n    const {products, title, closePriceDetails} = props\r\n    let product; \r\n// console.log(products)\r\n        const totalPrice = calculateTotalPrice(products)\r\n\r\n        let passed_products = []\r\n        const kargoPrice = products.reduce((total, prod) =>{\r\n          \r\n            //Si cest differents sellers ça marche mais sil ya un meme seller pour 2 produits cest pas bon\r\n            //return prod.feesBy=='buyer' ?  total+parseInt(prod.kargoPrice) : total\r\n            let toAdd;\r\n            if(passed_products.some(p => (p.seller._id==prod.seller._id && p.feesBy=='buyer') ))\r\n            {\r\n                toAdd = 0\r\n            }\r\n            else\r\n            {\r\n                toAdd = prod.feesBy=='buyer' ?  parseInt(prod.kargoPrice) : 0\r\n                passed_products.push(prod)\r\n            }\r\n\r\n            return  total + toAdd\r\n           \r\n        }, 0)\r\n//console.log(kargoPrice)\r\n        const feesBy = products.some(p => p.feesBy == 'buyer')\r\n\r\n        product = { newPrice:totalPrice, feesBy:feesBy?'buyer':'seller', kargoPrice:kargoPrice, orderQuantity:products.reduce((t,p) => { return t+parseInt(p.orderQuantity||1)}, 0) }\r\n   \r\n\r\n\r\n    const transport = product.feesBy==='buyer' ? product.kargoPrice : 0\r\n    \r\n    return (\r\n        <View style={[commonSimpleComponentsStyles.priceDetails.container]}>\r\n            <View style={[{flexDirection:'row', justifyContent:'space-between', paddingRight:10}]}>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.title]}>{title.toUpperCase()}</Text>\r\n                <Pressable style={[{}]} onPress={()=>{closePriceDetails(false)}}>\r\n                    <Icon type='ionicon' name=\"close-circle\" size={24} color={appColors.secondaryColor1} />   \r\n                </Pressable>            \r\n            </View>\r\n\r\n            <View style={{height:10}}></View>\r\n\r\n            <View  style={[commonSimpleComponentsStyles.priceDetails.priceLine]}>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle]}>Prix Réel</Text>\r\n                <Text style={[customText.text,commonSimpleComponentsStyles.priceDetails.price]}>{formatMoney(product.newPrice)} XAF</Text>\r\n            </View>\r\n\r\n            <View  style={[commonSimpleComponentsStyles.priceDetails.priceLine]}>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle]}>Quantité</Text>\r\n                <Text style={[customText.text,commonSimpleComponentsStyles.priceDetails.price]}> {product.orderQuantity} </Text>\r\n            </View>\r\n\r\n            <View  style={[commonSimpleComponentsStyles.priceDetails.priceLine]}>\r\n                <View>\r\n                    <Text  style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle]}>Frais De Transport</Text>\r\n                    <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle, {fontStyle:'italic', fontSize:11}]}>Payé par {product.feesBy==='seller'?'vous':'acheteur'}</Text>\r\n                </View>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.price, product.feesBy==='seller'?{fontStyle:'italic',fontSize:14}:null]}>{product.feesBy==='buyer'?`-${formatMoney(product.kargoPrice)} XAF`:'Payé par le vendeur'} </Text>\r\n            </View>\r\n\r\n            <View  style={[commonSimpleComponentsStyles.priceDetails.priceLine]}>\r\n                <Text  style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle]}>Commission(-10%)</Text>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.price]}>-{formatMoney(product.newPrice*10/100)}  XAF</Text>\r\n            </View>\r\n\r\n            <View  style={[commonSimpleComponentsStyles.priceDetails.priceLine, commonSimpleComponentsStyles.priceDetails.totalPriceLine]}>\r\n                <Text  style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle, commonSimpleComponentsStyles.priceDetails.totalPriceText]}>Total - Vos Gain</Text>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.price]}>{formatMoney((product.newPrice-product.newPrice*10/100))}  XAF</Text>\r\n            </View>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport  const MinifyHorizontalProduct = (props) => {\r\n    const { product, styles, onPress } = props\r\n    function formatName(name){\r\n        if(name.length > 30) return name.substr(0,30)+'...'\r\n            return name\r\n    }\r\n    return (\r\n        <Pressable style={[styles.productContainer]} onPress={()=>{onPress(product)}}>\r\n            <Image source={{ uri: `${productsImagesPath}/${product.images[0]}` }} style={styles.productImages} />\r\n            <View style={{width:10}}></View>\r\n            <Text style={[styles.productName]} numberOfLines={2}>{formatName(product.name)}</Text>\r\n        </Pressable>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { createContext, useState, useEffect } from 'react'\r\nimport { Alert } from 'react-native';\r\nimport { serialize, formDataToJSON } from '../utils/commonAppFonctions'\r\nimport { server } from '../remote/server'\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { storeCache, getCache } from '../cache/cacheFunctions';\r\n\r\nconst AccountancyContext = createContext()\r\nconst AccountancyProvider = ({children}) => {\r\n\r\n    const [accountancies, setAccountancies] = useState([])\r\n    const [accounters, setAccounters] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchAccountancies = async (user) => {\r\n        try\r\n        {\r\n            console.log(user)\r\n            setIsLoading(true)\r\n            const response = await fetch(`${server}/api/datas/accountancy/accountancies/${encodeURIComponent(user._id)}`, {\r\n                method: 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n\r\n            if(!response)\r\n            {\r\n                throw new Error(\"Erreur reseau \" + await response.text())\r\n            }\r\n            \r\n            const res = await response.json()\r\n            //console.log(res.datas[0].user)\r\n            setAccountancies(res.datas)\r\n            return res.datas\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            return []\r\n        }finally{\r\n            setIsLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const getSearchedAccountancies = async (date) => {\r\n        const datas = {\r\n            date\r\n        }\r\n\r\n        try\r\n        {\r\n            setIsLoading(true)\r\n            const response = await fetch(`${server}/api/datas/accountancy/accountancies/search?date=${encodeURIComponent(date)}`, {\r\n                method: 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n\r\n            if(!response)\r\n            {\r\n                throw new Error(\"Erreur reseau \" + await response.text())\r\n            }\r\n            \r\n            const res = await response.json()\r\n            //console.log(res.datas[0].user)\r\n            setAccountancies(res.datas)\r\n            return res.datas\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            return []\r\n        }finally{\r\n            setIsLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    const addUserDailyAccountancy = async (user, dailyReport) => {\r\n        try {\r\n            \r\n            const response = await fetch(`${server}/api/datas/accountancy/add/${encodeURIComponent(user._id)}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(dailyReport), \r\n            });\r\n    \r\n            // Vérification si la requête a réussi\r\n            if (!response.ok) {\r\n                const errorData = await response.text();\r\n               throw new Error(errorData);\r\n            }\r\n            //console.log(updatedFormData)\r\n            \r\n            const responseData = await response.json();\r\n\r\n            return responseData.datas\r\n        } catch (error) {\r\n            console.error('Erreur lors de la requête:', error);\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const deleteAccountancyRecord = async (record) => {\r\n       // console.log(\"okkkkk\")\r\n        //return;\r\n        try {\r\n            \r\n            const response = await fetch(`${server}/api/datas/accountancy/remove/${encodeURIComponent(record._id)}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({}), \r\n            });\r\n    \r\n            // Vérification si la requête a réussi\r\n            if (!response.ok) {\r\n                const errorData = await response.text();\r\n               throw new Error(errorData);\r\n            }\r\n            //console.log(updatedFormData)\r\n            \r\n            const responseData = await response.json();\r\n\r\n            return responseData.datas\r\n        } catch (error) {\r\n            console.error('Erreur lors de la requête:', error);\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    const fetchAccounters = async () => {\r\n        try {\r\n            setIsLoading(true)\r\n            const response = await fetch(`${server}/api/datas/accountancy/accounters`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                const err = await response.text()\r\n                throw new Error(`Error: ${err}`);\r\n            }\r\n    \r\n            const res = await response.json();\r\n    \r\n            if (!res.success) {\r\n                console.error('Error fetching users:', res.message);\r\n                return;\r\n            }\r\n    \r\n            // Manipuler les données ici (liste des utilisateurs)\r\n            //console.log(res)\r\n            setAccounters(res.datas)\r\n            return res.datas\r\n    \r\n        } catch (error) {\r\n            console.error('Fetch error:', error.message);\r\n        }finally{\r\n            setIsLoading(false)\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const filterStateVars = {accounters, accountancies, isLoading}\r\n    const filterStateSetters = {setAccounters, setIsLoading}\r\n    const utilsFunctions = {deleteAccountancyRecord, fetchAccountancies, getSearchedAccountancies, addUserDailyAccountancy, fetchAccounters}\r\n    return (\r\n        <AccountancyContext.Provider value={{...filterStateVars, ...filterStateSetters, ...utilsFunctions}}>\r\n            {children}\r\n        </AccountancyContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport { AccountancyContext, AccountancyProvider }","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, KeyboardAvoidingView, FlatList} from 'react-native';\r\n\r\n\r\nimport { CustomModalActivityIndicator } from '../common/CommonSimpleComponents'\r\nimport { appColors, customText } from '../../styles/commonStyles';\r\nimport { AccountancyContext } from '../../context/AccountancyContext';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { cardContainer } from '../user/userLoginStyles';\r\nconst ViewAccountancies = (props) => {\r\n    const navigation = useNavigation()\r\n    const { fetchAccounters, fetchAccountancies, accounters, accountancies, isLoading, setIsLoading} = useContext(AccountancyContext)\r\n\r\n    //const accounter = ['Ange','Ornella', 'Fadyl', 'Joel', 'Abdel']\r\n    //const [accounters, setAccounters] = useState(accounter)\r\n    //On va afficher home en fonciton de admin role\r\n\r\n\r\n    const handleAccounterPressed = (item) => {\r\n        //console.log(item)\r\n        navigation.navigate('ViewAccountanciesDetails', {accounter:item})\r\n    }\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n        await fetchAccounters()\r\n    }\r\n    //if(!isLoadig)\r\n        fetchData()\r\n}, [])\r\n\r\n    return (\r\n        <View style={[viewAccountanciesStyles.container]}>\r\n           {/*  <View style={[viewAccountanciesStyles.top]}>\r\n                    <Text style={[customText.text, viewAccountanciesStyles.topTitle]}>Accounters</Text>\r\n                </View>\r\n                */\r\n            }\r\n            <View style={[viewAccountanciesStyles.infoContainer]}>\r\n               \r\n                <FlatList\r\n                        data={accounters}\r\n                        renderItem={ ({item}) => { \r\n                            return(\r\n                                <Pressable style={[viewAccountanciesStyles.item]} onPress={()=> {handleAccounterPressed(item)}}>\r\n                                    <Text style={[customText.text, viewAccountanciesStyles.itemText]}>{ item.email.split('@')[0] }</Text>\r\n                                </Pressable>\r\n                            ) \r\n                        } }\r\n                        keyExtractor={ (item) => { return item._id.toString(); } }\r\n                        ItemSeparatorComponent ={ (item) => { return <View style={{height:5,}}></View> }}\r\n                        contentContainerStyle={[viewAccountanciesStyles.flatlist]}\r\n                        style={[{width:'100%',}]}\r\n                        ListEmptyComponent={() => {}}\r\n                />\r\n\r\n\r\n<CustomModalActivityIndicator onRequestClose={setIsLoading} isLoading={isLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Chargements des données...\" />\r\n        </View>\r\n    </View>\r\n    )\r\n}\r\n\r\nexport default ViewAccountancies\r\n\r\n\r\nconst viewAccountanciesStyles = StyleSheet.create({\r\n\r\n    container :\r\n    {\r\n        flex : 1,\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n\r\n        top : 10,\r\n    },\r\n    top :\r\n    {\r\n        flex : 1,\r\n        alignItems : 'center',\r\n    },\r\n    topTitle :\r\n    {\r\n\r\n    },\r\n    infoContainer :\r\n    {\r\n        ...cardContainer,\r\n        position : 'absolute',\r\n        flex : 1,\r\n        width  : '100%',\r\n\r\n    },\r\n    contents :\r\n    {\r\n        paddingHorizontal : 10,\r\n    },\r\n    flatlist :\r\n    {\r\n        justifyContent : 'center',\r\n        //alignItems : 'center',\r\n        width : '100%',\r\n        height : '100%',\r\n        paddingHorizontal : 10,\r\n        //backgroundColor : 'red',\r\n    },\r\n    item :\r\n    {\r\n        padding : 20,\r\n        borderWidth : 1,\r\n        borderColor : appColors.secondaryColor3,\r\n        width : '100%',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n    },\r\n    itemText :\r\n    {\r\n\r\n    },\r\n\r\n    titles :\r\n    {\r\n\r\n    },\r\n    titlesText :\r\n    {\r\n\r\n    }\r\n})\r\n","import { StyleSheet, StatusBar } from \"react-native\";\r\nimport { appColors, appFont, customText, screenHeight } from \"./commonStyles\";\r\nimport { card } from \"./filtersStyles\";\r\n\r\n\r\n\r\n\r\nexport const addAccountancyStyles = StyleSheet.create({\r\n    container : \r\n    {\r\n        flexGrow : 1,\r\n        top : 0,\r\n        //backgroundColor : appColors.white,\r\n    },\r\n    containers :\r\n    {\r\n        \r\n    },\r\n    titles :\r\n    {\r\n        backgroundColor : appColors.lightWhite,\r\n        height : 50,\r\n        flexDirection :\"row\",\r\n        alignItems : \"center\",\r\n        paddingLeft : 20,\r\n    },\r\n    contents :\r\n    {\r\n        //height : 7,\r\n        backgroundColor : appColors.white,\r\n        flexDirection : \"row\",\r\n        alignItems : \"center\",\r\n        padding : 20,\r\n        paddingRight : 0,\r\n        \r\n    },\r\n    titlesText :\r\n    {\r\n        ...customText.text,\r\n        fontWeight : \"bold\",\r\n        fontSize : 16,\r\n    },\r\n    normalText :\r\n    {\r\n        ...customText.text,\r\n        fontSize : 14,\r\n        color : appColors.secondaryColor5\r\n\r\n    },\r\n    imageBox :\r\n    {\r\n        width:100,\r\n        height:100,\r\n        borderWidth : 1,\r\n        borderColor : appColors.secondaryColor4,\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        \r\n    },\r\n    imageCloseButton:\r\n    {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: appColors.lightBlack,\r\n        position: \"absolute\",\r\n        alignSelf: \"flex-end\",\r\n        top: 0,\r\n    },\r\n    bottomPicker :\r\n    {\r\n        ...card,\r\n        position : \"absolute\",\r\n        left : 0,\r\n        right : 0,\r\n        bottom : 0,\r\n        padding : 20,\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-around\",\r\n        alignItems : \"center\",\r\n        paddingHorizontal : 20,\r\n        backgroundColor : appColors.lightWhite,\r\n        borderTopWidth : 2,\r\n        borderTopColor : appColors.white,\r\n        zIndex : 99,\r\n    },\r\n\r\n    inputContainer : \r\n    {\r\n        borderRadius : 0,\r\n        borderWidth : 0,\r\n        borderBottom : 1,\r\n        padding : 0\r\n    },\r\n    radioBox : \r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-around\",\r\n        alignItems : \"center\",\r\n        width : \"100%\",\r\n    },\r\n    radioContainer : \r\n    {\r\n        flexDirection : \"row\",\r\n        alignItems : \"center\",\r\n    },\r\n    categoryContainer :\r\n    {\r\n        backgroundColor : appColors.white,\r\n        flexDirection : \"column\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"flex-start\",\r\n        padding : 0,\r\n        paddingRight : 0,\r\n        wifth : \"100%\",\r\n    },\r\n    pressableDetails :\r\n    {\r\n        padding : 15,\r\n        borderBottomWidth:1,\r\n        borderColor:appColors.secondaryColor3,\r\n        width : \"100%\",\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-between\",\r\n        alignItems : \"center\",\r\n    },\r\n\r\n    addProductSubmitView :\r\n    {\r\n        position : \"relative\",\r\n        left : 0,\r\n        right : 0,\r\n        bottom : 0,\r\n        width : \"100%\",\r\n        height : 60,\r\n    },\r\n    pressable :\r\n    {\r\n        padding : 20,\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        flex : 1,\r\n        //borderRadius : 20,\r\n    },\r\n    text :\r\n    {\r\n        ...customText.text,\r\n        fontWeight : \"bold\",\r\n    },\r\n\r\n\r\n    modalContainer: {\r\n        flex: 1,\r\n        backgroundColor: appColors.clearBlack,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      },\r\n      fullImage: {\r\n        width: '90%',\r\n        height: '70%',\r\n      },\r\n      closeButton: {\r\n        marginTop: 20,\r\n        padding: 10,\r\n        backgroundColor: appColors.red,\r\n        borderRadius: 5,\r\n      },\r\n      closeButtonText: {\r\n        fontSize: 16,\r\n        color: appColors.white,\r\n      },\r\n\r\n})","import React, { useState, forwardRef, useRef, useEffect, useContext, useCallback } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, Platform} from 'react-native';\r\n\r\nimport { Input } from 'react-native-elements';\r\nimport { Picker } from '@react-native-picker/picker';\r\n\r\nimport { CustomButton, CustomModalActivityIndicator } from '../common/CommonSimpleComponents'\r\n\r\nimport { appColors, customText} from '../../styles/commonStyles';\r\nimport { useRoute, useNavigation } from '@react-navigation/native';\r\nimport { searchBarStyles } from '../../styles/searchBarStyles';\r\nimport { formatMoney, getDate, showAlert } from '../../utils/commonAppFonctions'\r\n\r\nimport { addAccountancyStyles } from '../../styles/addAccountancyStyles';\r\nimport { AccountancyContext } from '../../context/AccountancyContext';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { cardContainer } from '../user/userLoginStyles';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nconst SupplyFunds = (props) => {\r\n    //console.log('ok--')\r\n    //On va afficher home en fonciton de admin role\r\n    const navigation = useNavigation()\r\n    const route = useRoute()\r\n    const { user } = useContext(UserContext)\r\n    const { fetchAccounters, addUserDailyAccountancy, accounters, accountancies, isLoading, setIsLoading} = useContext(AccountancyContext)\r\n\r\n\r\n    const [isPostLoading, setIsPostLoading] = useState(false)\r\n\r\n\r\n\r\n    const [amount, setAmount] = useState(0)\r\n    const [availableReceipients, setAvailableReceipients] = useState([])\r\n   \r\n    const [amountFocused, setAmountFocused] = useState(false)\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [supplyReason, setSupplyReason] = useState(null)\r\n    const [supplyReasonFocused, setSupplyReasonFocused] = useState(false)\r\n\r\n\r\n\r\n    const [selectedReceipients, setSelectedReceipients] = useState('')\r\n\r\n    const submitAccountancy = async () => {\r\n        //console.log(accounters)\r\n        //return;\r\n        try\r\n        {\r\n            setIsPostLoading(true)\r\n            setErrors({})\r\n\r\n            //console.log(\"okkkkk\")\r\n            //console.log(selectedReceipients)\r\n            //return\r\n\r\n            const report = {\r\n                reason : !!supplyReason ? 'auto-supply '+supplyReason : 'Supply',\r\n                amount : parseInt(amount.split('.').join('')),\r\n                billNo : '/',\r\n                supplyTo : selectedReceipients, //id du receipient\r\n                type : !!supplyReason ? 'auto-income' :'income',\r\n                date : getDate()\r\n            }\r\n            console.log(report)\r\n            //return\r\n            \r\n            const res = await addUserDailyAccountancy(user, report)\r\n\r\n            if(!res)\r\n            {\r\n                throw new Error(\"Erreur lors de l'ajout du raport\")\r\n            }\r\n           const alertDatas = {\r\n                title : 'Alerte',\r\n                text : 'Votre transaction a été effectuée avec success.',\r\n                icon : 'warning',\r\n                action : navigation?.goBack,\r\n           }\r\n\r\n            showAlert(alertDatas)\r\n            \r\n\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            //Alert.alert('Error', 'Verifier votre connexion a Internet. Si cela persiste contacter l\\'admin.')\r\n            const alertDatas = {\r\n                title : 'Erreur',\r\n                text : 'Verifier votre connexion a Internet. Si cela persiste contacter l\\'admin.',\r\n                icon : 'warning',\r\n                action : function (){},\r\n           }\r\n        showAlert(alertDatas)\r\n\r\n        }finally {\r\n            setIsPostLoading(false)\r\n        }\r\n    }\r\n\r\n    const getUsername = (email) => {\r\n        return email.split('@')[0]\r\n    }\r\n\r\n    const getAccounters = (accounters) => {\r\n        const accounters_ = accounters\r\n        const username = getUsername(user.email)\r\n        let tmp = []\r\n        if(user.role=='boss')\r\n        {\r\n            tmp = accounters.filter(el => getUsername(el.email) == 'admin')\r\n        }\r\n        else if(user.role=='auto-supplier')\r\n        {\r\n            //console.log(\"Okkkkk\")\r\n            tmp = [user,]\r\n            //tmp = accounters.filter(el => getUsername(el.email) == 'admin')\r\n            //console.log(tmp)\r\n        }\r\n        else if(username=='admin')\r\n        {\r\n            tmp = accounters.filter(el => getUsername(el.email) == 'comptabilite')\r\n        }\r\n        else if(username=='comptabilite')\r\n        {\r\n            tmp = accounters.filter(el => ['kennevarelle9', 'stessydkbglobal', 'dorisndokon3'].includes(getUsername(el.email)))\r\n        }\r\n        //console.log(tmp)\r\n        return tmp\r\n    }\r\n    //console.log(accounters)\r\n\r\n\r\n    useEffect(() => {\r\n        //console.log(user._id)\r\n       \r\n        const fetchData = async () => {\r\n            fetchAccounters().then(acc => {\r\n                console.log(acc)\r\n                setSelectedReceipients(getAccounters(acc)[0]?._id)\r\n            })\r\n\r\n        }\r\n        //if(!isLoadig)\r\n            fetchData()\r\n    }, [])\r\n    return (\r\n        <View style={[supplyFundsStyles.container]}>\r\n            <View style={[supplyFundsStyles.infoContainer]}>\r\n                <View style={[supplyFundsStyles.contents]}>\r\n                        <View style={[supplyFundsStyles.title]}>\r\n                            <Text style={[supplyFundsStyles.titleText]}>Montant</Text>\r\n                        </View>\r\n\r\n                        <View style={{height:10,}}></View>\r\n                            <Input placeholder=\"Montant en XAF\" value={formatMoney(amount)} onChangeText={(price)=>{setAmount(formatMoney(price))}}\r\n                                inputMode='numeric'\r\n                                multiline={false}\r\n                                placeholderTextColor={appColors.secondaryColor5}\r\n                                inputStyle = {[searchBarStyles.inputText, ]}\r\n                                onFocus={() => setAmountFocused(true)}\r\n                                onBlur={() => setAmountFocused(false)}\r\n                                underlineColorAndroid='transparent'\r\n                                containerStyle={[supplyFundsStyles.inputBox]}\r\n                                inputContainerStyle = {[searchBarStyles.inputContainer, amountFocused && searchBarStyles.inputContainerFocused,  supplyFundsStyles.inputContainer]}\r\n                            />\r\n                            \r\n                </View> \r\n\r\n                <View  style={[supplyFundsStyles.contents]}>\r\n                    <View style={[supplyFundsStyles.receipient]}>\r\n                        <View style={[supplyFundsStyles.title]}>\r\n                            <Text style={[supplyFundsStyles.titleText]}>Receipient</Text>\r\n                        </View>\r\n                        <View style={{height:10,}}></View>\r\n\r\n                        <Picker\r\n                            selectedValue={selectedReceipients}\r\n                            style={[supplyFundsStyles.picker]}\r\n                            onValueChange={(itemValue, itemIndex) => setSelectedReceipients(itemValue)}\r\n                        >\r\n                            \r\n                            {getAccounters(accounters).map((accounter, index) => {\r\n                                //console.log(accounter._id)\r\n                                return <Picker.Item key={index} label={accounter.email} value={accounter._id} />\r\n                            })}\r\n                        \r\n                        </Picker>\r\n                    </View>\r\n                </View>\r\n\r\n\r\n                {\r\n                    user.role==='auto-supplier' &&\r\n\r\n                    <>\r\n                        <View style={{height:10}}></View>\r\n\r\n                        <Input placeholder=\"Motif\" value={supplyReason} onChangeText={(r)=>{setSupplyReason(r)}}\r\n                                multiline={false}\r\n                                placeholderTextColor={appColors.secondaryColor5}\r\n                                inputStyle = {[searchBarStyles.inputText, ]}\r\n                                onFocus={() => setSupplyReasonFocused(true)}\r\n                                onBlur={() => setSupplyReasonFocused(false)}\r\n                                underlineColorAndroid='transparent'\r\n                                containerStyle={[supplyFundsStyles.inputBox]}\r\n                                inputContainerStyle = {[searchBarStyles.inputContainer, supplyReasonFocused && searchBarStyles.inputContainerFocused,  supplyFundsStyles.inputContainer]}\r\n                            />\r\n                    </>\r\n                }\r\n\r\n            <View style={{height:20}}></View>\r\n\r\n            <View style={[addAccountancyStyles.addProductSubmitView,{}]}>\r\n                    <CustomButton text=\"Valider\" color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={addAccountancyStyles} onPress={()=>{submitAccountancy()}} />\r\n            </View>\r\n\r\n            <CustomModalActivityIndicator onRequestClose={setIsPostLoading} isLoading={isPostLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Chargements des données...\" />\r\n        </View>\r\n    </View>\r\n    )\r\n}\r\n\r\nexport default SupplyFunds\r\n\r\n\r\nexport const supplyFundsStyles = StyleSheet.create({\r\n    container :\r\n    {\r\n        flex : 1,\r\n        justifyContent : 'center',\r\n        top : 10,\r\n    },\r\n    infoContainer :\r\n    {\r\n        ...cardContainer,\r\n        width  : '100%',\r\n\r\n    },\r\n    contents :\r\n    {\r\n        paddingHorizontal : 10,\r\n    },\r\n    inputContainer : \r\n    {\r\n        borderRadius : 0,\r\n        borderWidth : 0,\r\n        borderBottom : 1,\r\n        padding : 0,\r\n        left : 0,\r\n        width : '100%',\r\n        \r\n    },\r\n    inputBox :\r\n    {\r\n        backgroundColor : appColors.white,\r\n    },\r\n    picker: \r\n    {\r\n        padding : 10,\r\n        width: '100%',\r\n        backgroundColor: appColors.white,\r\n        \r\n    },\r\n    titleText :\r\n    {\r\n        fontWeight : 'bold',\r\n        fontSize : 16,\r\n    }\r\n    \r\n})\r\n","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, FlatList} from 'react-native';\r\n\r\nimport { Input } from 'react-native-elements';\r\nimport { Picker } from '@react-native-picker/picker';\r\n\r\nimport { appColors, customText, screenWidth } from '../../styles/commonStyles';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { AccountancyContext } from '../../context/AccountancyContext';\r\n\r\nimport { supplyFundsStyles } from './SupplyFunds';\r\nimport { CustomButton, CustomModalActivityIndicator} from '../common/CommonSimpleComponents'\r\nimport { searchBarStyles } from '../../styles/searchBarStyles';\r\nimport { addAccountancyStyles } from '../../styles/addAccountancyStyles';\r\nimport { formatMoney, getDate, isValidDate, showAlert } from '../../utils/commonAppFonctions'\r\nimport { cardContainer } from '../user/userLoginStyles';\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\n\r\n\r\nconst ViewAccountanciesDetails = (props) => {\r\n\r\n    const navigation = useNavigation()\r\n    const route = useRoute()\r\n    const {accounter} = route.params\r\n    const { fetchAccounters, fetchAccountancies, accounters, accountancies, isLoading, setIsLoading, getSearchedAccountancies, deleteAccountancyRecord} = useContext(AccountancyContext)\r\n    //On va afficher home en fonciton de admin role\r\n    const { user } = useContext(UserContext)\r\n\r\n    const [updateComponent, setUpdateComponent] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const datas = await fetchAccountancies(accounter)\r\n        }\r\n        //if(!isLoadig)\r\n            fetchData()\r\n    }, [updateComponent])\r\n\r\n    \r\n\r\n    const getUsername = (email) => {\r\n        return email.split('@')[0].slice(0, 10);\r\n    }\r\n\r\n    const handleDeletePressed = async (item) => {\r\n       \r\n       const deleteARecord = async () => {\r\n            try\r\n            {\r\n                setIsPostLoading(true)\r\n                \r\n\r\n                const res = await deleteAccountancyRecord(item)\r\n                \r\n                const alertDatas = {\r\n                    title : 'Alerte',\r\n                    text : 'Record supprime avec succes',\r\n                    icon : 'warning',\r\n                    action : function (){},\r\n            }\r\n\r\n                showAlert(alertDatas)\r\n                setUpdateComponent(prev=>!prev)\r\n            }\r\n            catch(error)\r\n            {\r\n                console.log(error)\r\n                const alertDatas = {\r\n                    title : 'Erreur',\r\n                    text : 'Verifier votre connexion a Internet. Si cela persiste contacter l\\'admin.',\r\n                    icon : 'warning',\r\n                    action : function action(){},\r\n            }\r\n            showAlert(alertDatas)\r\n\r\n            }finally {\r\n                setIsPostLoading(false)\r\n            }\r\n       }\r\n\r\n       const alertDatas = {\r\n        title : 'Alerte',\r\n        text : 'Etes vous sur de vouloir supprimer cette ligne ? L\\'operation est irreversible. Et de plus cela ne modifiera pas l\\etat actuel de vos caisse.',\r\n        icon : 'warning',\r\n        action : async function () { deleteARecord() },\r\n        refuseAction : function (){}\r\n   }\r\n\r\n    showAlert(alertDatas)\r\n\r\n\r\n    }\r\n\r\n    const canDelete = () => {\r\n        //if(!(user.email===accounter.email && accounter.email==='comptabilite@dkbglobaltrader.net') )\r\n        if(user.email==='comptabilite@dkbglobaltrader.net')\r\n        {\r\n            return !(['comptabilite@dkbglobaltrader.net', 'benjamindzogang@dkbglobaltrader.net', 'ornelletsotezo@gmail.com'].includes(accounter.email))\r\n        } \r\n        return false\r\n    } \r\n    \r\n    const RenderAccount = (props) => {\r\n        const { item, index } = props\r\n        //console.log(item)\r\n\r\n        const alertDatas = {\r\n            title : 'Alerte',\r\n            text : item.reason,\r\n            icon : 'Information',\r\n            action : null,\r\n       }\r\n\r\n       let backgroundColor = \"\"\r\n       let sign = '+'\r\n       if(item?.type=='income')\r\n       {    if(item?.user._id==accounter._id)\r\n            {\r\n                backgroundColor = appColors.lightRed\r\n                sign = '-'\r\n            }\r\n            else\r\n            {\r\n                backgroundColor = appColors.lightGreen\r\n                sign = '+'\r\n            }\r\n       }\r\n       else  if(item?.type=='auto-income')\r\n       {\r\n            backgroundColor = appColors.orange\r\n            sign = '+'\r\n       }\r\n       else\r\n       {\r\n            backgroundColor = appColors.lightRed \r\n            sign = '+'\r\n       }\r\n\r\n        return (\r\n   \r\n\r\n                <Pressable onPress={() => showAlert(alertDatas)} style={[viewAccountanciesDetailsStyles.line, {backgroundColor:backgroundColor}]}>\r\n                    \r\n                    {  canDelete() &&\r\n                        <Pressable style={[viewAccountanciesDetailsStyles.cell]} onPress={()=>{handleDeletePressed(item)}}>\r\n                            <Text style={[viewAccountanciesDetailsStyles.recordItemText, {color:appColors.red,fontWeight:'bold'}]}>Delete</Text>\r\n                        </Pressable>\r\n                    }\r\n\r\n                    <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                        <Text style={[viewAccountanciesDetailsStyles.recordItemText]}>{item?.date}</Text>\r\n                    </View>\r\n\r\n                    <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                        <Text style={[viewAccountanciesDetailsStyles.recordItemText]}>{item?.reason.substring(0,20)} {item.reason.length>20 ? \"...\" :\".\"}</Text>\r\n                    </View>\r\n\r\n                    <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                        <Text style={[viewAccountanciesDetailsStyles.recordItemText]}>{sign} {item?.amount}</Text>\r\n                    </View>\r\n\r\n                    <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                        <Text style={[viewAccountanciesDetailsStyles.recordItemText]}>{item?.type=='outcome' ? item?.receivedBy : getUsername(item?.supplyTo.email) }</Text>\r\n                    </View>\r\n\r\n                    <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                        <Text style={[viewAccountanciesDetailsStyles.recordItemText]}>{item?.type==\"income\" ? (item?.user._id==accounter._id) ? getUsername(item?.supplyTo.email) : getUsername(item?.user.email) : item?.billNo}</Text>\r\n                    </View>\r\n                    <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                        <Text style={[viewAccountanciesDetailsStyles.recordItemText]}>{item?.type==\"income\" ? (item?.user._id==accounter._id) ? item?.cashBalance : item?.supplyCashBalance : item?.cashBalance}</Text>\r\n                    </View>\r\n                </Pressable>\r\n                \r\n        )\r\n    }\r\n\r\n    const [selectedDate, setSelectedDate] = useState(\"Day\")\r\n    const [date, setDate] = useState(getDate())\r\n    const [dateFocused, setDateFocused] = useState(false)\r\n    const [isPostLoading, setIsPostLoading] = useState(false)\r\n    const [showSearch, setShowSearch] = useState(false)\r\n\r\n    const searchedAccountancies = async () => {\r\n        try\r\n        {\r\n            setIsPostLoading(true)\r\n            const date_ = selectedDate.toLowerCase() ==='day' ? date : '01/'+date\r\n            //console.log(date_)\r\n\r\n            if(!isValidDate(date_))\r\n            {\r\n                Alert.alert('Date Error', 'Entrez une date valide, au format JJ pour day et JJ/MM pour month')\r\n                return;\r\n            }\r\n            \r\n            \r\n            await getSearchedAccountancies(date)\r\n\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            Alert.alert('Error', 'Verifier votre connexion a Internet. Si cela persiste contacter l\\'admin.')\r\n        }finally {\r\n            setIsPostLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ScrollView horizontal={true} contentContainerStyle={[viewAccountanciesDetailsStyles.container]}>\r\n\r\n        <View style={[{flex:1}]}>\r\n            <View style={[viewAccountanciesDetailsStyles.topSearch]}>\r\n                <Pressable style={[viewAccountanciesDetailsStyles.searchButton, {alignItems:'center', backgroundColor:!showSearch?appColors.green:appColors.red}]} onPress={()=>{setShowSearch(prev=>!prev)}}>\r\n                    <Text style={[customText.text, {color:appColors.white, fontWeight:'bold'}]}>{!showSearch ? \"Chercher\" : \"Fermer\"}</Text>\r\n                </Pressable>\r\n            {showSearch &&\r\n                <>\r\n                    <View style={[viewAccountanciesDetailsStyles.topElInput,{}]}>\r\n                        <Input placeholder=\"Date\" value={date} onChangeText={(name)=>{setDate(name)}}\r\n                                inputMode='text'\r\n                                multiline={false}\r\n                                readOnly={false}\r\n                                maxLength={100}\r\n                                placeholderTextColor={appColors.secondaryColor3}\r\n                                inputStyle = {[searchBarStyles.inputText, ]}\r\n                                onFocus={() => setDateFocused(true)}\r\n                                onBlur={() => setDateFocused(false)}\r\n                                underlineColorAndroid='transparent'\r\n                                containerStyle={ [viewAccountanciesDetailsStyles.containerBox,]}\r\n                                inputContainerStyle = {[searchBarStyles.inputContainer, dateFocused && searchBarStyles.inputContainerFocused,  viewAccountanciesDetailsStyles.inputContainer,\r\n                                ]}\r\n                        />\r\n                    </View>\r\n\r\n                    <View style={{width:10}}></View>\r\n\r\n                    <View style={[viewAccountanciesDetailsStyles.topEl,{}]}>\r\n                        <Picker\r\n                            selectedValue={selectedDate}\r\n                            style={[viewAccountanciesDetailsStyles.picker]}\r\n                            onValueChange={(itemValue, itemIndex) => setSelectedDate(itemValue)}\r\n                            >\r\n                            {['Day', 'Month'].map((item, index) => (\r\n                                <Picker.Item key={index} label={item} value={item} />\r\n                            ))}\r\n                        </Picker>\r\n                    </View>\r\n                            \r\n                        <View style={{width:10}}></View>\r\n\r\n                        <View style={[viewAccountanciesDetailsStyles.topEl,{}]}>\r\n                            <CustomButton text=\"Filtrer\" color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={viewAccountanciesDetailsStyles} onPress={()=>{searchedAccountancies()}} />\r\n                        </View>\r\n                </>\r\n            }\r\n            </View>\r\n\r\n            \r\n\r\n       \r\n            <FlatList\r\n                    data={accountancies}\r\n                    renderItem={ ({item, index}) => { \r\n                        return(\r\n                            <RenderAccount item={item} index={index} />\r\n                        ) \r\n                    } }\r\n                    keyExtractor={ (item) => { return item._id.toString(); } }\r\n                    ItemSeparatorComponent ={ (item) => { return <View style={{height:5,}}></View> }}\r\n                    contentContainerStyle={[viewAccountanciesDetailsStyles.flatlist]}\r\n                    ListHeaderComponent={({item}) => {\r\n                        return (\r\n                            <View style={[viewAccountanciesDetailsStyles.line]}>\r\n                            { canDelete() && !(user.email==accounter.email && accounter.email=='comptabilite@dkbglobaltrader.net') &&\r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Action</Text>\r\n                                </View>\r\n                            }\r\n\r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Date</Text>\r\n                                </View>\r\n\r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Reason</Text>\r\n                                </View>\r\n\r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Amount</Text>\r\n                                </View>\r\n\r\n                              \r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Received By</Text>\r\n                                </View>\r\n                                \r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Bill</Text>\r\n                                </View>\r\n\r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Balance</Text>\r\n                                </View>\r\n                            </View>\r\n                        )\r\n                    }}\r\n                    ListFooterComponent={() => {\r\n                      \r\n                    }}\r\n                    ListEmptyComponent={ () => {\r\n                        return (\r\n                            <View style={[{width:screenWidth, justifyContent:'center', alignItems:'center'}]}>\r\n                                <Text style={[viewAccountanciesDetailsStyles.titleText]}>Pas de donnees</Text>\r\n                            </View>\r\n                        )\r\n                    }}\r\n            />\r\n\r\n           \r\n\r\n\r\n            \r\n     <View style={{hieght:10}}></View>\r\n\r\n\r\n            \r\n\r\n            <CustomModalActivityIndicator onRequestClose={setIsPostLoading} isLoading={isPostLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Chargements des données...\" />\r\n        </View>\r\n    </ScrollView>\r\n    )\r\n}\r\n\r\nexport default ViewAccountanciesDetails\r\n\r\n\r\nconst viewAccountanciesDetailsStyles = StyleSheet.create({\r\n    container :\r\n    {\r\n        flexGrow : 1,\r\n        //paddingHorizontal : 10,\r\n    },\r\n    searchButton :\r\n    {\r\n        padding : 10,\r\n    },\r\n    topSearch :\r\n    {\r\n        //flexDirection : 'row',\r\n        //justifyContent : 'space-around',\r\n        //alignItems : 'center',\r\n        width : screenWidth,\r\n        backgroundColor : appColors.white,\r\n        //height : 60,\r\n    }, \r\n    topSearchEl : \r\n    {\r\n        //width : screenWidth/4,\r\n    },\r\n    inputContainer :\r\n    {\r\n        width : '100%',\r\n        borderRadius : 0,\r\n        borderWidth : 0,\r\n        borderBottom : 1,\r\n        padding : 0\r\n    },\r\n    containerBox :\r\n    {\r\n        backgroundColor : appColors.white,\r\n    },\r\n    picker :\r\n    {\r\n        padding : 10,\r\n    },\r\n\r\n\r\n    line : \r\n    {\r\n        flexDirection : 'row',\r\n        justifyContent : 'space-between',\r\n    },\r\n    record :\r\n    {\r\n        flexDirection : 'row',\r\n        justifyContent : 'space-between',\r\n    },\r\n    cell :\r\n    {\r\n        width : 200,\r\n        height : 30,\r\n        borderRightWidth : 1,\r\n        borderColor : appColors.white,\r\n        justifyContent :'center',\r\n        alignItems : 'center',\r\n    },\r\n    subTitle :\r\n    {\r\n\r\n    },\r\n    subTitleText :\r\n    {\r\n\r\n    },\r\n\r\n\r\n    titleText :\r\n    {\r\n        color : appColors.secondaryColor5,\r\n        fontWeight : 'bold',\r\n        fontSize : 15,\r\n    },\r\n    recordItemText :\r\n    {\r\n        color : appColors.secondaryColor5,\r\n    },\r\n\r\n    pressable :\r\n    {\r\n        padding : 20,\r\n    }\r\n})\r\n","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, KeyboardAvoidingView} from 'react-native';\r\nimport { Input } from 'react-native-elements';\r\n\r\nimport { formatMoney, getDate, isValidDate, showAlert } from '../../utils/commonAppFonctions'\r\nimport { CustomButton, CustomModalActivityIndicator} from '../common/CommonSimpleComponents'\r\nimport { appColors, formErrorStyle} from '../../styles/commonStyles';\r\nimport { searchBarStyles } from '../../styles/searchBarStyles';\r\nimport { addAccountancyStyles } from '../../styles/addAccountancyStyles';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { AccountancyContext } from '../../context/AccountancyContext';\r\n\r\nconst AddAccountancy = (props) => {\r\n\r\n    const navigation = useNavigation()\r\n    const route = useRoute()\r\n    const { user } = useContext(UserContext)\r\n    const { addUserDailyAccountancy } = useContext(AccountancyContext)\r\n\r\n    const [checkoutReason, setCheckoutReason] = useState(\"\")\r\n    const [amount, setAmount] = useState(\"\")\r\n    const [billNo, setBillNo] = useState(\"\")\r\n    const [receivedBy, setReceivedBy] = useState(\"\")\r\n    const [cashBalance, setCashBalance] = useState(\"\")\r\n    const [date, setDate] = useState(getDate())\r\n\r\n\r\n    const [checkoutReasonFocused, setCheckoutReasonFocused] = useState(false)\r\n    const [amountFocused, setAmountFocused] = useState(false)\r\n    const [billNoFocused, setBillNoFocused] = useState(false)\r\n    const [receivedByFocused, setReceivedByFocused] = useState(false)\r\n    const [cashBalanceFocused, setCashBalanceFocused] = useState(false)\r\n    const [dateFocused, setDateFocused] = useState(false)\r\n\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [isPostLoading, setIsPostLoading] = useState(false)\r\n\r\n    const submitAccountancy = async () => {\r\n        try\r\n        {\r\n            setIsPostLoading(true)\r\n            setErrors({})\r\n\r\n            if(!isValidDate(date))\r\n            {\r\n                Alert.alert('Date Error', 'Entrez une date valide, au format JJ/MM/AA')\r\n                return;\r\n            }\r\n\r\n            //throw new Error()\r\n\r\n            const report = {\r\n                receivedBy,\r\n                reason : checkoutReason,\r\n                amount : parseInt(amount.split('.').join('')),\r\n                billNo,\r\n                type : 'outcome',\r\n                date : date\r\n            }\r\n            const res = await addUserDailyAccountancy(user, report)\r\n            \r\n            const alertDatas = {\r\n                title : 'Alerte',\r\n                text : 'Votre transaction a été effectuée avec success.',\r\n                icon : 'warning',\r\n                action : navigation?.goBack,\r\n           }\r\n\r\n            showAlert(alertDatas)\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            const alertDatas = {\r\n                title : 'Erreur',\r\n                text : 'Verifier votre connexion a Internet. Si cela persiste contacter l\\'admin.',\r\n                icon : 'warning',\r\n                action : function action(){},\r\n           }\r\n        showAlert(alertDatas)\r\n\r\n        }finally {\r\n            setIsPostLoading(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n    <View>         \r\n        <ScrollView contentContainerStyle={[addAccountancyStyles.container,{flexGrow: 1}]}>\r\n            <View style={[addAccountancyStyles.containers]}>\r\n                <View style={[addAccountancyStyles.titles]}>\r\n                    <Text style={[addAccountancyStyles.titlesText]}>Motif De Retrait : </Text>\r\n                </View>\r\n                \r\n                <View style={[addAccountancyStyles.contents]}>\r\n                    <View style={{width:10,}}></View>\r\n                    <View>\r\n                        <Input placeholder=\"EX : Give a reason\" value={checkoutReason} onChangeText={(name)=>{setCheckoutReason(name)}}\r\n                            inputMode='text'\r\n                            multiline={true}\r\n                            placeholderTextColor={appColors.secondaryColor3}\r\n                            inputStyle = {[searchBarStyles.inputText, ]}\r\n                            onFocus={() => setCheckoutReasonFocused(true)}\r\n                            onBlur={() => setCheckoutReasonFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            containerStyle={ [searchBarStyles.containerBox,]}\r\n                            inputContainerStyle = {[searchBarStyles.inputContainer, checkoutReasonFocused && searchBarStyles.inputContainerFocused,  addAccountancyStyles.inputContainer,]}\r\n                        />\r\n                        {errors.name && <Text style={[formErrorStyle.text]}>{errors.checkoutReason}</Text>}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={[addAccountancyStyles.containers]}>\r\n                <View style={[addAccountancyStyles.titles]}>\r\n                    <Text style={[addAccountancyStyles.titlesText]}>Montant : </Text>\r\n                </View>\r\n                \r\n                <View style={[addAccountancyStyles.contents]}>\r\n                    <View style={{width:10,}}></View>\r\n                    <View>\r\n                        <Input placeholder=\"EX : Amount\" value={amount} onChangeText={(name)=>{setAmount(formatMoney(name))}}\r\n                            inputMode='text'\r\n                            multiline={false}\r\n                            maxLength={100}\r\n                            placeholderTextColor={appColors.secondaryColor3}\r\n                            inputStyle = {[searchBarStyles.inputText, ]}\r\n                            onFocus={() => setAmountFocused(true)}\r\n                            onBlur={() => setAmountFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            containerStyle={ [searchBarStyles.containerBox,]}\r\n                            inputContainerStyle = {[searchBarStyles.inputContainer, amountFocused && searchBarStyles.inputContainerFocused,  addAccountancyStyles.inputContainer]}\r\n                        />\r\n                        {errors.name && <Text style={[formErrorStyle.text]}>{errors.amount}</Text>}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={[addAccountancyStyles.containers]}>\r\n                <View style={[addAccountancyStyles.titles]}>\r\n                    <Text style={[addAccountancyStyles.titlesText]}>Numero De Facture </Text>\r\n                </View>\r\n                \r\n                <View style={[addAccountancyStyles.contents]}>\r\n                    <View style={{width:10,}}></View>\r\n                    <View>\r\n                        <Input placeholder=\"EX : Bill No\" value={billNo} onChangeText={(name)=>{setBillNo(name)}}\r\n                            inputMode='text'\r\n                            multiline={false}\r\n                            maxLength={100}\r\n                            placeholderTextColor={appColors.secondaryColor3}\r\n                            inputStyle = {[searchBarStyles.inputText, ]}\r\n                            onFocus={() => setBillNoFocused(true)}\r\n                            onBlur={() => setBillNoFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            containerStyle={ [searchBarStyles.containerBox,]}\r\n                            inputContainerStyle = {[searchBarStyles.inputContainer, billNoFocused && searchBarStyles.inputContainerFocused,  addAccountancyStyles.inputContainer]}\r\n                        />\r\n                        {errors.name && <Text style={[formErrorStyle.text]}>{errors.billNo}</Text>}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={[addAccountancyStyles.containers]}>\r\n                <View style={[addAccountancyStyles.titles]}>\r\n                    <Text style={[addAccountancyStyles.titlesText]}>Recu Par : </Text>\r\n                </View>\r\n                \r\n                <View style={[addAccountancyStyles.contents]}>\r\n                    <View style={{width:10,}}></View>\r\n                    <View>\r\n                        <Input placeholder=\"Name\" value={receivedBy} onChangeText={(name)=>{setReceivedBy(name)}}\r\n                            inputMode='text'\r\n                            readOnly={false}\r\n                            multiline={false}\r\n                            maxLength={100}\r\n                            placeholderTextColor={appColors.secondaryColor3}\r\n                            inputStyle = {[searchBarStyles.inputText, ]}\r\n                            onFocus={() => setReceivedByFocused(true)}\r\n                            onBlur={() => setReceivedByFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            containerStyle={ [searchBarStyles.containerBox,]}\r\n                            inputContainerStyle = {[searchBarStyles.inputContainer, receivedByFocused && searchBarStyles.inputContainerFocused,  addAccountancyStyles.inputContainer,\r\n                            ]}\r\n                        />\r\n                        {errors.name && <Text style={[formErrorStyle.text]}>{errors.receivedBy}</Text>}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={[addAccountancyStyles.containers]}>\r\n                <View style={[addAccountancyStyles.titles]}>\r\n                    <Text style={[addAccountancyStyles.titlesText]}>Date : </Text>\r\n                </View>\r\n                \r\n                <View style={[addAccountancyStyles.contents]}>\r\n                    <View style={{width:10,}}></View>\r\n                    <View>\r\n                        <Input placeholder=\"Date de la transaction\" value={date} onChangeText={(name)=>{setDate(name)}}\r\n                            inputMode='text'\r\n                            multiline={false}\r\n                            readOnly={false}\r\n                            maxLength={100}\r\n                            placeholderTextColor={appColors.secondaryColor3}\r\n                            inputStyle = {[searchBarStyles.inputText, ]}\r\n                            onFocus={() => setDateFocused(true)}\r\n                            onBlur={() => setDateFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            containerStyle={ [searchBarStyles.containerBox,]}\r\n                            inputContainerStyle = {[searchBarStyles.inputContainer, dateFocused && searchBarStyles.inputContainerFocused,  addAccountancyStyles.inputContainer,\r\n                                {backgroundColor:appColors.lightWhite}\r\n                            ]}\r\n                        />\r\n                        {errors.date && <Text style={[formErrorStyle.text]}>{errors.date}</Text>}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n\r\n    </ScrollView>\r\n\r\n     <View style={{hieght:10}}></View>\r\n\r\n\r\n        <View style={[addAccountancyStyles.addProductSubmitView,{}]}>\r\n                <CustomButton text=\"Soumettre\" color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={addAccountancyStyles} onPress={()=>{submitAccountancy()}} />\r\n        </View>\r\n\r\n\r\n        <CustomModalActivityIndicator onRequestClose={setIsPostLoading} isLoading={isPostLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Chargements des données...\" />\r\n\r\n    </View>\r\n\r\n    )\r\n}\r\n\r\nexport default AddAccountancy\r\n\r\n","import * as Yup from 'yup';\r\n\r\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\nconst userValidationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n    .matches(emailRegex, 'L\\'adresse email n\\'est pas valide')\r\n    .required('L\\'adresse email est requise'),\r\n\r\n  password: Yup.string()\r\n    .min(7, 'Le mot de passe doit contenir au moins 7 caractères') \r\n    .required('Le mot de passe est requis'),\r\n\r\n  username: Yup.string()\r\n    .min(3, 'Le nom d\\'utilisateur doit contenir au moins 3 caractères')\r\n    .required('Le nom d\\'utilisateur est requis'),\r\n\r\n});\r\n\r\nexport default userValidationSchema;\r\n","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, KeyboardAvoidingView, ImageBackground, Keyboard} from 'react-native';\r\nimport { Input, Icon } from 'react-native-elements';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\n\r\nimport { RadioButton } from 'react-native-paper';\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\n\r\nimport { appColors, customText, appFont, formErrorStyle } from '../../styles/commonStyles';\r\nimport { userLoginStyles } from './userLoginStyles';\r\n\r\nimport { CustomButton, CustomModalActivityIndicator} from '../common/CommonSimpleComponents';\r\n\r\nimport auth from '@react-native-firebase/auth';\r\n\r\n\r\nimport { server } from '../../remote/server';\r\nimport { serialize, getFirebaseErrorMessage, showAlert } from '../../utils/commonAppFonctions'\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\n\r\nimport userValidationSchema from '../forms/validations/userValidation';\r\nimport * as Yup from 'yup';\r\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\r\nimport { addAccountancyStyles } from '../../styles/addAccountancyStyles';\r\n\r\n\r\nconst UserLogin = (props) =>\r\n{\r\n    const {  } = props\r\n    const route = useRoute()\r\n    const navigation = useNavigation()\r\n    const {checkEmail, checkPassword, checkUsername, user, setUser, updateUser, setIsAuthenticated, signupUserWithEmailAndPassword, loginUserWithEmailAndPassword} = useContext(UserContext)\r\n\r\n    const [credentialType, setCredentialType] = React.useState(route?.params?.page || 'login');\r\n    const [role, setRole] = useState('cashier')\r\n\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [adminPassword, setAdminPassword] = useState(\"\")\r\n    const [location, setLocation] = useState(\"\")\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    const [isEmailFocused, setIsEmailFocused] = useState(false)\r\n    const [isPasswordFocused, setIsPasswordFocused] = useState(false)\r\n    const [isUsernameFocused, setIsUsernameFocused] = useState(false)\r\n    const [adminPasswordFocused, setAdminPasswordFocused] = useState(false)\r\n    const [locationFocused, setLocationFocused] = useState(false)\r\n\r\n    \r\n    const [isPasswordShowed, setIsPasswordShowed] = useState(false)\r\n    const [adminPasswordShowed, setAdminPasswordShowed] = useState(false)\r\n\r\n\r\n    const [isEmailCorrect, setIsEmailCorrect] = useState(\"\")\r\n    const [isPasswordCorrect, setIsPasswordCorrect] = useState(\"\")\r\n    const [isUsernameCorrect, setIsUsernameCorrect] = useState(\"\")\r\n\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const signUpUser = async (email, username, password)  => {\r\n        try\r\n        {\r\n            setIsLoading(true)\r\n            const form = {email, password, username:email.split('.')[0], adminPassword:adminPassword}\r\n            await userValidationSchema.validate(form, { abortEarly: false });\r\n\r\n            \r\n            //const userCredential  = await auth().createUserWithEmailAndPassword(email, password)\r\n            signupUserWithEmailAndPassword(email, username, password, adminPassword, role, location).then(async ()=> {\r\n                const alertDatas = {\r\n                    title : 'Alert',\r\n                    text : 'Nouveau membre enregistre avec succes',\r\n                    icon : 'warning',\r\n                    action : navigation?.goBack,\r\n               }\r\n            showAlert(alertDatas)\r\n    \r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            if (error instanceof Yup.ValidationError) \r\n            {\r\n                const formErrors = {};\r\n                    error.inner.forEach(err => {\r\n                        formErrors[err.path] = err.message;\r\n                });\r\n                        //console.log(formErrors)\r\n                setErrors(formErrors);\r\n            }\r\n            else\r\n            {\r\n                const alertDatas = {\r\n                    title : 'Erreur',\r\n                    text : 'Verifier votre connexion a Internet. Si cela persiste contacter l\\'admin.',\r\n                    icon : 'warning',\r\n                    action : function (){},\r\n               }\r\n    \r\n                if(error.code)\r\n                {\r\n                    showAlert({...alertDatas, text:getFirebaseErrorMessage(error.code)+\"\\nVerifiez votre connexion a Internet\"})\r\n                    return;\r\n                }\r\n                showAlert(alertDatas)\r\n                \r\n\r\n            }\r\n\r\n        }finally{\r\n            setIsLoading(false)\r\n        }\r\n            \r\n    }\r\n\r\n//console.log(user)   \r\nconst loginUser = async (email, username, password) => {\r\n    try\r\n    {\r\n        setIsLoading(true)\r\n        const formData = new FormData()\r\n        \r\n    /*\r\n        const userCredential = await auth().signInWithEmailAndPassword(email, password);\r\n\r\n        const firebase_user = userCredential.user;\r\n        \r\n        if(!firebase_user)\r\n        {   \r\n            const error = new Error('Utilisateur non trouvé');\r\n            error.code = 'auth/user-not-found';\r\n            throw error;\r\n        }\r\n    */\r\n        //lors de la reinitialisation\r\n    /*\r\n        formData.append('password', password); //OR firebase_user.password\r\n        const newUser = await updateUser(email, formData);\r\n    */\r\n        let user;\r\n      \r\n      \r\n        user = await loginUserWithEmailAndPassword(email, username, password,)\r\n\r\n//console.log(user)\r\n        if(!user)\r\n        {   \r\n            const error = new Error('Utilisateur non trouvé');\r\n            error.code = 'auth/user-not-found';\r\n            throw error;\r\n\r\n        }\r\n\r\n        navigation.replace('Home');\r\n        return;\r\n    }\r\n    catch(error)\r\n    {\r\n        \r\n        console.log(error)\r\n\r\n      \r\n        const alertDatas = {\r\n            title : 'Erreur',\r\n            text : 'Verifier votre connexion a Internet. Si cela persiste contacter l\\'admin.',\r\n            icon : 'warning',\r\n            action : function (){},\r\n       }\r\n\r\n        if(error.code)\r\n        {\r\n            showAlert({...alertDatas, text:getFirebaseErrorMessage(error.code)+\"\\nVerifiez votre connexion a Internet\"})\r\n            return;\r\n        }\r\n        showAlert(alertDatas)\r\n        \r\n        return;\r\n    }finally{\r\n        setIsLoading(false)\r\n    }\r\n}\r\n\r\n// {errors.images && <Text style={[formErrorStyle.text]}>{errors.images}</Text>}\r\n/*\r\n<LinearGradient\r\n                colors={['#f27a1a', '#ff8a2a', '#ba5c11', '#551b01']} // Ajoutez autant de couleurs que nécessaire\r\n                locations={[0.2, 0.1, 0.3, 0.7]} // Réglez les pourcentages de chaque couleur\r\n                start={{ x: 0, y: 0 }}\r\n                end={{ x: 1, y: 1, }}\r\n                style={[{flex:1,}]}\r\n                >\r\n                    <View style={[userLoginStyles.titleBox]}>\r\n                        <Text style={[userLoginStyles.title]}>Connectez-Vous</Text>\r\n                    </View>\r\n                </LinearGradient>\r\n            */\r\n           //console.log(user)\r\n    return(\r\n<View style={[userLoginStyles.container]}>\r\n                        \r\n    <KeyboardAwareScrollView resetScrollToCoords={{ x: 0, y: 0 }} contentContainerStyle={{flexGrow:1, justifyContent:'center'}} scrollEnabled={true}>\r\n            <ScrollView contentContainerStyle={[userLoginStyles.infoContainer, {}]}>\r\n            <View  style={[userLoginStyles.registerOrLogin]}>  \r\n                <RadioButton.Group onValueChange={newValue => setCredentialType(newValue)}  value={credentialType} >\r\n                    <View style={[userLoginStyles.credentialGroup]}>\r\n                    {['boss', 'admin'].includes(user?.role) &&\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"register\" />\r\n                            <Text>Register</Text>\r\n                        </View>\r\n                    }\r\n\r\n            \r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"login\" />\r\n                            <Text>Login</Text>\r\n                        </View>\r\n            \r\n\r\n                    </View>\r\n                </RadioButton.Group>\r\n            </View>\r\n\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Votre Email\" onChangeText={(text)=>{setEmail(text)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input, ]}\r\n                            onFocus={() => setIsEmailFocused(true)}\r\n                            onBlur={() => setIsEmailFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[userLoginStyles.inputContainer, isEmailFocused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='email' type='entypo' size={24} color={isEmailFocused?appColors.secondaryColor1:appColors.black} />\r\n                                </Pressable>\r\n                            }\r\n                            rightIcon={ \r\n                                isEmailCorrect === 'true' ?\r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='checkmark-circle-outline' type='ionicon' size={24} color={appColors.green} />\r\n                                </Pressable>\r\n                                :\r\n                                isEmailCorrect === 'false' ?\r\n                                 <Pressable onPress={() => {}}>\r\n                                 <Icon name='close-circle-outline' type='ionicon' size={24} color={appColors.red} />\r\n                             </Pressable>\r\n                             :\r\n                             false\r\n                            }\r\n                            value={email}\r\n                        /> \r\n                        {errors.email && <Text style={[formErrorStyle.text]}>{errors.email}</Text>}\r\n                </View>\r\n\r\n                <View style={{height:10}}></View>\r\n\r\n               \r\n\r\n\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Votre Mot De Passe\" onChangeText={(pwd)=>{setPassword(pwd)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input,]}\r\n                            onFocus={() => setIsPasswordFocused(true)}\r\n                            onBlur={() => setIsPasswordFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[{borderBottomWidth:1},isPasswordFocused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='lock-closed-sharp' type='ionicon' size={24} color={isPasswordFocused?appColors.secondaryColor1:appColors.black} />\r\n                                </Pressable>\r\n                            }\r\n                            rightIcon = {\r\n                                isPasswordShowed ?\r\n                                    <Pressable onPress={()=>{setIsPasswordShowed(false)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-off-outline\" size={24} color={appColors.gray} />\r\n                                    </Pressable>\r\n                                :\r\n                                <Pressable onPress={()=>{setIsPasswordShowed(true)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-outline\" size={24} color={appColors.secondaryColor1} />\r\n                                    </Pressable>\r\n                            }\r\n                            value={password}\r\n                            secureTextEntry={!isPasswordShowed}\r\n                        /> \r\n                        {errors.password && <Text style={[formErrorStyle.text]}>{errors.password}</Text>} \r\n                </View>   \r\n\r\n            {\r\n                credentialType=='register' && \r\n\r\n                <>\r\n                <View  style={[userLoginStyles.registerOrLogin]}>  \r\n                <RadioButton.Group onValueChange={newValue => setRole(newValue)}  value={role} >\r\n                    <View style={[userLoginStyles.credentialGroup]}>\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"admin\" />\r\n                            <Text>Admin</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"supplier\" />\r\n                            <Text>Supplier</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"visualizer\" />\r\n                            <Text>Visualiser</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"cashier\" />\r\n                            <Text>Cashier</Text>\r\n                        </View>\r\n                    </View>\r\n                </RadioButton.Group>\r\n            </View>\r\n\r\n\r\n      \r\n\r\n                    <View style={[userLoginStyles.credentialContainers]}>\r\n                        <Input placeholder=\"Location - Ex : douala/logpom\" onChangeText={(text)=>{setLocation(text)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input, ]}\r\n                            onFocus={() => setLocationFocused(true)}\r\n                            onBlur={() => setLocationFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[userLoginStyles.inputContainer, locationFocused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='email' type='entypo' size={24} color={isEmailFocused?appColors.secondaryColor1:appColors.black} />\r\n                                </Pressable>\r\n                            }\r\n                           \r\n                            value={location}\r\n                        /> \r\n                        {errors.location && <Text style={[formErrorStyle.text]}>{errors.location}</Text>}\r\n                </View>\r\n\r\n                <View style={{height:10}}></View>\r\n\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                <Input placeholder=\"Votre Mot De Passe\" onChangeText={(pwd)=>{setAdminPassword(pwd)}}\r\n                        multiline={false}\r\n                        numberOfLines={1}\r\n                        placeholderTextColor={appColors.lightWhite}\r\n                        inputStyle = {[userLoginStyles.input,]}\r\n                        onFocus={() => setAdminPasswordFocused(true)}\r\n                        onBlur={() => setAdminPasswordFocused(false)}\r\n                        underlineColorAndroid='transparent'\r\n                        inputContainerStyle={[{borderBottomWidth:1}, adminPasswordFocused && userLoginStyles.inputFocused,]}\r\n                        leftIcon={ \r\n                            <Pressable onPress={() => {}}>\r\n                                <Icon name='lock-closed-sharp' type='ionicon' size={24} color={adminPasswordFocused?appColors.secondaryColor1:appColors.black} />\r\n                            </Pressable>\r\n                        }\r\n                        rightIcon = {\r\n                            adminPasswordShowed ?\r\n                                <Pressable onPress={()=>{setAdminPasswordShowed(false)}}>\r\n                                    <Icon type=\"ionicon\" name=\"eye-off-outline\" size={24} color={appColors.gray} />\r\n                                </Pressable>\r\n                            :\r\n                            <Pressable onPress={()=>{setAdminPasswordShowed(true)}}>\r\n                                    <Icon type=\"ionicon\" name=\"eye-outline\" size={24} color={appColors.secondaryColor1} />\r\n                                </Pressable>\r\n                        }\r\n                        value={adminPassword}\r\n                        secureTextEntry={!adminPasswordShowed}\r\n                    /> \r\n                    {errors.password && <Text style={[formErrorStyle.text]}>{errors.password}</Text>} \r\n            </View>  \r\n            </>\r\n            }\r\n\r\n\r\n            \r\n\r\n\r\n                <Pressable style={[userLoginStyles.forgotBox]} onPress={() => { navigation.navigate('ResetPassword') } }>\r\n                    <Text style={[customText.text, userLoginStyles.forgotText]}>Mot de passe oublié ?</Text>\r\n                </Pressable>    \r\n                \r\n                              \r\n    \r\n    \r\n\r\n                </ScrollView>\r\n</KeyboardAwareScrollView>\r\n        \r\n\r\n            <CustomButton text=\"Valider\" onPress={()=>{credentialType==='login' ? loginUser(email, username, password) :  signUpUser(email, username, password);}} color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={{pressable: userLoginStyles.pressable, text:userLoginStyles.text}} />\r\n                     \r\n\r\n        <CustomModalActivityIndicator onRequestClose={setIsLoading} isLoading={isLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Vérification des donnéees...\" />\r\n\r\n</View>\r\n    )\r\n/*}else{\r\n    navigation.navigate(\"Preferences\", {user:user})\r\n}*/\r\n}\r\n\r\n\r\nexport default UserLogin\r\n\r\n\r\n","import React, { useState, forwardRef, useRef, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button } from 'react-native';\r\nimport { Input, Icon } from 'react-native-elements';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\n\r\nimport { appColors, customText, appFont } from '../../styles/commonStyles';\r\nimport { userLoginStyles } from './userLoginStyles';\r\n\r\nimport { CustomButton } from '../common/CommonSimpleComponents';\r\n\r\nconst UserSignup = (props) =>\r\n{\r\n    const {  } = props\r\n    const route = useRoute()\r\n    const navigation = useNavigation()\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [isFocused, setIsFocused] = useState(false)\r\n\r\n    const loginUserWithEmailAndPassword = () => {\r\n        \r\n    }\r\n\r\n\r\n    return(\r\n        <View style={[{flex:1}]}>\r\n            <Button title=\"Login\" onPress={()=>{navigation.navigate(\"UserLogin\")}} />\r\n            <View>\r\n                <Input placeholder=\"Posez une question\" onChangeText={(text)=>{setEmail(text)}}\r\n                        multiline={true}\r\n                        numberOfLines={1}\r\n                        placeholderTextColor={appColors.lightWhite}\r\n                        inputStyle = {[userLoginStyles.input, isFocused && userLoginStyles.inputFocused,]}\r\n                        onFocus={() => setIsFocused(true)}\r\n                        onBlur={() => setIsFocused(false)}\r\n                        underlineColorAndroid='transparent'\r\n                        inputContainerStyle={ { borderBottomWidth:isFocused?0:1, }}\r\n                        leftIcon={ \r\n                            <Pressable onPress={() => {}}>\r\n                                <Icon name='send-sharp' type='ionicon' size={24} color={appColors.secondaryColor1} />\r\n                            </Pressable>\r\n                        }\r\n                        value={email}\r\n                    />\r\n\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Nom De Votre Boutique\" onChangeText={(shop)=>{setUsername(shop)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input,]}\r\n                            onFocus={() => setIsUsernameFocused(true)}\r\n                            onBlur={() => setIsUsernameFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[{borderBottomWidth:1},isUsernameFocused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='basket-outline' type='ionicon' size={24} color={appColors.secondaryColor1} />\r\n                                </Pressable>\r\n                            }\r\n                            rightIcon={ \r\n                                isUsernameCorrect === 'true'  ?\r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='checkmark-circle-outline' type='ionicon' size={24} color={appColors.green} />\r\n                                </Pressable>\r\n                                :\r\n                                isUsernameCorrect === 'false'  ?\r\n                                 <Pressable onPress={() => {}}>\r\n                                 <Icon name='close-circle-outline' type='ionicon' size={24} color={appColors.red} />\r\n                             </Pressable>\r\n                                :\r\n                                false\r\n                            }\r\n                            value={username}\r\n                        />   \r\n                </View> \r\n\r\n                    <CustomButton text=\"Valider\" color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={{pressable: userLoginStyles.pressable, text:userLoginStyles.text}} />\r\n                </View>\r\n                    <Button title=\"Login\" onPress={()=>{navigation.navigate(\"UserLogin\")}} />\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport default UserSignup\r\n\r\n\r\n","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert } from 'react-native';\r\nimport { Input, Icon } from 'react-native-elements';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\n\r\nimport { appColors, customText, appFont, formErrorStyle } from '../../styles/commonStyles';\r\nimport { userLoginStyles } from './userLoginStyles';\r\n\r\nimport { CustomButton, CustomModalActivityIndicator } from '../common/CommonSimpleComponents';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { getFirebaseErrorMessage } from '../../utils/commonAppFonctions'\r\n\r\nimport auth from '@react-native-firebase/auth';\r\n\r\nimport userValidationSchema from '../forms/validations/userValidation';\r\nimport * as Yup from 'yup';\r\nimport { storeCache } from '../../cache/cacheFunctions';\r\n\r\nconst ResetPassword = (props) =>\r\n{\r\n    const {  } = props\r\n    const route = useRoute()\r\n    const navigation = useNavigation()\r\n    const {checkEmail, checkPassword, checkUsername, user, setUser, getUser, updateUser, setIsAuthenticated, loginUserWithEmailAndPassword} = useContext(UserContext)\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [password1, setPassword1] = useState(\"\")\r\n    const [password2, setPassword2] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    const [isEmailFocused, setIsEmailFocused] = useState(false)\r\n    const [isPassword1Focused, setIsPassword1Focused] = useState(false)\r\n    const [isPassword2Focused, setIsPassword2Focused] = useState(false)\r\n    const [isUsernameFocused, setIsUsernameFocused] = useState(false)\r\n\r\n\r\n    const [isPassword1Showed, setIsPassword1Showed] = useState(false)\r\n    const [isPassword2Showed, setIsPassword2Showed] = useState(false)\r\n    \r\n\r\n    const [isEmailCorrect, setIsEmailCorrect] = useState(\"\")\r\n    const [isPasswordCorrect, setIsPasswordCorrect] = useState(\"\")\r\n    const [isUsernameCorrect, setIsUsernameCorrect] = useState(\"\")\r\n\r\n    const [emailExists, setEmailExists] = useState(false)\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const  resetUserPassword = async (email) => {\r\n    try\r\n    {\r\n        setIsLoading(true)\r\n        setErrors({});\r\n        \r\n           const userExists = await getUser(email)\r\n            if(!userExists)\r\n            {\r\n                //return; if not exists\r\n                Alert.alert('Error', 'Email non trouvée')\r\n            }\r\n        \r\n        \r\n        const formData = new FormData()\r\n        //On met u mot de passe temporaire au genere aleatoirement\r\n        formData.append('password', Math.random()*10000)\r\n        const newUser = await updateUser(email, formData);\r\n        if(!newUser)\r\n        {\r\n            const error = new Error('Utilisateur non trouvé');\r\n            error.code = 'auth/user-not-found';\r\n            throw error;\r\n        }\r\n        await auth().sendPasswordResetEmail(email);\r\n/*\r\n        const form = {email:email}\r\n        //console.log(form)\r\n        //await userValidationSchema.validate(form, { abortEarly: false });\r\n    \r\n        const formData = new FormData()\r\n        //password\r\n\r\n        if (password1 !== password2) \r\n        {\r\n            throw new Error('Vos 2 mots de passe ne correspondent pas.');\r\n        }\r\n        \r\n        formData.append('password', password1);\r\n        const newUser = await updateUser(email, formData);\r\n          //console.log(newUser)\r\n        storeCache('user', {email:newUser.email, username:newUser.username, password:newUser.password})\r\n        */\r\n        //FIREBASE\r\n\r\n          //Rediriger ver UserLogin\r\n\r\n          Alert.alert(\r\n            \"Password reset\",\r\n            \"Vous allez recevoir un email pour enregistrer votre nouveau mot de passe. Si vous ne le trouvez pas, regardez vos spams.\",\r\n            [\r\n              \r\n              {\r\n                text: \"OK\", \r\n                onPress: () => navigation.navigate('UserLogin'),\r\n              },\r\n             \r\n            ],\r\n            { cancelable: true }\r\n          );\r\n    }\r\n    catch(error)\r\n    {\r\n       /* if(password1 !== password2)\r\n        {\r\n            Alert.alert(\"Error\", \"Vos 2 mots de passe ne correspondent pas.\")\r\n        }*/\r\n\r\n        if (error instanceof Yup.ValidationError) \r\n        {\r\n            const formErrors = {};\r\n            error.inner.forEach(err => {\r\n                formErrors[err.path] = err.message;\r\n            });\r\n                console.log(formErrors)\r\n            setErrors(formErrors);\r\n        }\r\n        else\r\n        {\r\n            if(error.code)\r\n            {\r\n                Alert.alert(\"Erreur\", getFirebaseErrorMessage(error.code))\r\n                return;\r\n            }\r\n            Alert.alert(\"Error\", \"Une erreur est sruvenue lors de la verificaiton de vos informations. Vérifiez les données fournies.\")\r\n        }\r\n        console.log(error)\r\n    }finally {\r\n        setIsLoading(false)\r\n    }\r\n}\r\n\r\n    return(\r\n        <View style={[{flex:1}]}>\r\n             <View style={[userLoginStyles.infoContainer]}>\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Votre Email\" onChangeText={(text)=>{setEmail(text)}}\r\n                            multiline={false}\r\n                            readOnly={emailExists}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input, ]}\r\n                            onFocus={() => setIsEmailFocused(true)}\r\n                            onBlur={() => setIsEmailFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[userLoginStyles.inputContainer,isEmailFocused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='email' type='entypo' size={24} color={isEmailFocused?appColors.secondaryColor1:appColors.black} />\r\n                                    </Pressable>\r\n                            }\r\n                            rightIcon={ \r\n                                isEmailCorrect === 'true' ?\r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='checkmark-circle-outline' type='ionicon' size={24} color={appColors.green} />\r\n                                </Pressable>\r\n                                :\r\n                                isEmailCorrect === 'false' ?\r\n                                 <Pressable onPress={() => {}}>\r\n                                 <Icon name='close-circle-outline' type='ionicon' size={24} color={appColors.red} />\r\n                             </Pressable>\r\n                             :\r\n                             false\r\n                            }\r\n                            value={email}\r\n                        />   \r\n                         {errors.email && <Text style={[formErrorStyle.text]}>{errors.email}</Text>}\r\n                </View>\r\n{ emailExists &&\r\n        <View>\r\n              \r\n              <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Votre Mot De Passe\" onChangeText={(pwd)=>{setPassword1(pwd)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input,]}\r\n                            onFocus={() => setIsPassword1Focused(true)}\r\n                            onBlur={() => setIsPassword1Focused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[{borderBottomWidth:1},isPassword1Focused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='key-outline' type='ionicon' size={24} color={appColors.secondaryColor1} />\r\n                                </Pressable>\r\n                            }\r\n                            rightIcon = {\r\n                                isPassword1Showed ?\r\n                                    <Pressable onPress={()=>{setIsPassword1Showed(false)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-off-outline\" size={24} color={appColors.gray} />\r\n                                    </Pressable>\r\n                                :\r\n                                <Pressable onPress={()=>{setIsPassword1Showed(true)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-outline\" size={24} color={appColors.secondaryColor1} />\r\n                                    </Pressable>\r\n                            }\r\n                            value={password1}\r\n                            secureTextEntry={!isPassword1Showed}\r\n                        />   \r\n                </View>\r\n\r\n\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Votre Mot De Passe\" onChangeText={(pwd)=>{setPassword2(pwd)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input,]}\r\n                            onFocus={() => setIsPassword2Focused(true)}\r\n                            onBlur={() => setIsPassword2Focused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[{borderBottomWidth:1},isPassword2Focused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='key-outline' type='ionicon' size={24} color={appColors.secondaryColor1} />\r\n                                </Pressable>\r\n                            }\r\n                            rightIcon = {\r\n                                isPassword2Showed ?\r\n                                    <Pressable onPress={()=>{setIsPassword2Showed(false)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-off-outline\" size={24} color={appColors.gray} />\r\n                                    </Pressable>\r\n                                :\r\n                                <Pressable onPress={()=>{setIsPassword2Showed(true)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-outline\" size={24} color={appColors.secondaryColor1} />\r\n                                    </Pressable>\r\n                            }\r\n                            value={password2}\r\n                            secureTextEntry={!isPassword2Showed}\r\n                        />   \r\n                      {errors.password && <Text style={[formErrorStyle.text]}>{errors.password}</Text>}\r\n                </View> \r\n        </View>\r\n}\r\n                <View style={{height:6}}></View>\r\n                    <CustomButton text=\"Valider\" onPress={()=>{resetUserPassword(email)}} color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={{pressable: userLoginStyles.pressable, text:userLoginStyles.text}} />\r\n                \r\n                   \r\n                \r\n                </View>\r\n                    \r\n\r\n                <CustomModalActivityIndicator onRequestClose={setIsLoading} isLoading={isLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Envoie de l'email de reinitialisation en cours...\" />\r\n\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n/*\r\n <View>\r\n                          {errors.password && <Text style={[formErrorStyle.text]}>{errors.password}</Text>}\r\n                          {errors.email && <Text style={[formErrorStyle.text]}>{errors.email}</Text>}\r\n                    </View>\r\n*/\r\n\r\nexport default ResetPassword\r\n\r\n\r\n","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, KeyboardAvoidingView} from 'react-native';\r\nimport { Input, Icon } from 'react-native-elements';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\n\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\n\r\nimport { appColors, customText, appFont } from '../../styles/commonStyles';\r\nimport { userLoginStyles } from './userLoginStyles';\r\n\r\nimport { CustomButton, CustomModalActivityIndicator } from '../common/CommonSimpleComponents';\r\n\r\nimport { server } from '../../remote/server';\r\nimport { serialize } from '../../utils/commonAppFonctions'\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\n\r\n\r\nconst LoaderPage = (props) => {\r\n\r\n    const route = useRoute()\r\n    const navigation = useNavigation()\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const {checkEmail, checkPassword, checkUsername, user, setUser, isAuthenticated, setIsAuthenticated, loginUserWithEmailAndPassword} = useContext(UserContext)\r\n    useEffect(() => {\r\n        const checkToken = async () => {\r\n            //await SecureStore.deleteItemAsync('user');\r\n            //await SecureStore.deleteItemAsync('authToken');\r\n    //console.log(\"oj\")\r\n            try{\r\n                setIsLoading(true)\r\n                const token = await SecureStore.getItemAsync('authToken');\r\n                \r\n                if(!!token)\r\n                {\r\n                    const user = JSON.parse(await SecureStore.getItemAsync('user'));\r\n                    //console.log(typeof user)\r\n                    //A remplace par user.email...\r\n                    ///await loginUserWithEmailAndPassword(\"francky877832@gmail.com\", \"francky877832\", \"0000000\")\r\n                    loginUserWithEmailAndPassword(user.email, user.username, user.password).then(async (user)=>{\r\n                        //Chargement des données de l'Appli\r\n                        if(!user)\r\n                        {   \r\n                            throw new Error(\"Nous n'avons pas pu vous connecter automatiquement.\")\r\n                        }\r\n                        navigation.replace('Home');\r\n\r\n                        return;\r\n                    }).catch((error) => {\r\n                        console.log(\"TOKEN\")\r\n                        navigation.replace('UserLogin');\r\n                        return;\r\n                    })\r\n                    \r\n                    //setIsAuthenticated(true);\r\n\r\n                    return;\r\n                }\r\n                else\r\n                {\r\n                    navigation.replace('UserLogin');\r\n                }\r\n            }\r\n            catch(error)\r\n            {\r\n                console.log(error)\r\n                console.log(\"NOT TOKEN\")\r\n                navigation.replace('UserLogin');\r\n                setIsAuthenticated(false);\r\n                setIsLoading(false)\r\n            }finally{\r\n                \r\n            }\r\n        }\r\n\r\n        checkToken();\r\n/*\r\n        if (isAuthenticated) {\r\n            // Naviguer vers une autre page si l'utilisateur est authentifié\r\n              navigation.replace('Preferences');\r\n        }\r\n        else\r\n        {\r\n            navigation.replace('UserLogin');\r\n        }\r\n*/\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n       \r\n      }, [isAuthenticated, navigation]);\r\n    \r\n      return (\r\n        <View style={[loaderPageStyles.container]}>\r\n            <CustomModalActivityIndicator onRequestClose={setIsLoading} isLoading={isLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Chargements des données...\" />\r\n        </View>\r\n      )\r\n}\r\n\r\n\r\n/*\r\n <LottieView\r\n                source={require('../../assets/animations/loaderPage1.json')}\r\n                autoPlay\r\n                loop\r\n                style={[loaderPageStyles.animation]}\r\n            />\r\n    */\r\nexport default LoaderPage\r\n\r\n\r\nconst loaderPageStyles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    animation: {\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n})","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, } from 'react-native';\r\nimport { Input } from 'react-native-elements';\r\nimport { useRoute } from '@react-navigation/native';\r\n\r\n\r\n\r\nconst HeaderNavigation = (props) =>\r\n{\r\n    const { title } = props\r\n    const route = useRoute()\r\n    return(\r\n        <View>\r\n            <Text>{title}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst herderNavigationStyles = StyleSheet.create({\r\n    container :\r\n    {\r\n        \r\n    }\r\n})\r\n\r\nexport default HeaderNavigation\r\n\r\n\r\n","import { Easing } from \"react-native\";\r\n\r\nexport const annimatedStackTransition = (layoutWidthOutputRatio, openAnimationTime, closeAnimationTime) => {\r\n    return {\r\n        headerShown: false,\r\n        gestureEnabled: true,\r\n        cardStyleInterpolator: ({ current, next, layouts }) => {\r\n          const progress = current.progress.interpolate({\r\n            inputRange: [0, 1],\r\n            outputRange: [layouts.screen.width * layoutWidthOutputRatio, 0], // Ajuste la vitesse de défilement\r\n            extrapolate: 'clamp',\r\n          });\r\n\r\n          return {\r\n            cardStyle: {\r\n              transform: [\r\n                {\r\n                  translateX: progress,\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        },\r\n        transitionSpec: {\r\n          open: {\r\n            animation: 'timing',\r\n            config: {\r\n                duration: openAnimationTime, // Durée de l'animation en millisecondes\r\n                //easing: Easing.inOut(Easing.ease),\r\n            },\r\n          },\r\n          close: {\r\n            animation: 'timing',\r\n            config: {\r\n                duration: closeAnimationTime, // Durée de l'animation en millisecondes\r\n                //easing: Easing.inOut(Easing.ease),\r\n            },\r\n          },\r\n        },\r\n      }\r\n}","import React, { useState, useEffect, createContext, useContext } from 'react';\r\nimport { View, Text, StyleSheet, StatusBar, Platform } from 'react-native';\r\nimport { NavigationContainer, } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { TransitionPresets } from '@react-navigation/stack';\r\n\r\n\r\nimport Home from '../components/specific/Home';\r\nimport ViewAccountancies from '../components/specific/ViewAccountancies';\r\nimport ViewAccountanciesDetails from '../components/specific/ViewAccountanciesDetails';\r\nimport AddAccountancy from '../components/specific/AddAccountancy';\r\nimport SupplyFunds from '../components/specific/SupplyFunds';\r\n\r\nimport UserLogin from '../components/user/UserLogin';\r\nimport UserSignup from '../components/user/UserSignup';\r\nimport ResetPassword from '../components/user/ResetPassword';\r\nimport LoaderPage from '../components/user/LoaderPage';\r\n\r\nimport HeaderNavigation from '../components/common/HeaderNavigation'\r\n//Contexts\r\n\r\nimport { UserProvider } from '../context/UserContext';\r\nimport { AccountancyProvider } from '../context/AccountancyContext';\r\n\r\nimport { annimatedStackTransition } from './commonNavigationFonctions'\r\n\r\n\r\n\r\n\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n\r\n\r\nexport default function MainNavigation() {\r\n\r\n\r\n\r\n  return ( \r\n<SafeAreaView style={{ flex: 1, }}>\r\n <UserProvider>\r\n  <AccountancyProvider>\r\n            \r\n            <Stack.Navigator\r\n              initialRouteName=\"LoaderPage\"\r\n              screenOptions={annimatedStackTransition(0.9, 250, 200)}\r\n            >\r\n                \r\n                <Stack.Screen name=\"Home\" component={Home}  options={{ title: <HeaderNavigation title=\"Home\"/>, headerShown : true, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"ViewAccountancies\" component={ViewAccountancies}  options={{ title: <HeaderNavigation title=\"Accountancies\"/>, headerShown : true, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"ViewAccountanciesDetails\" component={ViewAccountanciesDetails}  options={{ title: <HeaderNavigation title=\"Accountancies Details\"/>, headerShown : true, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"AddAccountancy\" component={AddAccountancy}  options={{ title: <HeaderNavigation title=\"Add Accountancy\"/>, headerShown : true, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"SupplyFunds\" component={SupplyFunds}  options={{ title: <HeaderNavigation title=\"Add Supply Funds\"/>, headerShown : true, tabBarVisible: false, }} />\r\n\r\n\r\n\r\n\r\n                <Stack.Screen name=\"LoaderPage\" component={LoaderPage}  options={{ title: <HeaderNavigation title=\"Loader\"/>, headerShown : true, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"UserLogin\" component={UserLogin}  options={{ title: <HeaderNavigation title=\"Login\"/>, headerShown : true, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"UserSignup\" component={UserSignup}  options={{ title: <HeaderNavigation title=\"Sign Up\"/>, headerShown : true, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"ResetPassword\" component={ResetPassword}  options={{ title: <HeaderNavigation title=\"Reset Password\"/>, headerShown : true, tabBarVisible: false, }} />\r\n                   \r\n              \r\n              </Stack.Navigator>\r\n      </AccountancyProvider>       \r\n    </UserProvider>\r\n\r\n  </SafeAreaView>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\n\r\n\r\n","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport MainNavigation from './src/navigation/MainNavigation'; \n\nexport default function App() {\n  return (\n      <SafeAreaProvider>\n        <SafeAreaView style={{ flex: 1 }}>\n          <NavigationContainer> \n\n            <MainNavigation />\n          </NavigationContainer> \n        </SafeAreaView>\n      </SafeAreaProvider>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [448], () => (__webpack_require__(3931)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["screen","Dimensions","get","screenWidth","width","appColors","height","appFont","mainFontFamily","undefined","secondaryFontFamily1","secondaryFontFamily2","secondaryFontFamily3","secondaryFontFamily4","customText","text","fontFamily","fontSize","color","inputTextStyle","fontWeight","formErrorStyle","cardWidth","productStyles","StyleSheet","create","container","backgroundColor","marginHorizontal","marginVertical","paddingBottom","containerVisibility","position","justifyContent","alignItems","opacity","zIndex","containerVisibilityInfo","left","right","bottom","padding","containerHorizontal","imageHorizontal","borderRadius","pressable","flex","image","paddingHorizontal","paddingVertical","shopName","fontStyle","productName","alignSelf","price","top","flexDirection","borderWidth","borderColor","category","feesBy","paddingRight","bottomIcons","bottomIconsButton","flexWrap","card","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","isBasketPresent","isBasketPresentText","cardContainer","userLoginStyles","backgroundImage","resizeMode","cover","registerOrLogin","credentialGroup","infoContainer","Object","assign","credentialContainers","forgotBox","forgotText","textDecorationLine","titleBox","title","inputContainer","inputFocused","input","require","formatMoney","m","money","m_tmp","toString","split","money_reverse","j","length","push","i","reverse","join","getFirebaseErrorMessage","errorCode","getDate","today","Date","month","String","getMonth","padStart","getFullYear","slice","isValidDate","date","showAlert","datas","Swal","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","action","refuseAction","server","UserContext","createContext","UserProvider","children","refreshComponent","setRefreshComponent","useState","user","setUser","_id","username","accounters","setAccounters","isAuthenticated","setIsAuthenticated","email","setEmail","setUsername","password","setPassword","temporaryAddress","setTemporaryAddress","filterStateVars","filterStateSetters","utilsFunctions","getUserAccounters","async","response","fetch","method","headers","errorData","Error","message","res","json","error","console","log","getUser","encodeURI","updateUser","userId","updatedFormData","encodeURIComponent","body","ok","responseData","success","checkEmail","checkPassword","pwd","checkUsername","signupUserWithEmailAndPassword","adminPassword","role","location","JSON","stringify","data","loginUserWithEmailAndPassword","credentialType","type","queryString","URLSearchParams","loggedUser","token","_jsx","Provider","value","props","navigation","useNavigation","useRoute","useContext","view","add","supply","_jsxs","View","style","homeStyles","menu","includes","Pressable","menuItem","onPress","navigate","page","Text","menuItemText","logoBox","Image","source","logoImage","menuButton","menuText","marginTop","focused","iconContainer","commentContainer","flatlistContainerView","flatlistContainer","flatlistContainerNotAll","maxHeight","comment","maxWidth","subComment","commentText","sendButton","borderBottomWidth","commentProfileContainer","commentProfile","filtersStyles","contentContainerStyle","topContainer","borderBottomColor","topMostContainer","topHeight","modal","borderTopWidth","borderTopColor","filtres","categoryContainer","orderByContainer","radioBox","radioContainer","marginBottom","modalHeader","modalHeaderText","similarContainer","modalVisibleText","priceContainer","minPrice","paddingLeft","maxPrice","label","conditionContainer","categorySeparator","categoryFocused","textCategoryFocused","filterFlatlist","textCategory","trierFiltrer","trierFiltrerFocused","pressableFilter","pressableFilterFocused","pressableFilterDisabled","pressableFilterTextDisabled","productContainer","flatlist","searchBarStyles","buttonContainer","likeContainer","getBackPosition","buttonContainerLeft","prevButton","likeButton","shareButton","underCaroussel","since","name","details","description","paddingTop","descriptionBox","infosBox","commentsContainer","scrollView","button","buttonText","textAlign","acheter","panier","sellerBrand","likeAddersImages","likeAdders","likeTitle","likeContent","likeItem","someText","propositionPrice","offerLeftText","offerRightText","similarTitleContainer","similarProducts","containerBox","inputText","inputContainerFocused","commonSimpleComponentsStyles","likeIcon","conditionChoice","checkBox","activityIndicator","alignContent","modalActivityIndicator","modalContainer","modalContent","counter","containerStyleInput","priceDetails","priceLine","semiTitle","totalPriceLine","totalPriceText","temporaryNotification","notifications","USER","ON_REGISTERED","ORDERS","ON_NEW_ORDER","PAYMENT_SUCCESSFUL","PAYMENT_FAILED","ON_ORDER_PENDING","ON_ORDER_SHIPPED","ON_ORDER_DELIVERED","OFFERS","ON_NEW_OFFER","ON_OFFER_RESPONSE","ON_ACCEPTED","ON_REFUSED","PRODUCTS","ON_NEW_LIKE","ON_NEW_COMMENT","ON_RESPONSE_COMMENT","ON_NEW_BASKET","ON_DELETE_BASKET","ON_PRODUCT_UPDATED","ON_PRODUCT_CREADTED","ADMIN","MISSED_YOU","NEW_PRODUCT","DONT_WASTE_TIME","BE_CAREFULL","BAD_COMMENT","BAD_PRODUCT","addFavourite","createAsyncThunk","item","bool","rejectWithValue","favourite","product","updateLikes","favourites","some","el","model","notif","notification","modele","toLowerCase","read","sendNotifications","seller","fetchUserFavourites","getState","favouritesSlice","createSlice","initialState","liked","isLoading","disableLikeButton","hasMore","addLike","modifiedProducts","reducers","addLocalFavourite","state","payload","updatedProduct","likes","unshift","removeLocalFavourite","filter","fav","mp","map","addModifiedProduct","updatedProducts","setLikedIcon","setIsLoading","setDisableLikeButton","setPage","setHasMore","addFavouriteContext","isPresent","Set","has","updateLocalFavourites","isAdding","existingIndex","findIndex","splice","extraReducers","builder","addCase","pending","fulfilled","rejected","products","productDetails","actions","CustomButton","styles","disabled","styles_","bg","CustomModalActivityIndicator","onRequestClose","size","Modal","visible","transparent","ActivityIndicator","AccountancyContext","AccountancyProvider","accountancies","setAccountancies","deleteAccountancyRecord","record","fetchAccountancies","getSearchedAccountancies","addUserDailyAccountancy","dailyReport","fetchAccounters","err","useEffect","fetchData","viewAccountanciesStyles","FlatList","renderItem","accounter","handleAccounterPressed","itemText","keyExtractor","ItemSeparatorComponent","ListEmptyComponent","topTitle","contents","titles","titlesText","addAccountancyStyles","flexGrow","containers","normalText","imageBox","imageCloseButton","bottomPicker","borderBottom","wifth","pressableDetails","addProductSubmitView","fullImage","closeButton","closeButtonText","isPostLoading","setIsPostLoading","amount","setAmount","availableReceipients","setAvailableReceipients","amountFocused","setAmountFocused","errors","setErrors","supplyReason","setSupplyReason","supplyReasonFocused","setSupplyReasonFocused","selectedReceipients","setSelectedReceipients","getUsername","getAccounters","tmp","acc","supplyFundsStyles","titleText","Input","placeholder","onChangeText","inputMode","multiline","placeholderTextColor","inputStyle","onFocus","onBlur","underlineColorAndroid","containerStyle","inputBox","inputContainerStyle","receipient","Picker","selectedValue","picker","onValueChange","itemValue","itemIndex","index","Item","_Fragment","r","report","reason","parseInt","billNo","supplyTo","goBack","submitAccountancy","route","params","updateComponent","setUpdateComponent","handleDeletePressed","alertDatas","prev","deleteARecord","canDelete","RenderAccount","sign","viewAccountanciesDetailsStyles","line","cell","recordItemText","substring","receivedBy","cashBalance","supplyCashBalance","selectedDate","setSelectedDate","setDate","dateFocused","setDateFocused","showSearch","setShowSearch","ScrollView","horizontal","topSearch","searchButton","topElInput","readOnly","maxLength","topEl","date_","Alert","alert","searchedAccountancies","ListHeaderComponent","ListFooterComponent","hieght","topSearchEl","borderRightWidth","subTitle","subTitleText","checkoutReason","setCheckoutReason","setBillNo","setReceivedBy","setCashBalance","checkoutReasonFocused","setCheckoutReasonFocused","billNoFocused","setBillNoFocused","receivedByFocused","setReceivedByFocused","cashBalanceFocused","setCashBalanceFocused","Yup","shape","matches","required","min","setCredentialType","React","setRole","setAdminPassword","setLocation","isEmailFocused","setIsEmailFocused","isPasswordFocused","setIsPasswordFocused","isUsernameFocused","setIsUsernameFocused","adminPasswordFocused","setAdminPasswordFocused","locationFocused","setLocationFocused","isPasswordShowed","setIsPasswordShowed","adminPasswordShowed","setAdminPasswordShowed","isEmailCorrect","setIsEmailCorrect","isPasswordCorrect","setIsPasswordCorrect","isUsernameCorrect","setIsUsernameCorrect","KeyboardAwareScrollView","resetScrollToCoords","x","y","scrollEnabled","RadioButton","Group","newValue","numberOfLines","leftIcon","Icon","rightIcon","secureTextEntry","FormData","code","replace","loginUser","form","userValidationSchema","validate","abortEarly","formErrors","inner","forEach","path","signUpUser","isFocused","setIsFocused","Button","shop","password1","setPassword1","password2","setPassword2","isPassword1Focused","setIsPassword1Focused","isPassword2Focused","setIsPassword2Focused","isPassword1Showed","setIsPassword1Showed","isPassword2Showed","setIsPassword2Showed","emailExists","setEmailExists","formData","append","Math","random","auth","sendPasswordResetEmail","cancelable","resetUserPassword","SecureStore","getItemAsync","parse","catch","checkToken","loaderPageStyles","animation","annimatedStackTransition","layoutWidthOutputRatio","openAnimationTime","closeAnimationTime","headerShown","gestureEnabled","cardStyleInterpolator","current","next","layouts","cardStyle","transform","translateX","progress","interpolate","inputRange","outputRange","extrapolate","transitionSpec","open","config","duration","close","Stack","createStackNavigator","MainNavigation","SafeAreaView","Navigator","initialRouteName","screenOptions","Screen","component","Home","options","HeaderNavigation","tabBarVisible","ViewAccountancies","ViewAccountanciesDetails","AddAccountancy","SupplyFunds","LoaderPage","UserLogin","UserSignup","ResetPassword","App","SafeAreaProvider","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","keys","every","key","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}