{"version":3,"file":"static/js/main.8ef728c0.js","mappings":"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","sources":["src/styles/commonStyles.js","src/styles/productStyles.js","src/components/user/userLoginStyles.js","src/utils/commonAppFonctions.js","src/remote/server.js","src/context/UserContext.js","src/components/specific/Home.js","src/components/common/BadgeIcon.js","src/styles/commentsStyles.js","src/styles/filtersStyles.js","src/styles/searchBarStyles.js","src/styles/productDetailsStyles.js","src/styles/commonSimpleComponentsStyles.js","src/utils/offersDatas.js","src/store/favourites/favouritesSlice.js","src/utils/commonAppNetworkFunctions.js","src/components/common/CommonSimpleComponents.js","src/context/AccountancyContext.js","src/components/specific/ViewAccountancies.js","src/styles/addAccountancyStyles.js","src/components/specific/SupplyFunds.js","src/components/specific/ViewAccountanciesDetails.js","src/components/specific/AddAccountancy.js","src/components/forms/validations/userValidation.js","src/components/user/UserLogin.js","src/components/user/UserSignup.js","src/components/user/ResetPassword.js","src/components/user/LoaderPage.js","src/components/common/HeaderNavigation.js","src/navigation/commonNavigationFonctions.js","src/navigation/MainNavigation.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import {StyleSheet, Platform, Dimensions } from \"react-native\";\r\nexport const screen = Dimensions.get(\"window\")\r\nexport const screenWidth = screen.width\r\nexport const screenHeight = screen.height\r\n\r\nexport const appColors = {\r\n    mainColor : \"#F0F0F0\",\r\n    secondaryColor1 : \"blue\", //rgb(32, 137, 220)\r\n    lightOrange : \"rgba(242, 122, 26, 0.1)\",\r\n    lightOrange2 : \"rgba(242, 122, 26, 0.04)\",\r\n    lightOrange3 : \"rgba(242, 122, 26, 1)\",\r\n    secondaryColor2 : \"#fff\",\r\n    secondaryColor3 : \"#ccc\",\r\n    secondaryColor4 : \"#777\",\r\n    secondaryColor5 : \"#444\",\r\n    gray : \"gray\",\r\n    red : \"red\",\r\n    blue : \"rgb(32, 137, 220)\",\r\n    green : \"green\",\r\n    clearGreen : '#90EE90',\r\n    pink : \"pink\",\r\n    voilet : \"violet\",\r\n    orange : \"orange\",\r\n    white : \"#fff\",\r\n    yellow : '#FFC107',\r\n    yellow2 : '#FFF5Cc',\r\n    lightBlack : \"rgba(0, 0, 0, 0.2)\",\r\n    black : \"rgba(0, 0, 0, 0.9)\",\r\n    clearBlack : \"rgba(0, 0, 0, 0.7)\",\r\n    transparentBlack : \"rgba(0, 0, 0, 0.3)\",\r\n    lightWhite : \"rgba(245, 245, 245, 1)\",\r\n    //lightWhite : \"rgba(240, 240, 240, 1)\",\r\n    //lightWhite2 : \"rgba(240, 240, 240, 0.02)\",\r\n\r\n    skeletonBackgroundColor : \"#fff2e0\",\r\n    skeletonForegrundColor : \"#ffffff\",\r\n\r\n    transparent : 'rgba(0,0,0,0)',\r\n\r\n    lightGreen : 'rgba(19, 243, 19, 0.25)',\r\n    lightRed : 'rgba(249, 28, 19, 0.25)',\r\n}\r\n\r\nexport const appFont = {\r\n    mainFontFamily : Platform.select({\r\n        ios: 'Helvetica',\r\n        android: 'Roboto',\r\n    }),\r\n    secondaryFontFamily1 :  \"Arial\",\r\n    secondaryFontFamily2 : \"Georgia\",\r\n    secondaryFontFamily3 :  Platform.select({\r\n        ios: 'Helvetica',\r\n        android: 'Roboto',\r\n    }),\r\n    secondaryFontFamily4 : \"Courier\",\r\n\r\n}\r\n\r\nexport const appFontSize = {\r\n    mainFontSize : 14,\r\n\r\n}\r\nexport const customText = {\r\n    text :\r\n    {\r\n        fontFamily : appFont.mainFontFamily,\r\n        fontSize : appFontSize.mainFontSize,\r\n        color : appColors.black,\r\n    },\r\n}\r\n\r\nexport const inputTextStyle = {\r\n    fontSize: 16,\r\n    color: appColors.secondaryColor5,\r\n    fontFamily : appFont.mainFontFamily,\r\n    fontWeight : \"bold\",\r\n\r\n}\r\n\r\nexport const formErrorStyle = {\r\n    text :\r\n    {\r\n        color : appColors.red,\r\n    }\r\n    \r\n}\r\n\r\nexport const disabledButton = \r\n{\r\n    backgroundColor : appColors.secondaryColor3,\r\n    color : appColors.white,\r\n    fontWeight : 'bold',\r\n}\r\nexport const button = \r\n{\r\n    backgroundColor : appColors.secondaryColor1,\r\n    color : appColors.white,\r\n    fontWeight : 'bold',\r\n} \r\nexport const buttonInvers = \r\n{\r\n    backgroundColor : appColors.white,\r\n    color : appColors.secondaryColor1,\r\n    fontWeight : 'bold',\r\n} \r\nexport const buttonAccepted = \r\n{\r\n    backgroundColor : appColors.green,\r\n    color : appColors.white,\r\n    borderWidth : 1,\r\n    borderColor : appColors.green,\r\n    fontWeight : 'bold',\r\n} ","import { StyleSheet, Dimensions } from \"react-native\";\r\nimport { appColors, appFont } from \"./commonStyles\";\r\n\r\nexport const numProduct = 2\r\nexport const paddingForProductContainer = { horizontal : 10, vertical : 10, }\r\n\r\nexport const marginHorizontal = 5\r\nexport const marginVertical = 5\r\nexport const screenWidth = Dimensions.get('window').width;\r\nexport const cardWidth = (screenWidth/numProduct) - marginHorizontal - paddingForProductContainer.horizontal;\r\n\r\nexport const productStyles = StyleSheet.create({\r\n    container : \r\n    {\r\n        backgroundColor : appColors.secondaryColor2,\r\n        width : cardWidth,\r\n        //height : 100,\r\n        marginHorizontal : marginHorizontal,\r\n        marginVertical : marginVertical,\r\n        paddingBottom : 5,\r\n    },\r\n    containerVisibility :\r\n    {\r\n        position : 'absolute',\r\n        width : '100%',\r\n        height : '100%',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        backgroundColor : appColors.gray,\r\n        opacity : 0.5,\r\n        zIndex : 999,\r\n    },\r\n    containerVisibilityInfo :\r\n    {\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        position : 'absolute',\r\n        left : 0,\r\n        right : 0,\r\n        bottom : 0,\r\n        padding : 10,\r\n        zIndex : 9999+1,\r\n        backgroundColor : appColors.secondaryColor5,\r\n        opacity : 1,\r\n    },\r\n    containerHorizontal : //Horizontal container ?\r\n    {\r\n        backgroundColor : appColors.secondaryColor2,\r\n        width : screenWidth/2,\r\n        //height : 100,\r\n        marginHorizontal : marginHorizontal,\r\n        marginVertical : marginVertical,\r\n        paddingBottom : 5,\r\n    },\r\n    imageHorizontal : \r\n    {\r\n        width : \"100%\",\r\n        //height: 300 * 1.2,\r\n        borderRadius: 0,\r\n    },\r\n\r\n\r\n    pressable :\r\n    {\r\n        flex : 1 ,\r\n    },\r\n\r\n    image : \r\n    {\r\n        width : \"100%\",\r\n        height: cardWidth * 1.2,\r\n        borderRadius: 0,\r\n    },\r\n    text : \r\n    {\r\n        paddingHorizontal : 10,\r\n        paddingVertical : 5\r\n    },\r\n\r\n    shopName :\r\n    {\r\n        fontWeight : \"bold\",\r\n        fontStyle : \"italic\",\r\n        fontFamily : appFont.mainFontFamily,\r\n        color : \"gray\",\r\n        \r\n    },\r\n    productName :\r\n    { \r\n        //fontWeight : \"bold\",\r\n        fontStyle : \"normal\",\r\n        fontFamily : appFont.mainFontFamily,\r\n        color : appColors.secondaryColor5,\r\n        //paddingTop : 7,\r\n        alignSelf : \"center\",\r\n        fontSize: 15,\r\n    },\r\n    price :\r\n    {\r\n        color : appColors.secondaryColor1,\r\n        fontWeight : \"bold\",\r\n    },\r\n\r\n    top :\r\n    {\r\n        height : 25,\r\n        width : \"100%\",\r\n        position : \"absolute\",\r\n        //top : -cardWidth * 1.2,\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-between\",\r\n        paddingHorizontal : 2,\r\n        //marginLeft : -5,\r\n        left : 0,\r\n        right : 0,\r\n        zIndex : 100,\r\n        backgroundColor:appColors.lightBlack,\r\n    },\r\n    bottom :\r\n    {\r\n        top : 5,\r\n        borderRadius: 0,\r\n        padding : 5,\r\n        borderWidth : 1,\r\n        borderColor : appColors.secondaryColor1,\r\n        flexDirection : \"row\",\r\n        justifyContent : \"center\",\r\n    },\r\n    category :\r\n    {\r\n        fontSize : 14,\r\n        fontWeight : \"bold\",\r\n        fontStyle : \"normal\",\r\n        fontFamily : appFont.mainFontFamily,\r\n        color : appColors.secondaryColor1,\r\n    },\r\n    feesBy : \r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        backgroundColor : appColors.secondaryColor5,\r\n        paddingRight : 4,\r\n    },\r\n    bottomIcons :\r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n    },\r\n    bottomIconsButton :\r\n    {\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        paddingHorizontal : 2,\r\n        flexWrap:'wrap',\r\n        width : 52,\r\n    },\r\n\r\n\r\n    card : \r\n    {\r\n        borderRadius: 8,\r\n        shadowColor: appColors.lightWhite,\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 8,\r\n        elevation: 5,\r\n    },\r\n\r\n    isBasketPresent : \r\n    {\r\n        backgroundColor : appColors.secondaryColor5,\r\n        borderColor : appColors.lightBlack,\r\n    },\r\n    isBasketPresentText :\r\n    {\r\n        color : appColors.white,\r\n\r\n    }\r\n\r\n    \r\n})","import { StyleSheet, StatusBar} from \"react-native\";\r\nimport { appColors, appFont, screenWidth, customText, inputTextStyle, screenHeight} from \"../../styles/commonStyles\";\r\n\r\nimport { productStyles } from \"../../styles/productStyles\";\r\n\r\n\r\nexport const cardContainer = {\r\n    position : 'relative',\r\n    justifyContent : 'center',\r\n    alignSelf : 'center',\r\n    left : 0,\r\n    right : 0,\r\n    //top : screenHeight/5,\r\n    //height : 300,\r\n    backgroundColor : appColors.white,\r\n    paddingHorizontal : 30,\r\n    zIndex : 100,\r\n  \r\n     // Ombre sur iOS\r\n    shadowColor: appColors.black,\r\n    shadowOffset: { width: 0, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n    // Ombre sur Android\r\n    elevation: 10,\r\n    borderRadius: 10,\r\n    paddingVertical : 30,\r\n}\r\n\r\nexport const userLoginStyles = StyleSheet.create({\r\n    container :\r\n    {\r\n        flex : 1,\r\n        backgroundColor : appColors.lightWhite,\r\n        justifyContent : 'center',\r\n    },\r\n\r\n\r\n    backgroundImage: \r\n    {\r\n        flex: 1,\r\n        resizeMode: 'cover', // Ajuste l'image pour couvrir tout l'écran\r\n        //justifyContent: 'center', // Centre le contenu (texte, etc.)\r\n        alignItems : 'center',\r\n    },\r\n    cover : \r\n    {\r\n        position : 'absolute',\r\n        flex : 1,\r\n        left : 0,\r\n        right : 0,\r\n        top : 0,\r\n        bottom : 0,\r\n        backgroundColor : appColors.transparentBlack,\r\n        zIndex : 99,\r\n    },\r\n\r\n    registerOrLogin :\r\n    {\r\n        flexDirection : 'row',\r\n    },\r\n    credentialGroup :\r\n    {\r\n        flexDirection : 'row',\r\n        justifyContent : 'space-around',\r\n        width : '100%',\r\n    },\r\n\r\n\r\n    pressable :\r\n    {\r\n        paddingVertical : 15,\r\n        borderRadius : 20,\r\n        bottom : 10\r\n    },\r\n    infoContainer :\r\n    {\r\n        ...cardContainer,\r\n        position : 'absolute',\r\n    },\r\n\r\n    credentialContainers :\r\n    {\r\n        \r\n    },\r\n\r\n    forgotBox :\r\n    {\r\n        flexDirection : 'row',\r\n        justifyContent : 'flex-end',\r\n    },\r\n    forgotText :\r\n    {\r\n        textDecorationLine : 'underline',\r\n        color : appColors.blue,\r\n    },\r\n\r\n\r\n    titleBox :\r\n    {\r\n        left : 20,\r\n        \r\n    },\r\n    title :\r\n    {\r\n        ...customText.text,\r\n        color : appColors.white,\r\n        fontSize : 30,\r\n        fontWeight : \"bold\",\r\n    },\r\n  \r\n    inputContainer :\r\n    {\r\n       // paddingLeft : 20,\r\n    },\r\n    inputFocused :\r\n    {\r\n        borderColor : appColors.secondaryColor1,\r\n    },\r\n    input:\r\n    {\r\n        ...customText.text,\r\n        fontSize : 16,\r\n        left : 10,\r\n\r\n    }\r\n\r\n})","import nlp from \"compromise\";\r\nconst Fuse = require('fuse.js');\r\nimport { Linking, Share, Alert } from 'react-native';\r\n\r\n \r\n\r\nexport const handleSharePress = async (link) => {\r\n    if (!link) {\r\n        console.error(\"Lien manquant pour le partage\");\r\n        return false;\r\n    }\r\n    try {\r\n        await Share.share({\r\n            message: link\r\n        });\r\n        return true\r\n    } catch (error) {\r\n        console.error('Erreur lors du partage :', error);\r\n        return false\r\n    }\r\n}\r\n\r\n\r\nexport const capitalizeFirstLetter = str => str ? str[0].toUpperCase() + str.slice(1).toLowerCase() : str;\r\nexport const debouncer = (callback, time) => {\r\n    let timeoutId;\r\n  \r\n    return (...args) => {\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n  \r\n      timeoutId = setTimeout(() => {\r\n        callback(...args);\r\n        //console.log(\"debouning\")\r\n      }, time);\r\n    };\r\n  };\r\n\r\n\r\n\r\n\r\nexport const openWhatsApp = async (phoneNumber, message) => {\r\n // const url = `https://wa.me/${phoneNumber}` //?text=${encodeURIComponent(message)}`;\r\n\r\n  const url = `whatsapp://send?phone=${phoneNumber}&text=${message}`;\r\n  const fallbackUrl = `https://wa.me/${phoneNumber}?text=${message}`;\r\n\r\n  try {\r\n    // Check if WhatsApp can be opened\r\n    await Linking.openURL(url);\r\n  } catch (err) {\r\n    // If WhatsApp is not installed, open the fallback URL\r\n    await Linking.openURL(fallbackUrl);\r\n  }\r\n\r\n}\r\n\r\nexport const whatsappMessage = (buyer, seller, status, orderNo, group, product) => {\r\n    return `Buyer : ${buyer}\\nSeller : ${seller}\\nStatus: ${status}\\nOrder No: ${orderNo}\\nGroup: ${group}\\nProduct: JW-PROD-${product}`\r\n}\r\n\r\n\r\n\r\n\r\nexport const sinceDate = (_date) => {\r\n    const date2 = new Date(_date)\r\n    const date1 = new Date()\r\n    const date = date1.getTime() - date2.getTime()\r\n    //console.log(date1)\r\n    //console.log(Date.now() + \" - \" + date2.getTime() + \" = \" + date)\r\n    let oneDay = 1000 * 60 * 60 * 24\r\n\r\n    let years = Math.floor(date/(oneDay*365))\r\n    let months = Math.floor(date/(oneDay*30))\r\n    let weeks = Math.floor(date/(oneDay*7))\r\n    let days = Math.floor(date/oneDay)\r\n    let hours = Math.floor(date/(oneDay/24))\r\n    let minutes = Math.floor(date/(oneDay/(24*60)))\r\n    let seconds = Math.floor(date/(oneDay/60*60*24))\r\n\r\n    \r\n    if(years != 0)\r\n        return [isNaN(years)?0:years, years==1 ? \"an\" : \"ans\"]\r\n    else if(months != 0)\r\n        return [isNaN(months)?0:months, \"mois\"]\r\n    else if(weeks != 0)\r\n        return [isNaN(weeks)?0:weeks, weeks==1 ? \"semaine\" : \"semaines\"]\r\n    else if(days != 0)\r\n        return [isNaN(days)?0:days, days==1 ? \"jour\" : \"jours\"]\r\n    else if(hours != 0)\r\n        return [isNaN(hours)?0:hours, hours==1 ? \"heure\" : \"heures\"]\r\n    else if(minutes != 0)\r\n        return [isNaN(minutes)?0:minutes, minutes==1 ? \"minute\" : \"minutes\"]\r\n    else\r\n        return [isNaN(seconds)?0:seconds, (seconds==1 || seconds==0) ? \"seconde\" : \"secondes\"]\r\n\r\n}\r\n\r\nexport const truncateText = (text, numChars, clicked=false) => {\r\n    if(text?.length > numChars)\r\n        return [text?.substring(0, numChars+1), 1, clicked]\r\n    else\r\n        return [text?.substring(0, numChars+1), 0, clicked]\r\n}\r\n\r\nexport const truncateTextAndAddDots = (text, numChars, clicked=false) => {\r\n    const data = truncateText(text, numChars, clicked)\r\n    return data[0] + (data[1] === 1 ? \"...\" : \"\")\r\n}\r\n\r\nexport  const displayComment = (comments) => {\r\n    \r\n    return true\r\n}\r\n\r\nexport  const reshapeComments = (datas) => {\r\n    let comments = [...datas]\r\n    let newComments = []\r\n    for(let i in comments)\r\n    {\r\n        let subComment = []\r\n        let j = i\r\n        for( j in comments)\r\n        {\r\n            if(i != j)\r\n            {\r\n                if(comments[i] != undefined && comments[j] != undefined)\r\n                {\r\n                    if(comments[i]._id == comments[j].isResponseTo)\r\n                    {\r\n                        subComment.push(comments[j])\r\n                        comments[i] = {...comments[i], subComment : subComment}\r\n                        //comments.splice(j, 1)\r\n                        delete comments[j]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n       // console.log(i)     \r\n    }\r\n    for(let j in comments)\r\n        if(comments[j] != undefined)\r\n            newComments.push(comments[j])\r\n    return newComments;\r\n}\r\n\r\n\r\nexport  const formatMoney = (m) => {\r\n    m = m || \"\"\r\n    let money = [];\r\n    let money_separator = '.'\r\n    let m_tmp = m.toString().split('')\r\n    let money_reverse = []\r\n    for(let j=m_tmp.length-1;j>=0;j--)\r\n    {\r\n        if(m_tmp[j] != money_separator)\r\n        {\r\n            money_reverse.push(m_tmp[j])\r\n        }\r\n    }\r\n    for(let i in money_reverse)\r\n    {\r\n            if(money_reverse[i] != money_separator)\r\n            {\r\n                money.push(money_reverse[i])\r\n            }\r\n        if((i+1)%3 == 0 && i != money_reverse.length-1)\r\n        {\r\n            money.push(money_separator)\r\n        }\r\n    }\r\n    return money.reverse().join('')\r\n}\r\n\r\n\r\nexport  const countDatas = (datas) => {\r\n    let count = 0\r\n\r\n    for(let i of datas)\r\n    {\r\n        count += 1;\r\n        if(Array.isArray(i))\r\n        {\r\n            count += i.length;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\n\r\nexport  const reshapeBasketProducts = (p) => {\r\n    const products = [...p]\r\n\r\n}\r\n\r\n\r\n\r\nexport const serialize = (obj, prefix) => {\r\n    const str = [];\r\n    for (const p in obj) {\r\n      if (obj.hasOwnProperty(p)) {\r\n        const k = prefix ? `${prefix}[${p}]` : p;\r\n        const v = obj[p];\r\n        if (v !== null && typeof v === 'object') {\r\n          str.push(serialize(v, k));\r\n        } else {\r\n          str.push(`${encodeURIComponent(k)}=${encodeURIComponent(v)}`);\r\n        }\r\n      }\r\n    }\r\n    \r\n    //console.log(queryString)\r\n    //const params = new URLSearchParams(obj);\r\n    //const queryString = params.toString();\r\n    return str.join(\"&\");\r\n  }\r\n//export  const serialize = serialize\r\n\r\n\r\n// Fonction pour transformer les nombres écrits en lettres en chiffres dans un texte\r\nexport  const convertWordsToNumbers = (text) => {\r\n    // Utilisation de Compromise.js pour analyser le texte\r\n        const comment = new String(text);\r\n        //console.log(doc)\r\n    // Regex pour détecter les nombres écrits en mots\r\n    const numberRegex = /(?:\\b(?:zero|un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|seize|dix[\\s\\-](?:sept|huit|neuf))\\b|\\b(?:vingt(?:\\-et\\-un)?|trente|quarante|cinquante|soixante(?:\\-dix)?|quatre\\-vingt(?:\\-dix)?|cent(?:\\s(?:un|et\\sun))?|mille|million|milliard)\\b)/gi;\r\n\r\n    // Fonction pour convertir les mots en chiffres\r\n    function convertWords(match) {\r\n        switch (match.toLowerCase()) {\r\n            case 'zero':\r\n                return '0';\r\n            case 'un':\r\n                return '1';\r\n            case 'deux':\r\n                return '2';\r\n            case 'trois':\r\n                return '3';\r\n            case 'quatre':\r\n                return '4';\r\n            case 'cinq':\r\n                return '5';\r\n            case 'six':\r\n                return '6';\r\n            case 'sept':\r\n                return '7';\r\n            case 'huit':\r\n                return '8';\r\n            case 'neuf':\r\n                return '9';\r\n            case 'dix':\r\n                return '10';\r\n            case 'onze':\r\n                return '11';\r\n            case 'douze':\r\n                return '12';\r\n            case 'treize':\r\n                return '13';\r\n            case 'quatorze':\r\n                return '14';\r\n            case 'quinze':\r\n                return '15';\r\n            case 'seize':\r\n                return '16';\r\n            case 'vingt':\r\n                return '20';\r\n            case 'trente':\r\n                return '30';\r\n            case 'quarante':\r\n                return '40';\r\n            case 'cinquante':\r\n                return '50';\r\n            case 'soixante':\r\n                return '60';\r\n            case 'quatre-vingt':\r\n                return '80';\r\n            case 'cent':\r\n                return '100';\r\n            case 'mille':\r\n                return '1000';\r\n            case 'million':\r\n                return '1000000';\r\n            case 'milliard':\r\n                return '1000000000';\r\n            default:\r\n                return match;\r\n        }\r\n    }\r\n\r\n    // Remplacer chaque mot correspondant à la regex par sa version convertie\r\n    const replacedText = comment.replace(numberRegex, convertWords);\r\n    //console.log(replacedText)\r\n\r\n    function findNumbers(input) {\r\n        const text = input.replace(/[^a-zA-Z0-9]/g, '');\r\n        console.log(text)\r\n        const longNumberRegex = /\\d{8,}/g;\r\n        const matches = text.match(longNumberRegex);\r\n//console.log(matches)\r\n        if (matches) {\r\n            //console.log(\"Plus de 7\")\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    //const inputString = \"123-456789/123456 78abc123 1234567\";\r\n    const result = findNumbers(replacedText);\r\n    \r\n    //console.log(\"Nombres trouvés:\", result.numbers);\r\n    /*if (result.errors.length > 0) {\r\n        console.error(\"Erreurs:\", result.errors.join(', '));\r\n    }*/\r\n\r\n    return result; // Retourner le texte avec les nombres convertis\r\n}\r\n\r\nexport  const containsEmail = (text) => {\r\n    const emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\r\n    return emailRegex.test(text);\r\n    //return text\r\n}\r\n\r\n\r\n\r\n\r\nexport  const getSearchedProducts = async (filters, products) => {\r\n    const { name, customFilters } = filters;\r\n    let result;\r\n        if(!name)\r\n        {\r\n          result = products\r\n          //console.log(\"vide\")\r\n        }\r\n        else\r\n        {\r\n          const fuse = new Fuse(products, {\r\n          keys: ['name', 'description', 'category'],\r\n          threshold: 0.5, // Ajustez ce seuil selon vos besoins\r\n          });\r\n    \r\n          // Effectuer la recherche floue\r\n          result = fuse.search(name).map(result => result.item);\r\n    \r\n          //comme FUSE JS ne conserve pas l'ordre, utiliser la memoire de tri\r\n            result.sort((a, b) => a.sortIndex - b.sortIndex);\r\n        }\r\n        //console.log(result)\r\n        \r\n        // Appliquer des filtres personnalisés si nécessaire\r\n        let filteredResult = result;\r\n        //console.log(customFilters.minPrice)\r\n        if (customFilters.categories?.length > 0) {\r\n          filteredResult = filteredResult.filter(product => customFilters.categories.includes(product.category));\r\n        }\r\n        if (customFilters.brands?.length > 0) {\r\n          filteredResult = filteredResult.filter(product => customFilters.brands.includes(product.brand));\r\n        }\r\n        if (customFilters.condition?.length > 0) {\r\n          filteredResult = filteredResult.filter(product => customFilters.condition.includes(product.condition));\r\n        }\r\n        if (customFilters.minPrice) {\r\n          filteredResult = filteredResult.filter(product => customFilters.minPrice <= product.price);\r\n        }\r\n        if (customFilters.maxPrice) {\r\n          filteredResult = filteredResult.filter(product => customFilters.maxPrice >= product.price);\r\n        }\r\n    \r\n        return filteredResult\r\n}\r\n\r\nexport const checkOfferPrice = (realPrice, offerPrice)=>\r\n{\r\n    if(offerPrice < (realPrice*50/100) || offerPrice >= realPrice)\r\n    {\r\n        return \"price-boundries-off\"\r\n    }\r\n}\r\n\r\n\r\nexport const formatDateToLitteral = (dateString) =>  {\r\n    const mois = [\r\n        'janvier', 'février', 'mars', 'avril', 'mai', 'juin',\r\n        'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'\r\n    ];\r\n\r\n    const date = new Date(dateString);\r\n    const jour = date.getDate();\r\n    const moisNom = mois[date.getMonth()];\r\n    const annee = date.getFullYear();\r\n\r\n    return `${jour} ${capitalizeFirstLetter(mois[date.getMonth()])} ${annee}`;\r\n}\r\n\r\nexport const convertISOToCustomDateFormat = (isoDateString) => {\r\n    const date = new Date(isoDateString);\r\n\r\n    // Extraire le jour, le mois et l'année\r\n    const day = String(date.getDate()).padStart(2, '0'); // Ajoute un zéro au début si nécessaire\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Les mois commencent à 0, donc on ajoute 1\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}/${month}/${year}`;\r\n}\r\n\r\nexport const pluralize = (nombre, nom) => {\r\n    if (typeof nombre !== 'number') {\r\n        throw new Error('Le premier argument doit être un nombre.');\r\n    }\r\n    \r\n    const exceptions = {\r\n        \"oeil\": \"yeux\",\r\n        \"ciel\": \"cieux\",\r\n        \"monsieur\": \"messieurs\",\r\n        \"madame\": \"mesdames\",\r\n        \"mademoiselle\": \"mesdemoiselles\",\r\n    };\r\n\r\n    // Si le mot fait partie des exceptions\r\n    if (exceptions[nom]) {\r\n        return nombre > 1 ? exceptions[nom] : nom;\r\n    }\r\n\r\n    // Règle générale : ajouter 's' au pluriel\r\n    if (nombre > 1) {\r\n        // Mots en 'al' deviennent 'aux'\r\n        if (nom.endsWith('al') && !nom.endsWith('bal') && !nom.endsWith('carnaval')) {\r\n            return nom.slice(0, -2) + 'aux';\r\n        }\r\n\r\n        // Mots en 'eau', 'eu' prennent un 'x'\r\n        if (nom.endsWith('eau') || nom.endsWith('eu')) {\r\n            return nom + 'x';\r\n        }\r\n\r\n        // Sinon ajouter un 's'\r\n        return nom + 's';\r\n    }\r\n\r\n    // Retourne au singulier\r\n    return nom;\r\n}\r\n\r\n\r\nexport const formatLikes = (likes) => {\r\n    if (likes < 1000) {\r\n      return likes.toString(); // Affiche directement si moins de 1000 likes\r\n    } else if (likes >= 1000 && likes < 1000000) {\r\n      return (likes / 1000).toFixed(likes % 1000 === 0 ? 0 : 1) + 'K'; // Affiche en \"K\"\r\n    } else {\r\n      return (likes / 1000000).toFixed(likes % 1000000 === 0 ? 0 : 1) + 'M'; // Affiche en \"M\"\r\n    }\r\n  }\r\n  \r\n\r\n//ORDERS\r\n\r\nexport  const formatPhoneNumber = (phone) => {\r\n    return phone\r\n}\r\n\r\nexport  const deFormatPhoneNumber = (phone) => {\r\n    return phone\r\n}\r\n\r\n\r\nexport  const generateOrderNo = (prefixe = \"CMD\") => {\r\n    const date = new Date();\r\n    const annee = date.getFullYear();\r\n    const mois = String(date.getMonth() + 1).padStart(2, '0');\r\n    const jour = String(date.getDate()).padStart(2, '0');\r\n\r\n    const nombreAleatoire = Math.floor(1000 + Math.random() * 9000); \r\n    const codeCommande = `${prefixe}-${annee}${mois}${jour}-${nombreAleatoire}`;\r\n    return codeCommande;\r\n}\r\nexport const choosePrice = (product) => {\r\n    if(product.hasOwnProperty('offers') && Object.keys(product.offers)?.length>0 && product.offers?.offers?.length>0 && product.offers?.offers?.at(-1)?.hasGotResponse==1 )\r\n    {\r\n        return product.offers?.offers?.at(-1)?.price\r\n    }\r\n    return product.newPrice\r\n}\r\n\r\n//export  const choosePrice = choosePrice\r\n\r\nexport  const hasPropositionPrice = (product) => {\r\n    //console.log(product)\r\n    return product.hasOwnProperty('offers') && Object.keys(product?.offers)?.length>0 && product?.offers?.offers?.length>0 && product?.offers?.offers?.at(-1)?.hasGotResponse==1\r\n}\r\n\r\nexport const calculateTotalPrice = (products) => {\r\n    const totalPrice = products.reduce((total, product) =>{\r\n        const priceToPay = choosePrice(product)\r\n        return total+parseInt(priceToPay)*(product.orderQuantity||1)\r\n    }, 0)\r\n    return totalPrice\r\n}\r\n//export  const calculateTotalPrice = calculateTotalPrice\r\n\r\n\r\nexport  const formDataToJSON = (formData) => {\r\n    const jsonObject = {};\r\n    console.log(\"   FORM DATAS\")\r\n    console.log(formData)\r\n    if (formData instanceof FormData) {\r\n      for (const [key, value] of formData.entries()) {\r\n        jsonObject[key] = value;\r\n      }\r\n    } else {\r\n      throw new Error('Provided data is not an instance of FormData');\r\n    }\r\n    \r\n    return JSON.stringify(jsonObject);\r\n  }\r\n\r\nexport  const getFirebaseErrorMessage = (errorCode) => {\r\n    switch (errorCode) {\r\n      case 'auth/invalid-email':\r\n        return \"L'adresse e-mail est invalide.\";\r\n      case 'auth/user-disabled':\r\n        return \"Ce compte a été désactivé.\";\r\n      case 'auth/user-not-found':\r\n        return \"Aucun utilisateur trouvé avec cette adresse e-mail.\";\r\n      case 'auth/wrong-password':\r\n        return \"Le mot de passe est incorrect.\";\r\n      case 'auth/too-many-requests':\r\n        return \"Trop de tentatives de connexion. Réessayez plus tard.  Si vous ne voulez pas attendre réinitialisez votre mot de passe.\";\r\n      default:\r\n        return \"Une erreur inconnue s'est produite. Veuillez réessayer.\";\r\n    }\r\n};\r\n\r\nexport  const getDate = () => {\r\n    const today = new Date();\r\n\r\n    const month = String(today.getMonth() + 1).padStart(2, '0');\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    const year = String(today.getFullYear()).slice(-2);\r\n\r\n    const formattedDate = `${day}/${month}/${year}`;\r\n    return formattedDate\r\n}\r\n\r\nexport  const isValidDate = (date) => {\r\n\r\n    return date.split('/').length === 3\r\n}\r\n\r\n\r\n\r\n","import { Platform } from \"react-native\";\r\n\r\nexport const appName = 'jirashopping'\r\nexport const storeUrl = 'https://play.google.com/store/apps/details?id=com.jira877832.jiraShopping';\r\n\r\n\r\n//export const server = 'https://jirashoppingbackend.onrender.com'\r\nexport const server = 'http://192.168.73.254:3000'\r\n//export const server = 'https://jirashopping-25ee1eaa49ff.herokuapp.com'\r\n\r\n\r\n/*\r\nexport const noImagePath = `${server}/userApp/assets/images/products/empty-img.png`\r\nexport const productsImagesPath = `${server}/userApp/assets/images/products`\r\nexport const usersImagesPath = `${server}/userApp/assets/images/users`\r\n*/\r\n\r\nexport const noImagePath = `https://www.dropbox.com/scl/fi/82ynwo73s4eb4mkglqovr/empty-img.png?rlkey=p3zdu1gtf0gri0akd7t431dzl&st=onkx5j9t&dl=1`\r\nexport const productsImagesPath = `https://www.dropbox.com/scl/fi`\r\nexport const usersImagesPath = `https://www.dropbox.com/scl/fi`\r\n\r\nexport const orderPhone = `+237692456077`\r\n\r\n","import React, { createContext, useState, useEffect } from 'react'\r\nimport { Alert, Platform } from 'react-native';\r\nimport { serialize, formDataToJSON } from '../utils/commonAppFonctions'\r\nimport { server } from '../remote/server'\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { storeCache, getCache } from '../cache/cacheFunctions';\r\n\r\nconst UserContext = createContext()\r\nconst UserProvider = ({children}) => {\r\n//    const navigation = useNavigation()\r\n    const [refreshComponent, setRefreshComponent] = useState(false)\r\n//IsAuthentiate doit suivre l'evolution de user\r\n    const [user, setUser] = useState({_id:'66feb4217fa2c43a7e8d76d9', username:'dkb61'})\r\n    //const user = {_id:'66feb4217fa2c43a7e8d76d9', username:'dkb61'}\r\n\r\n    const [accounters, setAccounters] = useState([])\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const [temporaryAddress, setTemporaryAddress] = useState({})\r\n\r\n    //Controler les datas avec JOI VALIDATION\r\n    const checkEmail = (email) =>{\r\n\r\n    }\r\n    const checkPassword = (pwd) =>{\r\n\r\n    }\r\n    const checkUsername = (username) =>{\r\n\r\n    }\r\n\r\n    const logout = async () => {\r\n        try {\r\n            await SecureStore.deleteItemAsync('user');\r\n            await SecureStore.deleteItemAsync('authToken');\r\n            setUser(null);\r\n            setIsAuthenticated(false);\r\n        } catch (error) {\r\n          console.error('Error removing token:', error);\r\n        }\r\n      };\r\n\r\n\r\n    const signupUserWithEmailAndPassword = async (email, username, password, adminPassword, role, location) => {\r\n        const user = {\r\n            email : email,\r\n            password : password,\r\n            adminPassword : adminPassword,\r\n            role:role,\r\n            location : location\r\n        }\r\n\r\n        try {\r\n          const response = await fetch(`${server}/api/auth/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n          });\r\n      \r\n          if (!response.ok) {\r\n            throw new Error('Erreur lors de l’inscription'+await response.text());\r\n          }\r\n      \r\n          const data = await response.json();\r\n          console.log('Inscription réussie:', data);\r\n        } catch (error) {\r\n          console.error('Erreur:', error);\r\n        }\r\n      };\r\n      \r\n\r\n      const loginUserWithEmailAndPassword = async (email, username, password, credentialType) => {\r\n        const user = {\r\n            email : email, //\"francky877832@gmail.com\",\r\n            username : username, //\"francky877832\",\r\n            password : password, //\"0000000\",\r\n            type : credentialType\r\n        }\r\n    //console.log(JSON.stringify(user))\r\n        try\r\n        {\r\n            const params = new URLSearchParams(user);\r\n            const queryString = params.toString();\r\n            //console.log(server)\r\n            //const response = await fetch(`${server}/api/auth/login?${serialize(user)}`, {\r\n            //https://jirashopping-25ee1eaa49ff.herokuapp.com/api/auth/login?email=francky877832%40gmail.com&username=&password=00000000000\r\n            //const response = await fetch(`https://jirashopping-25ee1eaa49ff.herokuapp.com/api/auth/login?email=francky877832%40gmail.com&username=&password=000000000`, {\r\n            const response = await fetch(`${server}/api/auth/login?${queryString}`, {\r\n                method: 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            \r\n            //console.log(\"jj\")\r\n            if(response.ok)\r\n            {\r\n                const loggedUser = await response.json()\r\n                const token = loggedUser.token\r\n                const user = loggedUser.user\r\n                //Mis a jour de async storage\r\n                console.log(user)\r\n                if (Platform.OS != 'web')\r\n                {\r\n                    await SecureStore?.setItemAsync('authToken', token);\r\n                    await SecureStore?.setItemAsync('user', JSON.stringify({email:user.email, username:user.username, password:user.password}));\r\n                }\r\n                \r\n                //console.log(loggedUser)\r\n                \r\n                //Mis a jour du contexte User\r\n                setUser(user)\r\n                setTemporaryAddress({address:user.address, phone:user.phone, name:user.name})\r\n                setIsAuthenticated(true);\r\n                return user\r\n            }\r\n            else\r\n            {\r\n                throw new Error((await response.json()).error)\r\n                //throw new Error(\"await response.json()\")\r\n                //return false\r\n            }\r\n        \r\n            //Alert.alert(\"Signed In\")\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            //Alert.alert(\"Une erreur est survenue\", `${error.message} => Verifier vos identifiants.`)\r\n            setIsAuthenticated(false);\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n\r\n   const  updateUser = async (userId, updatedFormData) => {\r\n    try {\r\n            const response = await fetch(`${server}/api/auth/users/update/${encodeURIComponent(userId)}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n                body: updatedFormData,  // Convertit les données mises à jour en FormData\r\n            });\r\n    \r\n            // Vérification si la requête a réussi\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                console.error('Erreur lors de la mise à jour de l\\'utilisateur:', errorData.message);\r\n                return;\r\n            }\r\n            //console.log(updatedFormData)\r\n            \r\n            const responseData = await response.json();\r\n            //Mise a jour des donnees locales\r\n           // const newDatas = formDataToJSON(updatedFormData)\r\n            \r\n\r\n            //console.log('Réponse du serveur:', responseData);\r\n    \r\n            if (responseData.success) {\r\n                //console.log('Informations mises à jour avec succès:', responseData.user);\r\n            }\r\n            return responseData.user\r\n        } catch (error) {\r\n            console.error('Erreur lors de la requête:', error);\r\n        }\r\n    }\r\n\r\n    const getUser = async (email) => {\r\n        try\r\n        {\r\n            const response = await fetch(`${server}/api/auth/users/get/${encodeURI(email)}`, {\r\n                method: 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n\r\n            if(!response)\r\n            {\r\n                throw new Error(\"Cet email ne'existe pas \" + await response.text())\r\n            }\r\n            \r\n            const data = await response.json()\r\n            //console.log(data)\r\n            return true\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const getUserAccounters = async () => {\r\n        try\r\n        {\r\n            const response = await fetch(`${server}/api/auth/accountancies/get`, {\r\n                method: 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n\r\n            if(!response)\r\n            {\r\n                const errorData = await response.text();\r\n               throw new Error(errorData.message);\r\n            }\r\n            \r\n            const res = await response.json()\r\n            setAccounters(res.datas)\r\n            return res.datas\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            return []\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    \r\n    \r\n\r\n    const filterStateVars = {temporaryAddress, refreshComponent, email, username, password, user, isAuthenticated }\r\n    const filterStateSetters = {setTemporaryAddress, setRefreshComponent, setEmail, setUsername, setPassword, setUser, setIsAuthenticated}\r\n    const utilsFunctions = { getUserAccounters, getUser, updateUser, checkEmail, checkPassword, checkUsername, signupUserWithEmailAndPassword, loginUserWithEmailAndPassword}\r\n    return (\r\n        <UserContext.Provider value={{...filterStateVars, ...filterStateSetters, ...utilsFunctions}}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport { UserContext, UserProvider }","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, Image} from 'react-native';\r\n\r\nimport { appColors, customText} from '../../styles/commonStyles';\r\nimport { useRoute, useNavigation } from '@react-navigation/native';\r\n\r\nimport { cardContainer } from '../user/userLoginStyles';\r\nimport { UserContext } from '../../context/UserContext';\r\nconst Home = (props) => {\r\n    //console.log('ok--')\r\n    //On va afficher home en fonciton de admin role\r\n    const navigation = useNavigation()\r\n    const route = useRoute()\r\n    const {user} = useContext(UserContext)\r\n\r\n    const view = ['admin', 'boss', 'visualizer']\r\n    const add = ['admin', 'boss', 'cashier']\r\n    const supply = ['admin', 'boss', 'supplier']\r\n    return (\r\n        <View style={[homeStyles.container]}>\r\n\r\n            <View style={[homeStyles.logoBox]}>\r\n                <Image source={require('../../assets/logos/logo1.jpg')}  style={[homeStyles.logoImage]}/>\r\n            </View>\r\n\r\n            <View style={{height:10}}></View>\r\n\r\n            <View style={[homeStyles.infoContainer]}>\r\n                \r\n                <Pressable  style={[homeStyles.menuButton, {backgroundColor:!view.includes(user.role)?appColors.secondaryColor5:appColors.blue}]} onPress={() => { view.includes(user.role) ? navigation.navigate('ViewAccountancies') : null }}>\r\n                    <Text style={[customText.text, homeStyles.menuText ]}>Visualiser</Text>\r\n                </Pressable>\r\n\r\n                <Pressable style={[homeStyles.menuButton, {backgroundColor:!add.includes(user.role)?appColors.secondaryColor5:appColors.blue}]} onPress={() => { add.includes(user.role) ? navigation.navigate('AddAccountancy') : null }}>\r\n                    <Text style={[customText.text, homeStyles.menuText ]}>Ajouter</Text>\r\n                </Pressable>\r\n\r\n                {\r\n                    <Pressable style={[homeStyles.menuButton, {backgroundColor:!supply.includes(user.role)?appColors.secondaryColor5:appColors.blue}]} onPress={() => { supply.includes(user.role) ? navigation.navigate('SupplyFunds') : null }}>\r\n                        <Text style={[customText.text, homeStyles.menuText ]}>Approvisionnement</Text>\r\n                    </Pressable>\r\n                }\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\nconst homeStyles = StyleSheet.create({\r\n    container :\r\n    {\r\n        flex : 1,\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n    },\r\n    logoBox : \r\n    {\r\n        height : 300,\r\n       width : '100%',\r\n       justifyContent : 'center',\r\n        alignItems : 'center',\r\n    },\r\n    logoImage :\r\n    {\r\n        height : '100%',\r\n        width : '90%'\r\n    },\r\n    infoContainer :\r\n    {\r\n        ...cardContainer,\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        width  : '100%',\r\n    },\r\n    menuButton :\r\n    {\r\n        padding : 20,\r\n        borderRadius : 10,\r\n        borderWidth : 1,\r\n        borderColor : appColors.lightWhite,\r\n        width : '100%',\r\n        alignItems : 'center',\r\n        marginTop : 5,\r\n        backgroundColor : appColors.blue,\r\n    },\r\n    menuText :\r\n    {\r\n        fontWeight : 'bold',\r\n        fontSize : 16,\r\n        color : appColors.white,\r\n    },\r\n})\r\n","import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { appColors } from '../../styles/commonStyles';\r\n\r\nconst BadgeIcon = ({ name, size, color, badgeCount, bottomTab, focused, styles }) => {\r\n  return (\r\n    <View style={[bottomTab?extrBadgeStyles.iconContainer:styles.iconContainer, focused?extrBadgeStyles.focused:null]}>\r\n      <Ionicons name={name} size={size} color={color} />\r\n      {badgeCount > 0 && (\r\n        <View style={styles.badgeContainer}>\r\n          <Text style={styles.badgeText}>{badgeCount}</Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BadgeIcon;\r\n\r\nconst extrBadgeStyles = StyleSheet.create({\r\n  focused :\r\n  {\r\n    backgroundColor : appColors.lightOrange,\r\n    borderRadius : 25,\r\n  },\r\n  iconContainer: \r\n  {\r\n    width: 50,\r\n    //height: 24,\r\n    //margin: 5,\r\n    padding : 5,\r\n    justifyContent : 'center',\r\n    alignItems : 'center',\r\n  },\r\n})","import { StyleSheet, Dimensions } from \"react-native\";\r\nimport { appColors, appFont, customText, inputTextStyle } from \"./commonStyles\";\r\n\r\nimport { productStyles } from \"./productStyles\";\r\n\r\n\r\nexport const screen = Dimensions.get(\"window\")\r\nexport const screenWidth = screen.width\r\nexport const screenHeight = screen.height\r\n\r\nexport const commentsStyles = StyleSheet.create({\r\n    container: \r\n    {\r\n      backgroundColor : appColors.white,\r\n      paddingHorizontal:10,\r\n      paddingBottom : 0,\r\n    },\r\n    commentContainer: \r\n    {\r\n      backgroundColor : \"red\",\r\n    \r\n    },\r\n    flatlistContainerView :\r\n    {\r\n      //flex : 1,\r\n      paddingBottom : 10,\r\n      paddingRight : 10,\r\n    },\r\n    flatlistContainer : \r\n    {\r\n      backgroundColor : appColors.white,\r\n      paddingRight : 15\r\n    },\r\n    flatlistContainerNotAll :\r\n    {\r\n      maxHeight : 600,\r\n    },\r\n    \r\n    comment: \r\n    {\r\n      ///...productStyles.card,\r\n      flexDirection : \"row\",\r\n      backgroundColor : appColors.secondaryColor4,\r\n      padding : 5,\r\n      marginTop : 10,\r\n      alignSelf : \"flex-start\",\r\n      paddingHorizontal : 10,\r\n      paddingVertical : 5,\r\n      borderRadius : 10,\r\n      maxWidth : \"90%\",\r\n      left : 1,\r\n    },\r\n    subComment: \r\n    {\r\n      backgroundColor : appColors.secondaryColor3,\r\n      alignSelf : \"flex-end\",\r\n      width : \"65%\",\r\n      paddingHorizontal : 10,\r\n      paddingVertical : 5,\r\n      left : 1,\r\n    },\r\n    commentText :\r\n    {\r\n      ...customText.text,\r\n    },\r\n    sendButton :\r\n    {\r\n        left : 5,\r\n    },\r\n\r\n    inputContainer :\r\n    {\r\n      top : 0,\r\n      //justifyContent : \"center\",\r\n      //alignItems : \"center\",\r\n    },\r\n    input :\r\n    {\r\n      ...customText,\r\n      ...inputTextStyle,\r\n      padding : 10,\r\n    },\r\n    inputFocused :\r\n    {\r\n      borderBottomWidth : 1,\r\n      borderColor : appColors.secondaryColor1,\r\n    },\r\n\r\n    commentProfileContainer :\r\n    {\r\n      width : 30,\r\n      height : 30,\r\n      borderRadius : 15,\r\n      justifyContent : 'center',\r\n      alignItems : 'center',\r\n      alignSelf : 'flex-end',\r\n      borderWidth : 1,\r\n      borderColor : appColors.lightWhite,\r\n      zIndex : 99,\r\n      //bottom : 0,\r\n      //top : '3%',\r\n    },\r\n    commentProfile :\r\n    {\r\n      width : 30,\r\n      height : 30,\r\n      borderRadius : 15,\r\n      //top : '2%',\r\n    }\r\n  \r\n    \r\n\r\n  });","import { StyleSheet, } from \"react-native\";\r\nimport { appColors, appFont, screenWidth, customText, inputTextStyle} from \"./commonStyles\";\r\nimport { screenHeight } from \"./commentsStyles\";\r\n\r\n\r\nexport const card  = {\r\n    borderRadius: 8,\r\n    shadowColor: appColors.black,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 8,\r\n    elevation: 5,\r\n    borderWidth : 1,\r\n    borderColor : appColors.secondaryColor3,\r\n}\r\n\r\n\r\nexport const topHeight = 55\r\nexport const subTopHeight = 55\r\nexport const totalTopHeight = topHeight+subTopHeight\r\n\r\nexport const filtersStyles = StyleSheet.create({\r\n\r\n    contentContainerStyle :\r\n    {\r\n       // minHeight : 40,\r\n        //height : 40+55,\r\n    },\r\n    container :\r\n    {\r\n        backgroundColor : appColors.white,\r\n        //flex:1,\r\n        zIndex : 98,\r\n        flex : 1,\r\n        //paddingTop : 5,\r\n       ////paddingBottom : 10,\r\n       //backgroundColor : appColors.red,\r\n    },\r\n\r\n    topContainer :\r\n    {\r\n        flexDirection:\"row\",\r\n        justifyContent:\"space-around\",\r\n        alignItems : \"center\",\r\n        //borderWidth : 1,\r\n        borderBottomWidth : 1,\r\n        borderBottomColor : appColors.secondaryColor3,\r\n        //borderTopWidth : 1,\r\n        //borderTopColor : appColors.lightWhite,\r\n        backgroundColor : appColors.white,\r\n        //height : 40,  \r\n        flex : 1, //40+55 for topMostContainer\r\n    },\r\n    topMostContainer :\r\n    {\r\n        height : totalTopHeight,\r\n        //flex : 1,\r\n       // borderWidth : 1,\r\n       //backgroundColor : \"red\",\r\n    },\r\n\r\n    modal :\r\n    {\r\n        //flex : 1,\r\n        paddingBottom : 5,\r\n        borderTopWidth : 1,\r\n        borderTopColor : appColors.secondaryColor3,\r\n        //borderBottomWidth : 1,\r\n        //borderBottomColor : appColors.secondaryColor1,\r\n        backgroundColor : appColors.white,\r\n        zIndex : 100,\r\n        position : \"absolute\", //sor du flow de contentContainerStyle puisque qu!il a un height fixe : 40+55 \r\n        left : 0,\r\n        right : 0,\r\n        top : totalTopHeight,\r\n        borderWidth : 1,\r\n        borderBottomColor : appColors.secondaryColor4,\r\n        borderRadius: 5,\r\n        shadowColor: appColors.lightWhite,\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 8,\r\n        elevation: 5,\r\n        backgroundColor : appColors.lightWhite,\r\n        //paddingTop : 5,\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n    },\r\n      \r\n    filtres :\r\n    {\r\n        justifyContent : \"center\",\r\n        paddingHorizontal : 5,\r\n        //borderTopWidth : 1,\r\n        //borderTopColor : appColors.secondaryColor3,\r\n        flex : 1,//40+55 for topMostContainer\r\n        //height : 55, \r\n        backgroundColor : appColors.white,\r\n        zIndex : 100,\r\n    },\r\n    categoryContainer :\r\n    {\r\n        width: \"100%\",\r\n        //height : 300,\r\n        top : 10,\r\n        paddingBottom : 25,\r\n        justifyContent:\"center\",\r\n    },\r\n    orderByContainer :\r\n    {\r\n        flex: 1, \r\n        //position : \"absolute\",\r\n        width: screenWidth,\r\n        alignSelf : 'center',\r\n        alignItems : \"center\",\r\n        justifyContent: 'center',\r\n        borderBottomWidth : 1,        \r\n        backgroundColor: appColors.clearBlack,\r\n        zIndex : 101,\r\n    },\r\n    radioBox : \r\n    {\r\n        ...card,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        backgroundColor : appColors.lightWhite,\r\n        width : '90%',\r\n        paddingHorizontal : 40,\r\n        paddingVertical : 20,\r\n        borderWidth : 1,\r\n        borderColor : appColors.clearBlack,\r\n        borderRadius : 10,\r\n    },\r\n    radioContainer: \r\n    {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n    },\r\n    modalHeader :\r\n    {\r\n        paddingVertical : 20,\r\n    },  \r\n    modalHeaderText :\r\n    {\r\n        fontSize : 20,\r\n        fontWeight : 'bold',\r\n    },\r\n\r\n    similarContainer : \r\n    {\r\n        top :60,\r\n        paddingBottom : 5,\r\n        backgroundColor : appColors.lightWhite,\r\n    },\r\n\r\n    modalVisibleText : \r\n    {\r\n        color: appColors.secondaryColor1\r\n    },\r\n\r\n    priceContainer : \r\n    {\r\n        flexDirection : \"column\",\r\n        marginTop : 10,\r\n        width: screenWidth,\r\n        backgroundColor : appColors.lightWhite,\r\n    },\r\n    price : \r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n    },\r\n    minPrice : \r\n    {\r\n        paddingHorizontal : 2,\r\n        flex : 1,\r\n        paddingLeft : 5,\r\n    },\r\n    maxPrice : \r\n    {\r\n        paddingHorizontal : 2,\r\n        flex : 1,\r\n        paddingRight : 5,\r\n    },\r\n    label : \r\n    {\r\n        alignSelf : \"center\",\r\n        fontSize : 15,\r\n        fontStyle : appFont.mainFontFamily,\r\n    },\r\n    input : \r\n    {\r\n        ...customText.text,\r\n        ...inputTextStyle,\r\n        width : \"100%\",\r\n        height: 40,\r\n        borderColor : appColors.secondaryColor3,\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        paddingVertical: 2,\r\n        paddingHorizontal : 20,\r\n        flex : 1,\r\n        justifyContent : \"center\", \r\n        backgroundColor : appColors.white,\r\n    },\r\n\r\n    inputFocused : \r\n    {\r\n        borderColor: appColors.secondaryColor1, \r\n    },\r\n\r\n    conditionContainer :\r\n    {\r\n        flexDirection:\"column\", \r\n        justifyContent:\"space-around\",\r\n        marginTop : 10,\r\n        width: screenWidth,\r\n        /*position:\"absolute\",\r\n        top:0,\r\n        left:0,right:0,\r\n        zIndex : 100,*/\r\n    },\r\n   \r\n    categorySeparator :\r\n    {\r\n        width: 20,\r\n    },\r\n     \r\n \r\n\r\n\r\n    categoryFocused :\r\n    {\r\n        backgroundColor : appColors.secondaryColor1,\r\n        borderWidth : 1,\r\n        borderColor : appColors.white,\r\n    },\r\n    textCategoryFocused :\r\n    {\r\n        color : appColors.white,\r\n    },\r\n\r\n    label :\r\n    {\r\n        ...customText.text,\r\n       fontFamily : appFont.secondaryFontFamily3,\r\n       fontWeight : \"bold\",\r\n       color : appColors.secondaryColor5,\r\n    },\r\n    \r\n    filterFlatlist :\r\n    {\r\n        //flex : 1, \r\n        top : 10,\r\n        alignSelf : \"center\",\r\n        width : \"100%\",\r\n        //backgroundColor:\"red\",\r\n    },\r\n    category :\r\n    {\r\n        justifyContent : \"center\",\r\n        backgroundColor : \"#fff\",\r\n        borderWidth : 1, \r\n        borderColor : \"#ccc\",\r\n        paddingVertical : 5,\r\n        paddingHorizontal : 10,\r\n        borderRadius : 15,\r\n        height : 35,\r\n    },\r\n    textCategory :\r\n    {\r\n        color : \"#555\",\r\n        fontFamily : appFont.mainFontFamily,\r\n        fontSize : 12,\r\n        fontWeight : \"bold\",\r\n    },\r\n\r\n\r\n    trierFiltrer :\r\n    {\r\n        flex : 1,\r\n       flexDirection : \"row\",\r\n       justifyContent:\"center\",\r\n       alignItems : \"center\",\r\n       //paddingHorizontal : 20,\r\n       //paddingVertical : 10,\r\n       height : \"100%\", //OK!\r\n\r\n    },\r\n    trierFiltrerFocused :\r\n    {\r\n        borderTopWidth : 1,\r\n        borderTopColor : appColors.secondaryColor1,\r\n    },\r\n\r\n    pressableFilter :\r\n    {\r\n       borderWidth : 1,\r\n       borderColor : appColors.secondaryColor3,\r\n       padding : 7,\r\n       paddingHorizontal : 10,\r\n       borderRadius : 20,\r\n       flexDirection : \"row\",\r\n    },\r\n    pressableFilterFocused :\r\n    {\r\n        borderWidth : 2,\r\n        borderColor : appColors.secondaryColor1,\r\n        backgroundColor : appColors.lightOrange,\r\n    },\r\n\r\n    pressableFilterDisabled:\r\n    {\r\n        borderWidth : 2,\r\n       // borderColor : appColors.secondaryColor1,\r\n        //backgroundColor : appColors.secondaryColor2,\r\n        borderColor : appColors.secondaryColor1,\r\n        backgroundColor : appColors.lightOrange,\r\n    },\r\n    pressableFilterTextDisabled:\r\n    {\r\n       //textDecorationLine : \"line-through\",\r\n       color : appColors.red,\r\n    },\r\n/*\r\n    cardItem : \r\n    {\r\n        borderRadius: 80,\r\n        shadowColor: appColors.lightWhite,\r\n        shadowOffset: { width: 5, height: 10 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 8,\r\n        elevation: 50,\r\n        backgroundColor : appColors.lightWhite,\r\n        paddingTop : 10,\r\n    },\r\n  /*  cardItem : \r\n    {\r\n        borderRadius: 20,\r\n        shadowColor: appColors.lightWhite,\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 8,\r\n        elevation: 50,\r\n        backgroundColor : appColors.lightWhite,\r\n    },\r\n*/\r\n   \r\n//FOR PRODUCTLIST\r\n    productContainer :\r\n    {\r\n        backgroundColor : appColors.lightWhite,\r\n    },\r\n    flatlist :\r\n    {\r\n        backgroundColor : appColors.lightWhite,\r\n    },\r\n\r\n  \r\n})","import { StyleSheet, } from \"react-native\";\r\nimport { appColors, appFont, customText, inputTextStyle } from \"./commonStyles\";\r\n\r\n\r\nexport const searchBarStyles = StyleSheet.create({\r\n    container: \r\n    {\r\n        flex : 1,\r\n        borderTopWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopColor: appColors.mainColor,\r\n        borderBottomColor: appColors.mainColor,\r\n        backgroundColor : appColors.white,\r\n        flexDirection : \"row\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        //height : 35,\r\n        paddingHorizontal : 10,\r\n    },\r\n    containerBox :\r\n    {\r\n        flex:1,\r\n        flexDirection : \"row\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        paddingHorizontal : 5,\r\n        backgroundColor: appColors.white,\r\n    },\r\n    prevButton : \r\n    {\r\n        top : 0,\r\n    },\r\n    inputText : \r\n    {\r\n        ...customText.text,\r\n        ...inputTextStyle,\r\n        fontSize: 16,\r\n        color: '#333',\r\n        fontFamily : appFont.mainFontFamily,\r\n    },\r\n    inputContainer : \r\n    {\r\n        borderWidth: 1,\r\n        borderColor: appColors.lightWhite,\r\n        paddingHorizontal : 5,\r\n        backgroundColor: appColors.white,\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        alignSelf : \"center\",\r\n        borderWidth : 1,\r\n        borderColor: appColors.lightWhite,\r\n        borderRadius : 60,\r\n    },\r\n   \r\n    inputContainerFocused : \r\n    {\r\n        borderWidth : 1,\r\n        borderColor: appColors.secondaryColor1,\r\n    },\r\n\r\n    \r\n})\r\n","import { StyleSheet, StatusBar} from \"react-native\";\r\nimport { appColors, appFont } from \"./commonStyles\";\r\nimport { screenHeight, screenWidth } from \"./commentsStyles\";\r\nimport { productStyles } from \"./productStyles\";\r\nimport { filtersStyles } from \"./filtersStyles\";\r\n\r\nexport const productDetailsStyles = StyleSheet.create({\r\n    container : \r\n    {\r\n        //top : 0,\r\n        width : \"100%\",\r\n        height : \"100%\",\r\n    },\r\n    buttonContainer : \r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-between\",\r\n        paddingHorizontal : 10,\r\n        zIndex : 100,\r\n        backgroundColor : appColors.lightBlack, //transparence sur limage\r\n    },\r\n    likeContainer :\r\n    {\r\n        ...filtersStyles.similarContainer,\r\n        top : 20,\r\n        //paddingLeft : 1,\r\n        paddingBottom :  20,\r\n    },\r\n    getBackPosition :\r\n    {\r\n        bottom : 60 //to get back position from buttonContainer\r\n    },\r\n\r\n    buttonContainerLeft : \r\n    {\r\n       flexDirection : \"row\",\r\n       justifyContent : \"space-between\",\r\n    },\r\n    prevButton :\r\n    {\r\n        color : appColors.white,\r\n    },\r\n    likeButton : //not used cause of different place to display in\r\n    {\r\n        backgroundColor : appColors.white,\r\n        color : appColors.white,\r\n    },\r\n    shareButton :\r\n    {\r\n       \r\n    },\r\n    underCaroussel :\r\n    {\r\n        //flex : 1,\r\n        backgroundColor : appColors.white,\r\n\r\n    },\r\n    since :\r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-between\",\r\n        \r\n    },\r\n    name :\r\n    {\r\n        \r\n        \r\n    },\r\n    details :\r\n    {\r\n        flexDirection:\"row\",\r\n        justifyContent:\"space-between\",\r\n        top : 15,\r\n    },\r\n    description :\r\n    {\r\n      paddingTop : 25,\r\n      paddingBottom : 20,\r\n    },\r\n    descriptionBox : \r\n    {\r\n        flexDirection : \"column\",\r\n        backgroundColor : appColors.secondaryColor3,\r\n        padding : 10,\r\n        top : 5,\r\n        borderRadius : 5,\r\n        width : \"100%\",\r\n    },\r\n    infosBox :\r\n    {\r\n        paddingHorizontal : 10,\r\n        paddingTop : 5,\r\n    },\r\n    commentsContainer : \r\n    {\r\n        //flex : 1,\r\n        width : \"100%\",\r\n        //paddingHorizontal : 5,\r\n        paddingBottom : 10,\r\n        backgroundColor : appColors.white,\r\n        top : 10,\r\n        paddingTop : 10,\r\n    },\r\n    scrollView :\r\n    {\r\n        backgroundColor : appColors.lightWhite,\r\n        width : \"100%\",\r\n        //bottom : -screenHeight/2,\r\n        left : 0,\r\n        right : 0,\r\n        \r\n    },\r\n\r\n    bottom :\r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-between\",\r\n        alignItems : \"center\",\r\n        position : \"relative\",\r\n        left : 0,\r\n        right : 0,\r\n        bottom : 0,\r\n        backgroundColor : appColors.white,\r\n        height : 60,\r\n        borderWidth : 1,\r\n        borderColor : appColors.secondaryColor3,\r\n        //paddingVertical : 10, height est fixe\r\n        paddingHorizontal : 10,\r\n        //zIndex : 0,\r\n\r\n    },\r\n    button:\r\n    {\r\n        ...productStyles.card,\r\n        shadowColor : appColors.white,\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        height : 50,\r\n        borderRadius : 5,\r\n    },\r\n    buttonText:\r\n    {\r\n        textAlign : \"center\",\r\n        fontWeight : \"bold\",\r\n    },\r\n    price :\r\n    {\r\n        flex : 1,\r\n        //flexWrap : 'wrap',\r\n        flexDirection : 'row',\r\n        alignItems : \"center\",\r\n        justifyContent : 'space-evenly',\r\n        paddingHorizontal : 5,\r\n        //backgroundColor:'red',\r\n    },\r\n    acheter :\r\n    {\r\n        flex : 1,\r\n        borderRadius : 5,\r\n    },\r\n    panier :\r\n    {\r\n        flex : 1,\r\n        borderRadius : 5,\r\n       // borderLeftColor : appColors.white,\r\n        //borderLeftWidth : 1,\r\n        borderWidth : 1,\r\n        borderColor : appColors.secondaryColor1,\r\n        left : -5,\r\n    },\r\n\r\n    sellerBrand :\r\n    {\r\n        backgroundColor : appColors.lightOrange,\r\n        paddingVertical : 10,\r\n        paddingHorizontal : 5,\r\n        width : screenWidth,\r\n    }, \r\n\r\n    likeAddersImages : \r\n    {\r\n        width : 50,\r\n        height : 50,\r\n        borderRadius : 25,\r\n        //left : -10,\r\n    },\r\n\r\n    likeAdders : \r\n    {\r\n        backgroundColor : appColors.white,\r\n        padding : 10,\r\n        //alignItems : 'center',\r\n    },\r\n    likeTitle : \r\n    {\r\n\r\n    },\r\n    likeContent :\r\n    {\r\n        width : '100%',\r\n        flexDirection : 'row',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n    },\r\n    likeItem :\r\n    {\r\n        position : 'relaive',\r\n        justifyContent:\"center\",\r\n        alignItems : 'center',\r\n    },\r\n    someText : \r\n    {\r\n        fontWeight: \"bold\", fontSize: 20, color: appColors.black ,paddingLeft:10,\r\n    },\r\n    color:\r\n    {\r\n        width : 16,\r\n        height : 16,\r\n        borderRadius : 8,\r\n    },\r\n\r\n \r\n    //OFFERS\r\n    propositionPrice :\r\n    {\r\n        flexDirection : 'row',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        paddingVertical : 10,\r\n        paddingHorizontal : 10,\r\n        backgroundColor : appColors.black,\r\n        borderTopWidth : 1,\r\n        borderColor : appColors.white,\r\n\r\n    },\r\n\r\n    offerLeftText :\r\n    {\r\n        color : appColors.white,\r\n    },\r\n    offerRightText :\r\n    {\r\n        color : appColors.white,\r\n    },\r\n    \r\n\r\n\r\n    //\r\n    similarContainer : \r\n    {\r\n        ...filtersStyles.similarContainer,\r\n        top : 10,\r\n        paddingLeft : 1,\r\n        paddingBottom :  20,\r\n        backgroundColor : appColors.white,\r\n        flex : 1,\r\n        //justifyContent : 'center',\r\n        //alignItems : 'center',\r\n        //width : '100%',\r\n    },\r\n    similarTitleContainer :\r\n    {\r\n        paddingTop : 10\r\n    },\r\n    similarProducts :\r\n    {\r\n        flex:1,\r\n        top : 10,\r\n        backgroundColor : appColors.white,\r\n      \r\n        //height : '100%',\r\n    }\r\n\r\n  \r\n})","import { StyleSheet, } from \"react-native\";\r\nimport { appColors, appFont, screenWidth} from \"./commonStyles\";\r\nimport { productStyles } from \"./productStyles\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\nimport { card } from \"./filtersStyles\";\r\n\r\n\r\nexport const commonSimpleComponentsStyles = StyleSheet.create({\r\n    \r\n    likeButton : \r\n    {\r\n        likeIcon :\r\n        {\r\n            //...productStyles.card, isCard paramater\r\n            width : 30,\r\n            height : 30,\r\n            //justifyContent:\"center\", \r\n            alignItems : 'center',\r\n        },\r\n        \r\n    },\r\n    shareButton : \r\n    {\r\n        container :\r\n        {\r\n            flex : 1,\r\n            flexDirection : \"row\",\r\n            paddingHorizontal : 10,\r\n        },\r\n        \r\n    },\r\n\r\n    prevButton : \r\n    {\r\n        container :\r\n        {\r\n            flex : 1,\r\n            flexDirection : \"row\",\r\n            paddingHorizontal : 10,\r\n        },\r\n        \r\n    },\r\n    customText : \r\n    {\r\n        container :\r\n        {\r\n            flex : 1,\r\n            flexDirection : \"row\",\r\n            paddingHorizontal : 10,\r\n        },\r\n        \r\n    },\r\n\r\n    conditionChoice : \r\n    {\r\n        checkBox : \r\n        {\r\n            flexDirection:\"column\", \r\n            justifyContent:\"space-around\", \r\n        },\r\n        \r\n    },\r\n\r\n    activityIndicator :\r\n    {\r\n        container :{\r\n            position : \"absolute\",\r\n            left : 0,\r\n            right : 0,\r\n            top : 0,\r\n            bottom : 0,\r\n            backgroundColor : appColors.lightOrange,\r\n        },\r\n        icon :\r\n        {\r\n\r\n        },\r\n        activityIndicator:{\r\n            width : \"100%\",\r\n            height : \"100%\",\r\n            alignSelf : \"center\",\r\n            justifyContent : \"center\",\r\n            alignContent : \"center\",\r\n        },\r\n        \r\n    },\r\n\r\n    modalActivityIndicator : \r\n    {\r\n        modalContainer :\r\n        {\r\n            flex: 1, \r\n            //position : \"absolute\",\r\n            width: screenWidth,\r\n            alignSelf : 'center',\r\n            alignItems : \"center\",\r\n            justifyContent: 'center',\r\n            borderBottomWidth : 1,        \r\n            backgroundColor: appColors.clearBlack,\r\n            zIndex : 101,\r\n        },\r\n        modalContent : \r\n        {\r\n            ...card,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor : appColors.lightWhite,\r\n            width : '90%',\r\n            paddingHorizontal : 40,\r\n            paddingVertical : 20,\r\n            borderWidth : 1,\r\n            borderColor : appColors.clearBlack,\r\n            borderRadius : 10,\r\n        },\r\n    },\r\n    \r\n    counter : \r\n    {\r\n        container :\r\n       {\r\n            left : 20,\r\n            flexDirection : 'row',\r\n            //backgroundColor : appColors.blue,\r\n            alignItems : 'center',\r\n            justifyContent : 'space-between',\r\n       },\r\n       containerStyleInput :\r\n       {\r\n            width : 50,\r\n            height : 35,\r\n            flexDirection : 'row',\r\n            alignItems : 'center',\r\n            //backgroundColor : 'green',\r\n       },\r\n       inputContainer :\r\n       {\r\n           width : 30,\r\n           height : 25,\r\n           backgroundColor : appColors.lightWhite,\r\n       },\r\n       \r\n    },\r\n\r\n\r\n    priceDetails : \r\n    {\r\n       container :\r\n       {\r\n            padding : 10,\r\n            backgroundColor : appColors.black,\r\n       },\r\n       title:\r\n       {\r\n            fontWeight : 'bold',\r\n            color : appColors.white,\r\n       },\r\n       priceLine:\r\n       {\r\n            flexDirection : 'row',\r\n            justifyContent : 'space-between',\r\n            alignItems : 'center',\r\n            paddingVertical : 5,\r\n       },\r\n       semiTitle:\r\n       {\r\n            color : appColors.secondaryColor3,\r\n       },\r\n       price:\r\n       {\r\n            fontWeight : 'bold',\r\n            color : appColors.white,\r\n       },\r\n       totalPriceLine:\r\n       {\r\n            backgroundColor : appColors.secondaryColor1,\r\n            padding : 5,\r\n       },\r\n       totalPriceText:\r\n       {\r\n            color : appColors.white,\r\n            fontWeight : 'bold',\r\n       }\r\n        \r\n    },\r\n\r\n    temporaryNotification :\r\n    {\r\n        container :\r\n        {\r\n            backgroundColor : appColors.clearBlack,\r\n            position : 'absolute',\r\n            bottom : 0,\r\n            left : 0,\r\n            right : 0,\r\n            padding : 20,\r\n            justifyContent : 'center',\r\n            alignItems : 'center',\r\n        },\r\n        message:\r\n        {\r\n            color : appColors.white,\r\n        },\r\n    },\r\n\r\n    \r\n\r\n})","export const offersDatas = [\r\n\t{\r\n\t\tid : 1,\r\n\t\tseller : \"Francky\",\r\n\t\tbuyer : \"Thomas\",\r\n\t\tproduct : \"1\",\r\n\t\trealPrice : 2000,\r\n\t\toffers : [\r\n\t\t\t{_id:\"1\",from:\"Thomas\",price:\"1200\", hasGotResponse:0},{_id:\"2\",from:\"Francky\",price:\"1800\",hasGotResponse:0},{_id:\"3\",from:\"Thomas\",price:\"1300\",hasGotResponse:1,},\r\n\t\t\t{_id:\"4\",from:\"Francky\",price:\"1800\",hasGotResponse:1},{_id:\"5\",from:\"Thomas\",price:\"1300\",hasGotResponse:2,},{_id:\"6\",from:\"Thomas\",price:\"1300\",hasGotResponse:0,},\r\n\t\t],\r\n\t}\r\n]\r\nexport const defaultOffer = [{_id:\"100\",hasGotResponse:0}]\r\n\r\n\r\nexport const settings = [\r\n\t{\r\n\t\tname : \"Parametres Du Compte\",\r\n\t\tcomponent : \"AccountSettings\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"Changer De Mot De Passe\",\r\n\t\tcomponent : \"PasswordChange\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"Mes Adresses\",\r\n\t\tcomponent : \"Address\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"A Propos De Nous\",\r\n\t\tcomponent : \"AboutUs\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"Parrainage\",\r\n\t\tcomponent : \"Referral\",\r\n\t\tavailable : false,\r\n\t},\r\n\t{\r\n\t\tname : \"Devenir Une Boutique Pro\",\r\n\t\tcomponent : \"OpenShop\",\r\n\t\tavailable : false,\r\n\t},\r\n\t{\r\n\t\tname : \"Admin\",\r\n\t\tcomponent : \"AdminPanel\",\r\n\t\tavailable : true,\r\n\t},\r\n\t/*{\r\n\t\tname : \"Admina\",\r\n\t\tcomponent : \"AdminPanel\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"Admin\",\r\n\t\tcomponent : \"AdminPanel\",\r\n\t\tavailable : true,\r\n\t},\r\n\t{\r\n\t\tname : \"Admin\",\r\n\t\tcomponent : \"AdminPanel\",\r\n\t\tavailable : true,\r\n\t},*/\r\n]\r\n\r\n\r\n\r\n\r\nexport const notifications = \r\n\t{\r\n\t\tUSER : {\r\n\t\t\tON_REGISTERED : { \r\n\t\t\t\ttitle : \"Bienveue!!!\",\r\n\t\t\t\tmessage : \"Nous sommes heureux de vous compter parmi nous. Sur jiraShopping, Vendez ce que vous voulez gratuitement.\\nTout le monde merite une seconde chance, meme votre produit.\",\r\n\t\t\t\taction : \"Account\",\r\n\t\t\t},\r\n\t\t},\r\n\r\n\tORDERS : {\r\n\t\tON_NEW_ORDER : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tPAYMENT_SUCCESSFUL : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tPAYMENT_FAILED : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_ORDER_PENDING : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_ORDER_SHIPPED : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_ORDER_DELIVERED : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t},\r\n\r\n\tOFFERS : {\r\n\t\tON_NEW_OFFER : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_OFFER_RESPONSE : {\r\n\t\t\tON_ACCEPTED : { \r\n\t\t\t\tmessage : \"\",\r\n\t\t\t\taction : \"\",\r\n\t\t\t},\r\n\t\t\tON_REFUSED : { \r\n\t\t\t\tmessage : \"\",\r\n\t\t\t\taction : \"\",\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\r\n\tPRODUCTS : {\r\n\t\tON_NEW_LIKE : {\r\n\t\t\ttitle : \"Nouveau Like\",\r\n\t\t\tmessage : \"Un de vos produits a reçu un nouveau Like. Précipitez-vous pour faire une propositon.\",\r\n\t\t\taction : \"ProductDetails\",\r\n\t\t},\r\n\t\tON_NEW_COMMENT : { \r\n\t\t\ttitle : \"Nouveau Commentaire\",\r\n\t\t\tmessage : \"Votre produit a un nouveau commentaire. Profitez-en pour séduire le client.\",\r\n\t\t\taction : \"AllComments\",\r\n\t\t},\r\n\t\tON_RESPONSE_COMMENT : { \r\n\t\t\ttitle : \"Nouveau Commentaire\",\r\n\t\t\tmessage : \"Votre commentaire a reçu a une nouvelle réponse. Profitez-en pour séduire le client.\",\r\n\t\t\taction : \"AllComments\",\r\n\t\t},\r\n\t\tON_NEW_BASKET : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_DELETE_BASKET : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tON_PRODUCT_UPDATED : { \r\n\t\t\ttitle : \"Produit Mis A Jour\",\r\n\t\t\tmessage : \"Un produit que vous suivez a ete mis a jour. Précipitez-vous pour placer un nouveau deal.\",\r\n\t\t\taction : \"ProductDetails\",\r\n\t\t},\r\n\t\tON_PRODUCT_CREADTED : { \r\n\t\t\ttitle : \"Nouveau Produit\",\r\n\t\t\tmessage : \"Une boutique que vous suivez vient d'ajouter un nouveau produit. Précipitez-vous pour faire une offre.\",\r\n\t\t\taction : \"ProductDetails\",\r\n\t\t},\r\n\t},\r\n\r\n\tADMIN : {\r\n\t\tMISSED_YOU : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tNEW_PRODUCT : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tDONT_WASTE_TIME : { \r\n\t\t\tmessage : \"\",\r\n\t\t\taction : \"\",\r\n\t\t},\r\n\t\tBE_CAREFULL : {\r\n\t\t\tBAD_COMMENT : { \r\n\t\t\t\tmessage : \"\",\r\n\t\t\t\taction : \"\",\r\n\t\t\t},\r\n\t\t\tBAD_PRODUCT : { \r\n\t\t\t\tmessage : \"\",\r\n\t\t\t\taction : \"\",\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { server } from '../../remote/server';\r\nimport { useCallback } from 'react';\r\nimport { sendNotifications } from '../../utils/commonAppNetworkFunctions' \r\n// slices/favouritesSlice.js\r\n\r\nconst loggedUser = \"Francky\";\r\nconst loggedUserId = \"66715deae5f65636347e7f9e\";\r\n\r\n// Thunks asynchrones\r\n\r\n// Equivalent de la fonction `addFavourite` dans FavouritesContext\r\nexport const addFavourite = createAsyncThunk(\r\n  'favourites/addFavourite',\r\n  async ({ item, bool, user }, { rejectWithValue }) => {\r\n    try {\r\n      let response = {};\r\n      const favourite = {\r\n        user: user._id,\r\n        username: user.username,\r\n        product: item._id,\r\n      };\r\n\r\n      if (bool) {\r\n          response = await fetch(`${server}/api/datas/favourites/update/${user._id}`, {\r\n              method: 'POST',\r\n              body: JSON.stringify(favourite),\r\n              headers: { 'Content-Type': 'application/json' },\r\n          });\r\n\r\n          response = await fetch(`${server}/api/datas/products/likes/update/${item._id}`, {\r\n              method: 'PUT',\r\n              body: JSON.stringify({ updateLikes: 1, userId:user._id }),\r\n              headers: { 'Content-Type': 'application/json' },\r\n          });\r\n\r\n          //console.log(item.seller)\r\n          //'tem/favour'tes cont'ent les produ'ts brutes de la BDD differencts de ceux de ModifiedProducts\r\n          if(!item.favourites.some(el => el._id===user._id))\r\n          {\r\n              await sendNotifications({ user:item.seller._id, source:\"app\", model:\"PRODUCTS\", type:\"ON_NEW_LIKE\", datas:item._id })\r\n          }\r\n        \r\n          \r\n\r\n      } else {\r\n          response = await fetch(`${server}/api/datas/favourites/remove/${user._id}`, {\r\n              method: 'PUT',\r\n              body: JSON.stringify(favourite),\r\n              headers: { 'Content-Type': 'application/json' },\r\n          });\r\n\r\n          response = await fetch(`${server}/api/datas/products/likes/update/${item._id}`, {\r\n              method: 'PUT',\r\n              body: JSON.stringify({ updateLikes: -1, userId:user._id }),\r\n              headers: { 'Content-Type': 'application/json' },\r\n          });\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Erreur lors de la requête addFavourite');\r\n      }\r\n\r\n      //return { item, bool };\r\n    } catch (error) {\r\n        console.error(error)\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Equivalent de la fonction `fetchUserFavourites` dans FavouritesContext\r\nexport const fetchUserFavourites = createAsyncThunk(\r\n  'favourites/fetchUserFavourites',\r\n  async ({ user, page }, { getState, rejectWithValue }) => {\r\n    //console.log(\"page\")\r\n    //console.log(user)\r\n    try {\r\n      const response = await fetch(`${server}/api/datas/favourites/get/${user}?page=${page}`);\r\n      if (!response.ok) {\r\n        throw new Error('Erreur lors de la requête Fetch favourite'+await response.text());\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n        console.error(error)\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Slice Redux\r\nconst favouritesSlice = createSlice({\r\n  name: 'favourites',\r\n  initialState: {\r\n    favourites: [], // Equivalent de `const [favourites, setFavourites] = useState([])`\r\n    liked: null, // Equivalent de `const [liked, setLikedIcon] = useState()`\r\n    isLoading: false, // Equivalent de `const [isLoading, setIsLoading] = useState(false)`\r\n    disableLikeButton: false, // Equivalent de `const [disableLikeButton, setDisableLikeButton] = useState(false)`\r\n    hasMore: true, // Equivalent de `const [hasMore, setHasMore] = useState(true)`\r\n    page: 1, // Equivalent de `const [page, setPage] = useState(1)`\r\n    error: null,\r\n    addLike : 0,\r\n    modifiedProducts : [],\r\n  },\r\n  reducers: {\r\n    addLocalFavourite(state, action) {\r\n        //console.log(action.payload)\r\n      const {product, user} = action.payload;\r\n      //console.log(user)\r\n      if (!state.favourites.some(item => item._id === product._id)) {\r\n        const updatedProduct = {\r\n          ...product,\r\n          likes : product.likes+1,\r\n          favourites: [user, ...product.favourites]\r\n        };\r\n\r\n        state.favourites.unshift(updatedProduct);\r\n        state.modifiedProducts.unshift(updatedProduct);\r\n        //console.log(product.likes)\r\n      }\r\n      //console.log(state.favourites)\r\n      state.addLike = state.addLike+1\r\n    },\r\n    // Méthode pour supprimer un produit de la liste des favoris (exemple)\r\n    removeLocalFavourite(state, action) {\r\n      const {product, user} = action.payload;\r\n\r\n      const updatedProduct = {\r\n        ...product,\r\n        likes : product.likes-1,\r\n        favourites: product.favourites.filter(item => item._id !== user._id)\r\n      };\r\n\r\n      const fav = state.favourites.filter(item => item._id !== product._id);\r\n      const mp = state.modifiedProducts.map(item => {\r\n          if (item._id === product._id) {\r\n            return updatedProduct \r\n          }\r\n            return item\r\n        })\r\n        \r\n        state.favourites = fav\r\n        state.modifiedProducts = mp\r\n        state.addLike = state.addLike-1\r\n    },\r\n    addModifiedProduct(state, action) {\r\n      //console.log(\"addModifiedProduct\")\r\n      const product = action.payload\r\n      const isModifiedProduct = state.modifiedProducts.some(item => item._id === product._id);\r\n      if(isModifiedProduct)\r\n      {\r\n        const mp = state.modifiedProducts.map(item => {\r\n          if (item._id === product._id) {\r\n            return product \r\n          }\r\n          return item\r\n        })\r\n\r\n        state.modifiedProducts = mp\r\n      }\r\n      else\r\n      {\r\n        const updatedProducts = [product, state.modifiedProducts]\r\n        state.modifiedProducts = updatedProducts\r\n      }\r\n      //state.favourites = state.modifiedProducts\r\n    },\r\n    setLikedIcon(state, action) {\r\n      state.liked = action.payload; // Equivalent de `setLikedIcon`\r\n    },\r\n    setIsLoading(state, action) {\r\n      state.isLoading = action.payload; // Equivalent de `setIsLoading`\r\n    },\r\n    setDisableLikeButton(state, action) {\r\n      state.disableLikeButton = action.payload; // Equivalent de `setDisableLikeButton`\r\n    },\r\n    setPage(state, action) {\r\n      state.page = action.payload; // Equivalent de `setPage`\r\n    },\r\n    setHasMore(state, action) {\r\n      state.hasMore = action.payload; // Equivalent de `setHasMore`\r\n    },\r\n    addFavouriteContext(state, action) {\r\n      const { item, bool } = action.payload;\r\n      //console.log(item)\r\n      const favouriteIds = new Set(state.favourites.map(fav => fav._id));\r\n      const isPresent = favouriteIds.has(item._id);\r\n\r\n      if (bool && !isPresent) {\r\n        state.favourites = [item, ...state.favourites];\r\n      } else if (!bool && isPresent) {\r\n        state.favourites = state.favourites.filter(fav => fav._id !== item._id);\r\n      }\r\n    },\r\n    updateLocalFavourites(state, action) {\r\n        const { item, isAdding } = action.payload;\r\n        const existingIndex = state.favourites.findIndex(fav => fav._id === item._id);\r\n  \r\n        if (isAdding) {\r\n          if (existingIndex === -1) {\r\n            state.favourites.push(item);\r\n          }\r\n        } else {\r\n          if (existingIndex !== -1) {\r\n            state.favourites.splice(existingIndex, 1);\r\n          }\r\n        }\r\n      },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(addFavourite.pending, (state) => {\r\n        state.isLoading = true; // eviter un render pour eviter product.likes+2\r\n      })\r\n      .addCase(addFavourite.fulfilled, (state, action) => {\r\n        state.isLoading = false; // eviter un render pour eviter product.likes-2\r\n      })\r\n      .addCase(addFavourite.rejected, (state, action) => {\r\n        state.isLoading = false; // Equivalent de `setIsLoading(false)`\r\n        state.error = action.payload; // Gestion des erreurs\r\n      })\r\n      .addCase(fetchUserFavourites.pending, (state) => {\r\n        state.isLoading = true; // Equivalent de `setIsLoading(true)`\r\n      })\r\n      .addCase(fetchUserFavourites.fulfilled, (state, action) => {\r\n        state.isLoading = false; // Equivalent de `setIsLoading(false)`\r\n        const products = action.payload.datas;\r\n        if (products.length > 0) {\r\n          state.favourites = [...state.favourites, ...products[0].productDetails]; // Equivalent de `setFavourites([...prevProducts, ...products[0].productDetails])`\r\n          state.modifiedProducts = [...state.favourites, ...products[0].productDetails]; \r\n          state.page += 1; // Equivalent de `setPage((prevPage) => prevPage + 1)`\r\n        } else {\r\n          state.hasMore = false; // Equivalent de `setHasMore(false)`\r\n        }\r\n      })\r\n      .addCase(fetchUserFavourites.rejected, (state, action) => {\r\n        state.isLoading = false; // Equivalent de `setIsLoading(false)`\r\n        state.error = action.payload; // Gestion des erreurs\r\n      });\r\n  },\r\n});\r\n\r\nexport const isProductFavourite = (state, productId) => {\r\n    return state.favourites.favourites.some(product => product._id === productId);\r\n  };\r\n  export const hasBeenModifiedProduct = (state, productId) => {\r\n    return state.favourites.modifiedProducts.some(product => product._id === productId);\r\n  };\r\n\r\nexport const { setLikedIcon, setIsLoading, setDisableLikeButton, setPage, setHasMore, addFavouriteContext, updateLocalFavourites,  addLocalFavourite, removeLocalFavourite, addModifiedProduct } = favouritesSlice.actions;\r\n\r\nexport default favouritesSlice.reducer;\r\n","\r\nimport {Alert} from 'react-native';\r\nimport { notifications } from './offersDatas';\r\nimport { server } from '../remote/server';\r\n\r\n\r\n//\r\n\r\n\r\n\r\nexport  const sendNotifications = async ({user, source, model, type, datas}) => {\r\n    const notif = notifications[model]\r\n    const message = notif[type].message\r\n    const action = notif[type].action\r\n    const title = notif[type].title\r\n//console.log(notif)\r\n    const notification = {\r\n        user : user,\r\n        source : source,\r\n        modele : model.toLowerCase(),\r\n        type : type.toLowerCase(),\r\n        message : message,\r\n        action : action,\r\n        read : 0,\r\n        title : title,\r\n        datas : datas\r\n    }\r\n    \r\n        //console.log(notification.type)\r\n            try{\r\n                //console.log(\"Ok\")\r\n                const response = await fetch(`${server}/api/datas/notifications/update/${user}`, {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify(notification),\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },})\r\n                            //console.log(datas)\r\n                if (!response.ok) {\r\n                    throw new Error('Erreur lors de la requête'+(await response.text()));\r\n                }\r\n\r\n                return true\r\n\r\n            }catch(error){\r\n                console.error(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n                return false\r\n            }\r\n}\r\n\r\n\r\nexport  const getNotifications = async (user, page, limit) => {\r\n    //console.log(username, page, limit)\r\n    try{\r\n        const response = await fetch(`${server}/api/datas/notifications/get/${user._id}?page=${page}&limit=${limit}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'Application/json',\r\n            },});\r\n            \r\n        const datas = await response.json()\r\n        //console.log(datas)\r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n       // console.log(datas.notifications)\r\n        return datas.notifications\r\n    }catch(error){\r\n        console.log(error)\r\n        //Alert.alert(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return []\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport  const updateNotificationsRead = async ({user, id}) => {\r\n    console.log(user, id)\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/notifications/read/${user}/${id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({}),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n        },})          \r\n        //const datas = await response.json()\r\n                //console.log(datas)\r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n            //console.log(datas)\r\n            return true\r\n    }catch(error){\r\n        console.log(error)\r\n        Alert.alert(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return false\r\n    }\r\n}\r\n\r\nexport  const getProductFromNotifications = async (id) => {\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/products/get/${id}`);            \r\n        const data = await response.json()\r\n       \r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n         //console.log(data)\r\n        return data\r\n    }catch(error){\r\n        //console.log(error)\r\n        console.log(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return []\r\n    }\r\n}\r\n\r\n\r\n//OFFERS\r\nexport  const getOffers = async (user, page, limit) => {\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/offers/get?user=${user._id}&page=${page}&limit=${limit}`);            \r\n        const data = await response.json()\r\n       \r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n        //console.log(data.offers)\r\n        return data.offers\r\n    }catch(error){\r\n        //console.log(error)\r\n        console.log(\"Get Offers\", \"Une erreur est survenue! \"+ error,)\r\n        return []\r\n    }\r\n}\r\n\r\nexport  const updateOfferRead = async (item) => {\r\n    //console.log(item)\r\n    const offer = {\r\n        seller : item.seller._id,\r\n        buyer : item.buyer._id,\r\n        product : item.product._id\r\n    }\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/offers/offer/read`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(offer),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n        },})          \r\n        //const datas = await response.json()\r\n                //console.log(datas)\r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n            //console.log(datas)\r\n            return true\r\n    }catch(error){\r\n        console.log(error)\r\n        Alert.alert(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return false\r\n    }\r\n}\r\n\r\n\r\n\r\n//ORDERS\r\n\r\nexport  const getOrders = async (user, page, limit) => {\r\n    console.log(\"data.orders\")\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/orders/get/${user._id}?page=${page}&limit=${limit}`);            \r\n        const data = await response.json()\r\n       \r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n        \r\n        return data.orders\r\n    }catch(error){\r\n        console.log(error)\r\n        console.log(\"Get Offers\", \"Une erreur est survenue! \"+ error,)\r\n        return []\r\n    }\r\n}\r\n\r\nexport  const updateOrderRead = async (itemId, productId) => {\r\n    const order = {\r\n        product : productId\r\n    }\r\n\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/orders/offer/update/read/${itemId}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(order),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n        },})          \r\n        //const datas = await response.json()\r\n                //console.log(datas)\r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n            //console.log(datas)\r\n            return true\r\n    }catch(error){\r\n        console.log(error)\r\n        Alert.alert(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return false\r\n    }\r\n}\r\n\r\nexport  const updateOrderStatus = async (itemId, productId, status) => {\r\n    //console.log(item)\r\n    const order = {\r\n        product : productId,\r\n        status : status\r\n    }\r\n    try{\r\n        \r\n        const response = await fetch(`${server}/api/datas/orders/offer/update/status/${itemId}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(order),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n        },})          \r\n        //const datas = await response.json()\r\n                //console.log(datas)\r\n        if (!response.ok) {\r\n            throw new Error('Erreur lors de la requête');\r\n        }\r\n            //console.log(datas)\r\n            return true\r\n    }catch(error){\r\n        console.log(error)\r\n        Alert.alert(\"Erreur\", \"Une erreur est survenue! \"+ error,)\r\n        return false\r\n    }\r\n}\r\n\r\n\r\n\r\nexport  const addOder = async (user, product, price) =>{\r\n    \r\n}\r\n\r\nexport  const getLocalOrders = async (type) => {\r\n    switch(type)\r\n    {\r\n        case \"delivered\" : //acheve\r\n            break\r\n        case \"pending\" || \"shipped\" : //en cours\r\n            break\r\n        case \"canceled\" : //annulé\r\n            break\r\n        default : break\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//SEND EMAIL\r\n\r\nexport  const sendEmail = async (email, senderEmail, senderName, receivers, subject, htmlMessage) => {\r\n    const apiKey = 'API_KEY';\r\n    const apiUrl = 'https://api.brevo.com/v3/smtp/email';\r\n  \r\n    const emailData = {\r\n      sender: { email: sender, name: senderName },\r\n      //to: [{ email: reveiverEmail, name: receiverName }],\r\n      to: receivers,\r\n      subject: subject,\r\n      htmlContent: htmlMessage,\r\n    };\r\n  \r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'api-key': apiKey,\r\n        },\r\n        body: JSON.stringify(emailData),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        console.log('Email envoyé avec succès:', responseData);\r\n      } else {\r\n        const errorData = await response.json();\r\n        console.error('Erreur lors de l\\'envoi de l\\'email:', errorData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur de la requête:', error);\r\n    }\r\n  }\r\n","import React, { useState, useEffect, createContext, useContext, useRef, useCallback } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, ActivityIndicator, Image, Modal, Share  } from 'react-native';\r\n\r\nimport { Input } from 'react-native-elements';\r\nimport BadgeIcon from './BadgeIcon';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { productStyles } from '../../styles/productStyles';\r\nimport { productDetailsStyles } from '../../styles/productDetailsStyles';\r\nimport { searchBarStyles } from '../../styles/searchBarStyles';\r\nimport { commonSimpleComponentsStyles } from '../../styles/commonSimpleComponentsStyles';\r\nimport { appFont, appColors, appFontSize, customText } from '../../styles/commonStyles';\r\n//import { CheckBox } from 'react-native-elements';\r\nimport { CheckBox } from '@rneui/themed';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Icon } from 'react-native-elements';\r\nimport { formatMoney, pluralize, formatLikes, calculateTotalPrice, handleSharePress } from '../../utils/commonAppFonctions';\r\nimport { choosePrice, hasPropositionPrice } from '../../utils/commonAppFonctions';\r\n//contexte\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addFavourite, addFavouriteContext, setLikedIcon, updateLocalFavourites, isProductFavourite, addLocalFavourite, removeLocalFavourite} from '../../store/favourites/favouritesSlice'; \r\nimport { productsImagesPath } from '../../remote/server';\r\nimport { Facebook } from 'react-content-loader/native';\r\n\r\n\r\n\r\nexport  const LikeButton = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { favourites, liked } = useSelector(state => state.favourites);\r\n    const { item, hasLikedItem, _handleLikePressed, synchro, isCard, styles, user, noText } = props;\r\n    const style = styles || {};\r\n\r\n    const timeoutRef = useRef(null);\r\n   // const isFavourite = useSelector((state) => isProductFavourite(state, item._id))\r\n    const isFavourite = hasLikedItem\r\n    const [like, setLikeIcon] = useState(isFavourite);\r\n    \r\n\r\n\r\n    const handleLikePressed = useCallback((product) => {\r\n        _handleLikePressed(product)\r\n        //synchro ? _handleLikePressed() : _handleLikePressed();\r\n        //dispatch(addFavouriteContext({ item:item, bool: !like }));\r\n        //setLikeIcon(!isFavourite);\r\n        \r\n\r\n        \r\n\r\n        if (timeoutRef.current) {\r\n            clearTimeout(timeoutRef.current);\r\n        }\r\n\r\n        // Configurer un nouveau timeout\r\n        timeoutRef.current = setTimeout(() => {\r\n            if (isFavourite) {\r\n                //product.likes--\r\n                dispatch(removeLocalFavourite({product, user}));\r\n            } else {\r\n                //product.likes++\r\n                dispatch(addLocalFavourite({product, user}));\r\n            }\r\n            dispatch(addFavourite({ item:item, bool:!like, user:user }));\r\n        }, 500);\r\n        \r\n\r\n    },[])\r\n\r\n   useEffect(() => {\r\n        // Ici, nous devons également mettre à jour l'état local 'like' en fonction du state global\r\n\r\n       //setLikeIcon(isFavourite);\r\n        //dispatch(setLikedIcon(isFavourite)); // Met à jour l'état global 'liked'\r\n        //console.log(\"okj\")\r\n    },[]);\r\n\r\n    return (\r\n        <Pressable\r\n            style={[commonSimpleComponentsStyles.likeButton.likeIcon, isCard ? productStyles.card : false]}\r\n            onPress={() => handleLikePressed(item)}\r\n        >\r\n            {!hasLikedItem\r\n                ? <BadgeIcon name=\"heart-outline\" size={24} color={style.color} badgeCount={0} styles={{zIndex:99}} />\r\n                : <BadgeIcon name=\"heart-sharp\" size={24} color={appColors.secondaryColor1} badgeCount={0} styles={{}} />\r\n            }\r\n            { item.likes > 0 && !noText &&\r\n                    <View style={[{flexDirection:'row'}]}>\r\n                    <View style={{width:5,}}></View>\r\n                        <Text style={[customText.text, {color:style.color}, {fontSize:12,fontWeight:styles.fontWeight || 'bold'}]}>{formatLikes(item.likes) || 1}</Text> \r\n                    </View>\r\n            }\r\n        </Pressable>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport  const PrevButton = (props) => {\r\n    const {styles} = props\r\n    const navigation = useNavigation()\r\n    const color = styles ? styles.color : appColors.black\r\n    const size = styles ? styles.size : 24\r\n    return(\r\n        <Pressable onPress={() => {navigation.goBack()}}>\r\n            <Icon name='arrow-back' type='ionicon' color={color} size={size} />\r\n        </Pressable>\r\n    )\r\n}\r\n\r\n/*\r\nexport  const ShareButton = (props) => {\r\n    const { link, size, color } = props\r\n    return(\r\n        <Pressable style={[commonSimpleComponentsStyles.shareButton,]} onPress = { ()=>{ console.log(\"share\"); }}>\r\n            <BadgeIcon name=\"share-social-sharp\" size={size} color={color} styles={{}} />\r\n        </Pressable>\r\n    )\r\n}\r\n*/\r\n\r\nexport  const ShareButton = (props) => {\r\n    const { link, size, color } = props\r\n    //console.log(link)\r\n\r\n    return(\r\n        <Pressable style={[commonSimpleComponentsStyles.shareButton,]} onPress = { ()=>{ handleSharePress(link) }}>\r\n            <BadgeIcon name=\"share-social-sharp\" size={size} color={color} styles={{}} />\r\n        </Pressable>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport  const NotificationsSkeleton = (props) => {\r\n    const {number} = props\r\n    return (\r\n        <View style={[{flex:1,paddingHorizontal:10}]}>\r\n        {\r\n          (new Array(number).fill(1)).map((_,key) => {\r\n            return (\r\n              <View key={key}>\r\n                <Facebook backgroundColor={appColors.skeletonBackgroundColor} foregroundColor={appColors.skeletonForegrundColor} />\r\n              </View>\r\n            )\r\n          })\r\n       }\r\n      </View>\r\n    )\r\n}\r\n\r\n\r\nexport  const ConditionChoice = (props) => {\r\n    const {styles, updateConditions, conditions } = props\r\n    \r\n    return(\r\n        <View style={commonSimpleComponentsStyles.conditionChoice.checkBox}>\r\n             <Pressable style={[styles.itemContainer,]}>\r\n                <CheckBox title='Neuf' checked={conditions[\"new\"]} onPress={() => { updateConditions(\"new\")  }} containerStyle={[styles.contentContainer,{}]} textStyle={[customText.text,styles.checkBoxText]}/>\r\n            </Pressable>\r\n\r\n            <Pressable style={[styles.itemContainer,]}>\r\n                <CheckBox title='Utilisé' checked={conditions[\"old\"]} onPress={() => { updateConditions(\"old\"); }} containerStyle={[styles.contentContainer,{}]} textStyle={[customText.text,styles.checkBoxText]} />\r\n            </Pressable>\r\n\r\n            <Pressable style={[styles.itemContainer,]}>\r\n                <CheckBox title='Peu Utilisé' checked={conditions[\"new used\"]} onPress={() => { updateConditions(\"new used\");  }} containerStyle={[styles.contentContainer,{}]} textStyle={[customText.text,styles.checkBoxText]} />\r\n            </Pressable>\r\n        </View>    \r\n        )\r\n}\r\n\r\n\r\nexport  const CustomButton = (props) => {\r\n    const { text, color, backgroundColor, onPress, styles, disabled } = props\r\n    \r\n    const styles_ = StyleSheet.create({\r\n        bg:{backgroundColor:(backgroundColor || appColors.blue)},\r\n        color:{color:(color || appColors.white),}\r\n    })\r\n    return(\r\n       <Pressable style={[{justifyContent:\"center\",alignItems:\"center\"},styles.pressable, styles_.bg]} onPress={onPress} disabled={disabled}>\r\n            <Text style={[styles.text, styles_.color]}>{text}</Text>\r\n       </Pressable> \r\n        )\r\n}\r\n\r\nexport  const CustomActivityIndicator = (props) => {\r\n\r\n    return (\r\n        <View style={[commonSimpleComponentsStyles.activityIndicator.container,{}]}>\r\n                <ActivityIndicator style={[commonSimpleComponentsStyles.activityIndicator.activityIndicator,{}]} size=\"large\" color={appColors.secondaryColor1} />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport  const CustomModalActivityIndicator = (props) => { \r\n    const {onRequestClose, isLoading, size, color, message} = props\r\n    return (\r\n        <Modal visible={isLoading} transparent={true}  onRequestClose={() => onRequestClose(true)}>\r\n                <View style={[commonSimpleComponentsStyles.modalActivityIndicator.modalContainer]}>\r\n                    <View style={[commonSimpleComponentsStyles.modalActivityIndicator.modalContent]}>\r\n                        <Text style={[customText.text, {fontWeight:'bold'}]}>{message}</Text>\r\n                        <ActivityIndicator color={color} size={size} />\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n    )\r\n}\r\n\r\nexport  const Counter = (props) => {\r\n    const { product, number, dispatch, setNumber, quantities, limit} = props\r\n\r\n    /*\r\n         <Input value={quantities[product2._id]} onChangeText={(qt)=>{updateQuantities(product2._id, qt)}}\r\n                inputMode='numeric'\r\n                multiline={false}\r\n                maxLength={2}\r\n                placeholder='1'\r\n                placeholderTextColor={appColors.secondaryColor3}\r\n                inputStyle = {[searchBarStyles.inputText, {color:appColors.gray,}]}\r\n                onFocus={() => updateQuantitiesFocused(product2._id, true)}\r\n                onBlur={() => updateQuantitiesFocused(product2._id, false)}\r\n                underlineColorAndroid='transparent'\r\n                style={[{textAlign : 'center'}]}\r\n                containerStyle={[{justifyContent:'center',alignItems:'center'}]}\r\n                inputContainerStyle = {[radioProductStyles.inputContainer, quantitiesFocused[product2._id] && radioProductStyles.inputContainerFocused,]}\r\n            />\r\n    */\r\n   const num = isNaN(parseInt(number)) ? 1 : parseInt(number)\r\n   //console.log(number)\r\n    return (\r\n        <View style={[commonSimpleComponentsStyles.counter.container]}>\r\n            <Pressable style={[{}]} onPress={()=>{setNumber(product, Math.max(num-1, 1))}}>\r\n                <Icon name=\"remove\" type=\"ionicon\" color={appColors.black} size={20} />\r\n            </Pressable>\r\n            <Input value={num}\r\n                inputMode='numeric'\r\n                editable={false}\r\n                multiline={false}\r\n                maxLength={2}\r\n                placeholder={num+\"\"}\r\n                placeholderTextColor={appColors.clearBlack}\r\n                inputStyle = {[searchBarStyles.inputText, {color:appColors.clearBlack,fontSize:12}]}\r\n                \r\n                underlineColorAndroid='transparent'\r\n                style={[{textAlign : 'center'}]}\r\n                containerStyle={[commonSimpleComponentsStyles.counter.containerStyleInput]}\r\n                inputContainerStyle = {[commonSimpleComponentsStyles.counter.inputContainer,]}\r\n            />\r\n            <Pressable onPress={()=>{setNumber(product, Math.min(num+1, limit)) }}>\r\n                <Icon name=\"add\" type=\"ionicon\" color={appColors.black} size={20} />\r\n            </Pressable>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport  const DisplayPrice = (props) => {\r\n    const { product } = props\r\n    //import { formatMoney, pluralize, choosePrice, hasPropositionPrice } from '../../utils/commonAppFonctions';\r\n\r\n    return (\r\n        <View style={[{flexDirection : 'row'}]}>\r\n            <Text style={[customText.text, {top:10,fontWeight:\"bold\"}]}>{formatMoney(choosePrice(product))} XAF</Text>                                                    \r\n\r\n            {\r\n                hasPropositionPrice(product) \r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nexport  const TemporaryNotification = (props) => {\r\n    const {message} = props\r\n    return (\r\n        <View style={[commonSimpleComponentsStyles.temporaryNotification.container,{}]}>\r\n            <Text style={[customText, commonSimpleComponentsStyles.temporaryNotification.message]}>{message}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport  const PriceDetails = (props) => {\r\n    const {products, title, closePriceDetails} = props\r\n    let product; \r\n// console.log(products)\r\n        const totalPrice = calculateTotalPrice(products)\r\n\r\n        let passed_products = []\r\n        const kargoPrice = products.reduce((total, prod) =>{\r\n          \r\n            //Si cest differents sellers ça marche mais sil ya un meme seller pour 2 produits cest pas bon\r\n            //return prod.feesBy=='buyer' ?  total+parseInt(prod.kargoPrice) : total\r\n            let toAdd;\r\n            if(passed_products.some(p => (p.seller._id==prod.seller._id && p.feesBy=='buyer') ))\r\n            {\r\n                toAdd = 0\r\n            }\r\n            else\r\n            {\r\n                toAdd = prod.feesBy=='buyer' ?  parseInt(prod.kargoPrice) : 0\r\n                passed_products.push(prod)\r\n            }\r\n\r\n            return  total + toAdd\r\n           \r\n        }, 0)\r\n//console.log(kargoPrice)\r\n        const feesBy = products.some(p => p.feesBy == 'buyer')\r\n\r\n        product = { newPrice:totalPrice, feesBy:feesBy?'buyer':'seller', kargoPrice:kargoPrice, orderQuantity:products.reduce((t,p) => { return t+parseInt(p.orderQuantity||1)}, 0) }\r\n   \r\n\r\n\r\n    const transport = product.feesBy==='buyer' ? product.kargoPrice : 0\r\n    \r\n    return (\r\n        <View style={[commonSimpleComponentsStyles.priceDetails.container]}>\r\n            <View style={[{flexDirection:'row', justifyContent:'space-between', paddingRight:10}]}>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.title]}>{title.toUpperCase()}</Text>\r\n                <Pressable style={[{}]} onPress={()=>{closePriceDetails(false)}}>\r\n                    <Icon type='ionicon' name=\"close-circle\" size={24} color={appColors.secondaryColor1} />   \r\n                </Pressable>            \r\n            </View>\r\n\r\n            <View style={{height:10}}></View>\r\n\r\n            <View  style={[commonSimpleComponentsStyles.priceDetails.priceLine]}>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle]}>Prix Réel</Text>\r\n                <Text style={[customText.text,commonSimpleComponentsStyles.priceDetails.price]}>{formatMoney(product.newPrice)} XAF</Text>\r\n            </View>\r\n\r\n            <View  style={[commonSimpleComponentsStyles.priceDetails.priceLine]}>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle]}>Quantité</Text>\r\n                <Text style={[customText.text,commonSimpleComponentsStyles.priceDetails.price]}> {product.orderQuantity} </Text>\r\n            </View>\r\n\r\n            <View  style={[commonSimpleComponentsStyles.priceDetails.priceLine]}>\r\n                <View>\r\n                    <Text  style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle]}>Frais De Transport</Text>\r\n                    <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle, {fontStyle:'italic', fontSize:11}]}>Payé par {product.feesBy==='seller'?'vous':'acheteur'}</Text>\r\n                </View>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.price, product.feesBy==='seller'?{fontStyle:'italic',fontSize:14}:null]}>{product.feesBy==='buyer'?`-${formatMoney(product.kargoPrice)} XAF`:'Payé par le vendeur'} </Text>\r\n            </View>\r\n\r\n            <View  style={[commonSimpleComponentsStyles.priceDetails.priceLine]}>\r\n                <Text  style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle]}>Commission(-10%)</Text>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.price]}>-{formatMoney(product.newPrice*10/100)}  XAF</Text>\r\n            </View>\r\n\r\n            <View  style={[commonSimpleComponentsStyles.priceDetails.priceLine, commonSimpleComponentsStyles.priceDetails.totalPriceLine]}>\r\n                <Text  style={[customText.text, commonSimpleComponentsStyles.priceDetails.semiTitle, commonSimpleComponentsStyles.priceDetails.totalPriceText]}>Total - Vos Gain</Text>\r\n                <Text style={[customText.text, commonSimpleComponentsStyles.priceDetails.price]}>{formatMoney((product.newPrice-product.newPrice*10/100))}  XAF</Text>\r\n            </View>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport  const MinifyHorizontalProduct = (props) => {\r\n    const { product, styles, onPress } = props\r\n    function formatName(name){\r\n        if(name.length > 30) return name.substr(0,30)+'...'\r\n            return name\r\n    }\r\n    return (\r\n        <Pressable style={[styles.productContainer]} onPress={()=>{onPress(product)}}>\r\n            <Image source={{ uri: `${productsImagesPath}/${product.images[0]}` }} style={styles.productImages} />\r\n            <View style={{width:10}}></View>\r\n            <Text style={[styles.productName]} numberOfLines={2}>{formatName(product.name)}</Text>\r\n        </Pressable>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { createContext, useState, useEffect } from 'react'\r\nimport { Alert } from 'react-native';\r\nimport { serialize, formDataToJSON } from '../utils/commonAppFonctions'\r\nimport { server } from '../remote/server'\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { storeCache, getCache } from '../cache/cacheFunctions';\r\n\r\nconst AccountancyContext = createContext()\r\nconst AccountancyProvider = ({children}) => {\r\n\r\n    const [accountancies, setAccountancies] = useState([])\r\n    const [accounters, setAccounters] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchAccountancies = async (user) => {\r\n        try\r\n        {\r\n            console.log(user)\r\n            setIsLoading(true)\r\n            const response = await fetch(`${server}/api/datas/accountancy/accountancies/${encodeURIComponent(user._id)}`, {\r\n                method: 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n\r\n            if(!response)\r\n            {\r\n                throw new Error(\"Erreur reseau \" + await response.text())\r\n            }\r\n            \r\n            const res = await response.json()\r\n            //console.log(res.datas[0].user)\r\n            setAccountancies(res.datas)\r\n            return res.datas\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            return []\r\n        }finally{\r\n            setIsLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const getSearchedAccountancies = async (date) => {\r\n        const datas = {\r\n            date\r\n        }\r\n\r\n        try\r\n        {\r\n            setIsLoading(true)\r\n            const response = await fetch(`${server}/api/datas/accountancy/accountancies/search?date=${encodeURIComponent(date)}`, {\r\n                method: 'GET',\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n\r\n            if(!response)\r\n            {\r\n                throw new Error(\"Erreur reseau \" + await response.text())\r\n            }\r\n            \r\n            const res = await response.json()\r\n            //console.log(res.datas[0].user)\r\n            setAccountancies(res.datas)\r\n            return res.datas\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            return []\r\n        }finally{\r\n            setIsLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    const addUserDailyAccountancy = async (user, dailyReport) => {\r\n        try {\r\n            \r\n            const response = await fetch(`${server}/api/datas/accountancy/add/${encodeURIComponent(user._id)}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(dailyReport), \r\n            });\r\n    \r\n            // Vérification si la requête a réussi\r\n            if (!response.ok) {\r\n                const errorData = await response.text();\r\n               throw new Error(errorData);\r\n            }\r\n            //console.log(updatedFormData)\r\n            \r\n            const responseData = await response.json();\r\n\r\n            return responseData.datas\r\n        } catch (error) {\r\n            console.error('Erreur lors de la requête:', error);\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    const fetchAccounters = async () => {\r\n        try {\r\n            setIsLoading(true)\r\n            const response = await fetch(`${server}/api/datas/accountancy/accounters`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                const err = await response.text()\r\n                throw new Error(`Error: ${err}`);\r\n            }\r\n    \r\n            const res = await response.json();\r\n    \r\n            if (!res.success) {\r\n                console.error('Error fetching users:', res.message);\r\n                return;\r\n            }\r\n    \r\n            // Manipuler les données ici (liste des utilisateurs)\r\n            //console.log(res)\r\n            setAccounters(res.datas)\r\n    \r\n        } catch (error) {\r\n            console.error('Fetch error:', error.message);\r\n        }finally{\r\n            setIsLoading(false)\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const filterStateVars = {accounters, accountancies, isLoading}\r\n    const filterStateSetters = {setAccounters, setIsLoading}\r\n    const utilsFunctions = {fetchAccountancies, getSearchedAccountancies, addUserDailyAccountancy, fetchAccounters}\r\n    return (\r\n        <AccountancyContext.Provider value={{...filterStateVars, ...filterStateSetters, ...utilsFunctions}}>\r\n            {children}\r\n        </AccountancyContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport { AccountancyContext, AccountancyProvider }","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, KeyboardAvoidingView, FlatList} from 'react-native';\r\n\r\n\r\nimport { CustomModalActivityIndicator } from '../common/CommonSimpleComponents'\r\nimport { appColors, customText } from '../../styles/commonStyles';\r\nimport { AccountancyContext } from '../../context/AccountancyContext';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { cardContainer } from '../user/userLoginStyles';\r\nconst ViewAccountancies = (props) => {\r\n    const navigation = useNavigation()\r\n    const { fetchAccounters, fetchAccountancies, accounters, accountancies, isLoading, setIsLoading} = useContext(AccountancyContext)\r\n\r\n    //const accounter = ['Ange','Ornella', 'Fadyl', 'Joel', 'Abdel']\r\n    //const [accounters, setAccounters] = useState(accounter)\r\n    //On va afficher home en fonciton de admin role\r\n\r\n\r\n    const handleAccounterPressed = (item) => {\r\n        //console.log(item)\r\n        navigation.navigate('ViewAccountanciesDetails', {accounter:item})\r\n    }\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n        await fetchAccounters()\r\n    }\r\n    //if(!isLoadig)\r\n        fetchData()\r\n}, [])\r\n\r\n    return (\r\n        <View style={[viewAccountanciesStyles.container]}>\r\n           {/*  <View style={[viewAccountanciesStyles.top]}>\r\n                    <Text style={[customText.text, viewAccountanciesStyles.topTitle]}>Accounters</Text>\r\n                </View>\r\n                */\r\n            }\r\n            <View style={[viewAccountanciesStyles.infoContainer]}>\r\n               \r\n                <FlatList\r\n                        data={accounters}\r\n                        renderItem={ ({item}) => { \r\n                            return(\r\n                                <Pressable style={[viewAccountanciesStyles.item]} onPress={()=> {handleAccounterPressed(item)}}>\r\n                                    <Text style={[customText.text, viewAccountanciesStyles.itemText]}>{ item.email.split('@')[0] }</Text>\r\n                                </Pressable>\r\n                            ) \r\n                        } }\r\n                        keyExtractor={ (item) => { return item._id.toString(); } }\r\n                        ItemSeparatorComponent ={ (item) => { return <View style={{height:5,}}></View> }}\r\n                        contentContainerStyle={[viewAccountanciesStyles.flatlist]}\r\n                        style={[{width:'100%',}]}\r\n                        ListEmptyComponent={() => {}}\r\n                />\r\n\r\n\r\n<CustomModalActivityIndicator onRequestClose={setIsLoading} isLoading={isLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Chargements des données...\" />\r\n        </View>\r\n    </View>\r\n    )\r\n}\r\n\r\nexport default ViewAccountancies\r\n\r\n\r\nconst viewAccountanciesStyles = StyleSheet.create({\r\n\r\n    container :\r\n    {\r\n        flex : 1,\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n\r\n        top : 10,\r\n    },\r\n    top :\r\n    {\r\n        flex : 1,\r\n        alignItems : 'center',\r\n    },\r\n    topTitle :\r\n    {\r\n\r\n    },\r\n    infoContainer :\r\n    {\r\n        ...cardContainer,\r\n        position : 'absolute',\r\n        flex : 1,\r\n        width  : '100%',\r\n\r\n    },\r\n    contents :\r\n    {\r\n        paddingHorizontal : 10,\r\n    },\r\n    flatlist :\r\n    {\r\n        justifyContent : 'center',\r\n        //alignItems : 'center',\r\n        width : '100%',\r\n        height : '100%',\r\n        paddingHorizontal : 10,\r\n        //backgroundColor : 'red',\r\n    },\r\n    item :\r\n    {\r\n        padding : 20,\r\n        borderWidth : 1,\r\n        borderColor : appColors.secondaryColor3,\r\n        width : '100%',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n    },\r\n    itemText :\r\n    {\r\n\r\n    },\r\n\r\n    titles :\r\n    {\r\n\r\n    },\r\n    titlesText :\r\n    {\r\n\r\n    }\r\n})\r\n","import { StyleSheet, StatusBar } from \"react-native\";\r\nimport { appColors, appFont, customText, screenHeight } from \"./commonStyles\";\r\nimport { card } from \"./filtersStyles\";\r\n\r\n\r\n\r\n\r\nexport const addAccountancyStyles = StyleSheet.create({\r\n    container : \r\n    {\r\n        flexGrow : 1,\r\n        top : 0,\r\n        //backgroundColor : appColors.white,\r\n    },\r\n    containers :\r\n    {\r\n        \r\n    },\r\n    titles :\r\n    {\r\n        backgroundColor : appColors.lightWhite,\r\n        height : 50,\r\n        flexDirection :\"row\",\r\n        alignItems : \"center\",\r\n        paddingLeft : 20,\r\n    },\r\n    contents :\r\n    {\r\n        //height : 7,\r\n        backgroundColor : appColors.white,\r\n        flexDirection : \"row\",\r\n        alignItems : \"center\",\r\n        padding : 20,\r\n        paddingRight : 0,\r\n        \r\n    },\r\n    titlesText :\r\n    {\r\n        ...customText.text,\r\n        fontWeight : \"bold\",\r\n        fontSize : 16,\r\n    },\r\n    normalText :\r\n    {\r\n        ...customText.text,\r\n        fontSize : 14,\r\n        color : appColors.secondaryColor5\r\n\r\n    },\r\n    imageBox :\r\n    {\r\n        width:100,\r\n        height:100,\r\n        borderWidth : 1,\r\n        borderColor : appColors.secondaryColor4,\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        \r\n    },\r\n    imageCloseButton:\r\n    {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: appColors.lightBlack,\r\n        position: \"absolute\",\r\n        alignSelf: \"flex-end\",\r\n        top: 0,\r\n    },\r\n    bottomPicker :\r\n    {\r\n        ...card,\r\n        position : \"absolute\",\r\n        left : 0,\r\n        right : 0,\r\n        bottom : 0,\r\n        padding : 20,\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-around\",\r\n        alignItems : \"center\",\r\n        paddingHorizontal : 20,\r\n        backgroundColor : appColors.lightWhite,\r\n        borderTopWidth : 2,\r\n        borderTopColor : appColors.white,\r\n        zIndex : 99,\r\n    },\r\n\r\n    inputContainer : \r\n    {\r\n        borderRadius : 0,\r\n        borderWidth : 0,\r\n        borderBottom : 1,\r\n        padding : 0\r\n    },\r\n    radioBox : \r\n    {\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-around\",\r\n        alignItems : \"center\",\r\n        width : \"100%\",\r\n    },\r\n    radioContainer : \r\n    {\r\n        flexDirection : \"row\",\r\n        alignItems : \"center\",\r\n    },\r\n    categoryContainer :\r\n    {\r\n        backgroundColor : appColors.white,\r\n        flexDirection : \"column\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"flex-start\",\r\n        padding : 0,\r\n        paddingRight : 0,\r\n        wifth : \"100%\",\r\n    },\r\n    pressableDetails :\r\n    {\r\n        padding : 15,\r\n        borderBottomWidth:1,\r\n        borderColor:appColors.secondaryColor3,\r\n        width : \"100%\",\r\n        flexDirection : \"row\",\r\n        justifyContent : \"space-between\",\r\n        alignItems : \"center\",\r\n    },\r\n\r\n    addProductSubmitView :\r\n    {\r\n        position : \"relative\",\r\n        left : 0,\r\n        right : 0,\r\n        bottom : 0,\r\n        width : \"100%\",\r\n        height : 60,\r\n    },\r\n    pressable :\r\n    {\r\n        padding : 20,\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\",\r\n        flex : 1,\r\n        //borderRadius : 20,\r\n    },\r\n    text :\r\n    {\r\n        ...customText.text,\r\n        fontWeight : \"bold\",\r\n    },\r\n\r\n\r\n    modalContainer: {\r\n        flex: 1,\r\n        backgroundColor: appColors.clearBlack,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      },\r\n      fullImage: {\r\n        width: '90%',\r\n        height: '70%',\r\n      },\r\n      closeButton: {\r\n        marginTop: 20,\r\n        padding: 10,\r\n        backgroundColor: appColors.red,\r\n        borderRadius: 5,\r\n      },\r\n      closeButtonText: {\r\n        fontSize: 16,\r\n        color: appColors.white,\r\n      },\r\n\r\n})","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, KeyboardAvoidingView} from 'react-native';\r\n\r\nimport { Input } from 'react-native-elements';\r\nimport { Picker } from '@react-native-picker/picker';\r\n\r\nimport { CustomButton, CustomModalActivityIndicator } from '../common/CommonSimpleComponents'\r\n\r\nimport { appColors, customText} from '../../styles/commonStyles';\r\nimport { useRoute, useNavigation } from '@react-navigation/native';\r\nimport { searchBarStyles } from '../../styles/searchBarStyles';\r\nimport { formatMoney, getDate } from '../../utils/commonAppFonctions'\r\n\r\nimport { addAccountancyStyles } from '../../styles/addAccountancyStyles';\r\nimport { AccountancyContext } from '../../context/AccountancyContext';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { cardContainer } from '../user/userLoginStyles';\r\n\r\n\r\nconst SupplyFunds = (props) => {\r\n    //console.log('ok--')\r\n    //On va afficher home en fonciton de admin role\r\n    const navigation = useNavigation()\r\n    const route = useRoute()\r\n    const { user } = useContext(UserContext)\r\n    const { fetchAccounters, addUserDailyAccountancy, accounters, accountancies, isLoading, setIsLoading} = useContext(AccountancyContext)\r\n\r\n\r\n    const [isPostLoading, setIsPostLoading] = useState(false)\r\n\r\n\r\n\r\n    const [amount, setAmount] = useState(0)\r\n    const [availableReceipients, setAvailableReceipients] = useState([])\r\n   \r\n    const [amountFocused, setAmountFocused] = useState(false)\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n\r\n\r\n    const submitAccountancy = async () => {\r\n        //console.log(accounters)\r\n        //return;\r\n        try\r\n        {\r\n            setIsPostLoading(true)\r\n            setErrors({})\r\n\r\n           \r\n            //console.log(selectedReceipients)\r\n            //return\r\n\r\n            const report = {\r\n                reason : 'Supply',\r\n                amount : parseInt(amount.split('.').join('')),\r\n                billNo : '/',\r\n                receivedBy : selectedReceipients, //id du receipient\r\n                type : 'income',\r\n                date : getDate()\r\n            }\r\n            //return\r\n            \r\n            const res = await addUserDailyAccountancy(user, report)\r\n\r\n            Alert.alert(\r\n                \"Alert\", \r\n                \"Ajouté avec succes\",\r\n                [\r\n                  {\r\n                    text: \"Ok\",\r\n                    onPress: () => navigation.goBack(),\r\n                  },\r\n                ],\r\n                { cancelable: false } \r\n              );\r\n\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            Alert.alert('Error', 'Verifier votre connexion a Internet. Si cela persiste contacter l\\'admin.')\r\n        }finally {\r\n            setIsPostLoading(false)\r\n        }\r\n    }\r\n\r\n    const getUsername = (email) => {\r\n        return email.split('@')[0]\r\n    }\r\n\r\n    const getAccounters = (accounters) => {\r\n        const accounters_ = accounters\r\n        const username = getUsername(user.email)\r\n        let tmp = []\r\n        if(user.role=='boss')\r\n        {\r\n            tmp = accounters.filter(el => getUsername(el.email) == 'admin')\r\n        }\r\n        else if(username=='admin')\r\n        {\r\n            tmp = accounters.filter(el => getUsername(el.email) == 'comptabilite')\r\n        }\r\n        else if(username=='comptabilite')\r\n        {\r\n            tmp = accounters.filter(el => ['kennevarelle9', 'stessydkbglobal', 'dorisndokon3'].includes(getUsername(el.email)))\r\n        }\r\n        return tmp\r\n    }\r\n\r\n    const [selectedReceipients, setSelectedReceipients] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        const fetchData = async () => {\r\n            await fetchAccounters()\r\n            setSelectedReceipients(getAccounters(accounters)[0]?._id)\r\n        }\r\n        //if(!isLoadig)\r\n            fetchData()\r\n    }, [])\r\n    return (\r\n        <View style={[supplyFundsStyles.container]}>\r\n            <View style={[supplyFundsStyles.infoContainer]}>\r\n                <View style={[supplyFundsStyles.contents]}>\r\n                        <View style={[supplyFundsStyles.title]}>\r\n                            <Text style={[supplyFundsStyles.titleText]}>Montant</Text>\r\n                        </View>\r\n\r\n                        <View style={{height:10,}}></View>\r\n                            <Input placeholder=\"9.999 XAF\" value={formatMoney(amount)} onChangeText={(price)=>{setAmount(formatMoney(price))}}\r\n                                inputMode='numeric'\r\n                                multiline={false}\r\n                                placeholderTextColor={appColors.secondaryColor5}\r\n                                inputStyle = {[searchBarStyles.inputText, ]}\r\n                                onFocus={() => setAmountFocused(true)}\r\n                                onBlur={() => setAmountFocused(false)}\r\n                                underlineColorAndroid='transparent'\r\n                                containerStyle={[supplyFundsStyles.inputBox]}\r\n                                inputContainerStyle = {[searchBarStyles.inputContainer, amountFocused && searchBarStyles.inputContainerFocused,  supplyFundsStyles.inputContainer]}\r\n                            />\r\n                            \r\n                </View> \r\n\r\n                <View  style={[supplyFundsStyles.contents]}>\r\n                    <View style={[supplyFundsStyles.receipient]}>\r\n                        <View style={[supplyFundsStyles.title]}>\r\n                            <Text style={[supplyFundsStyles.titleText]}>Receipient</Text>\r\n                        </View>\r\n                        <View style={{height:10,}}></View>\r\n\r\n                        <Picker\r\n                            selectedValue={selectedReceipients}\r\n                            style={[supplyFundsStyles.picker]}\r\n                            onValueChange={(itemValue, itemIndex) => setSelectedReceipients(itemValue)}\r\n                        >\r\n                            \r\n                            {getAccounters(accounters).map((accounter, index) => {\r\n                                //console.log(accounter._id)\r\n                                return <Picker.Item key={index} label={accounter.email} value={accounter._id} />\r\n                            })}\r\n                        \r\n                        </Picker>\r\n                    </View>\r\n                </View>\r\n\r\n\r\n                <View style={{height:20}}></View>\r\n\r\n\r\n            <View style={[addAccountancyStyles.addProductSubmitView,{}]}>\r\n                    <CustomButton text=\"Valider\" color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={addAccountancyStyles} onPress={()=>{submitAccountancy()}} />\r\n            </View>\r\n\r\n            <CustomModalActivityIndicator onRequestClose={setIsPostLoading} isLoading={isPostLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Chargements des données...\" />\r\n        </View>\r\n    </View>\r\n    )\r\n}\r\n\r\nexport default SupplyFunds\r\n\r\n\r\nexport const supplyFundsStyles = StyleSheet.create({\r\n    container :\r\n    {\r\n        flex : 1,\r\n        justifyContent : 'center',\r\n        top : 10,\r\n    },\r\n    infoContainer :\r\n    {\r\n        ...cardContainer,\r\n        width  : '100%',\r\n\r\n    },\r\n    contents :\r\n    {\r\n        paddingHorizontal : 10,\r\n    },\r\n    inputContainer : \r\n    {\r\n        borderRadius : 0,\r\n        borderWidth : 0,\r\n        borderBottom : 1,\r\n        padding : 0,\r\n        left : 0,\r\n        width : '100%',\r\n        \r\n    },\r\n    inputBox :\r\n    {\r\n        backgroundColor : appColors.white,\r\n    },\r\n    picker: \r\n    {\r\n        padding : 10,\r\n        width: '100%',\r\n        backgroundColor: appColors.white,\r\n        \r\n    },\r\n    titleText :\r\n    {\r\n        fontWeight : 'bold',\r\n        fontSize : 16,\r\n    }\r\n    \r\n})\r\n","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, FlatList} from 'react-native';\r\n\r\nimport { Input } from 'react-native-elements';\r\nimport { Picker } from '@react-native-picker/picker';\r\n\r\nimport { appColors, customText, screenWidth } from '../../styles/commonStyles';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { AccountancyContext } from '../../context/AccountancyContext';\r\n\r\nimport { supplyFundsStyles } from './SupplyFunds';\r\nimport { CustomButton, CustomModalActivityIndicator} from '../common/CommonSimpleComponents'\r\nimport { searchBarStyles } from '../../styles/searchBarStyles';\r\nimport { addAccountancyStyles } from '../../styles/addAccountancyStyles';\r\nimport { formatMoney, getDate, isValidDate } from '../../utils/commonAppFonctions'\r\nimport { cardContainer } from '../user/userLoginStyles';\r\n\r\n\r\nconst ViewAccountanciesDetails = (props) => {\r\n\r\n    const navigation = useNavigation()\r\n    const route = useRoute()\r\n    const {accounter} = route.params\r\n    const { fetchAccounters, fetchAccountancies, accounters, accountancies, isLoading, setIsLoading, getSearchedAccountancies} = useContext(AccountancyContext)\r\n    //On va afficher home en fonciton de admin role\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetchAccountancies(accounter)\r\n        }\r\n        //if(!isLoadig)\r\n            fetchData()\r\n    }, [])\r\n\r\n    const RenderAccount = (props) => {\r\n        const { item, index } = props\r\n        console.log(item)\r\n\r\n        return (\r\n   \r\n\r\n                <View style={[viewAccountanciesDetailsStyles.line, {backgroundColor:item?.type=='income' ? appColors.lightGreen : appColors.lightRed }]}>\r\n                    <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                        <Text style={[viewAccountanciesDetailsStyles.recordItemText]}>{item?.date}</Text>\r\n                    </View>\r\n\r\n                    <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                        <Text style={[viewAccountanciesDetailsStyles.recordItemText]}>{item?.reason}</Text>\r\n                    </View>\r\n\r\n                    <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                        <Text style={[viewAccountanciesDetailsStyles.recordItemText]}>{item?.type=='income'?\"+\":\"-\"} {item?.amount}</Text>\r\n                    </View>\r\n\r\n                    <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                        <Text style={[viewAccountanciesDetailsStyles.recordItemText]}>{item?.billNo}</Text>\r\n                    </View>\r\n                    <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                        <Text style={[viewAccountanciesDetailsStyles.recordItemText]}>{item?.cashBalance}</Text>\r\n                    </View>\r\n                </View>\r\n                \r\n        )\r\n    }\r\n\r\n    const [selectedDate, setSelectedDate] = useState(\"Day\")\r\n    const [date, setDate] = useState(getDate())\r\n    const [dateFocused, setDateFocused] = useState(false)\r\n    const [isPostLoading, setIsPostLoading] = useState(false)\r\n    const [showSearch, setShowSearch] = useState(false)\r\n\r\n    const searchedAccountancies = async () => {\r\n        try\r\n        {\r\n            setIsPostLoading(true)\r\n            const date_ = selectedDate.toLowerCase() ==='day' ? date : '01/'+date\r\n            console.log(date_)\r\n\r\n            if(!isValidDate(date_))\r\n            {\r\n                Alert.alert('Date Error', 'Entrez une date valide, au format JJ pour day et JJ/MM pour month')\r\n                return;\r\n            }\r\n            \r\n            \r\n            await getSearchedAccountancies(date)\r\n\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            Alert.alert('Error', 'Verifier votre connexion a Internet. Si cela persiste contacter l\\'admin.')\r\n        }finally {\r\n            setIsPostLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ScrollView horizontal={true} contentContainerStyle={[viewAccountanciesDetailsStyles.container]}>\r\n\r\n        <View style={[{flex:1}]}>\r\n            <View style={[viewAccountanciesDetailsStyles.topSearch]}>\r\n                <Pressable style={[viewAccountanciesDetailsStyles.searchButton, {alignItems:'center', backgroundColor:!showSearch?appColors.green:appColors.red}]} onPress={()=>{setShowSearch(prev=>!prev)}}>\r\n                    <Text style={[customText.text, {color:appColors.white, fontWeight:'bold'}]}>{!showSearch ? \"Chercher\" : \"Fermer\"}</Text>\r\n                </Pressable>\r\n            {showSearch &&\r\n                <>\r\n                    <View style={[viewAccountanciesDetailsStyles.topElInput,{}]}>\r\n                        <Input placeholder=\"Date\" value={date} onChangeText={(name)=>{setDate(name)}}\r\n                                inputMode='text'\r\n                                multiline={false}\r\n                                readOnly={false}\r\n                                maxLength={100}\r\n                                placeholderTextColor={appColors.secondaryColor3}\r\n                                inputStyle = {[searchBarStyles.inputText, ]}\r\n                                onFocus={() => setDateFocused(true)}\r\n                                onBlur={() => setDateFocused(false)}\r\n                                underlineColorAndroid='transparent'\r\n                                containerStyle={ [viewAccountanciesDetailsStyles.containerBox,]}\r\n                                inputContainerStyle = {[searchBarStyles.inputContainer, dateFocused && searchBarStyles.inputContainerFocused,  viewAccountanciesDetailsStyles.inputContainer,\r\n                                ]}\r\n                        />\r\n                    </View>\r\n\r\n                    <View style={{width:10}}></View>\r\n\r\n                    <View style={[viewAccountanciesDetailsStyles.topEl,{}]}>\r\n                        <Picker\r\n                            selectedValue={selectedDate}\r\n                            style={[viewAccountanciesDetailsStyles.picker]}\r\n                            onValueChange={(itemValue, itemIndex) => setSelectedDate(itemValue)}\r\n                            >\r\n                            {['Day', 'Month'].map((item, index) => (\r\n                                <Picker.Item key={index} label={item} value={item} />\r\n                            ))}\r\n                        </Picker>\r\n                    </View>\r\n                            \r\n                        <View style={{width:10}}></View>\r\n\r\n                        <View style={[viewAccountanciesDetailsStyles.topEl,{}]}>\r\n                            <CustomButton text=\"Filtrer\" color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={viewAccountanciesDetailsStyles} onPress={()=>{searchedAccountancies()}} />\r\n                        </View>\r\n                </>\r\n            }\r\n            </View>\r\n\r\n            \r\n\r\n       \r\n            <FlatList\r\n                    data={accountancies}\r\n                    renderItem={ ({item, index}) => { \r\n                        return(\r\n                            <RenderAccount item={item} index={index} />\r\n                        ) \r\n                    } }\r\n                    keyExtractor={ (item) => { return item._id.toString(); } }\r\n                    ItemSeparatorComponent ={ (item) => { return <View style={{height:5,}}></View> }}\r\n                    contentContainerStyle={[viewAccountanciesDetailsStyles.flatlist]}\r\n                    ListHeaderComponent={() => {\r\n                        return (\r\n                            <View style={[viewAccountanciesDetailsStyles.line]}>\r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Date</Text>\r\n                                </View>\r\n\r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Reason</Text>\r\n                                </View>\r\n\r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Amount</Text>\r\n                                </View>\r\n\r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Bill</Text>\r\n                                </View>\r\n\r\n                                <View style={[viewAccountanciesDetailsStyles.cell]}>\r\n                                    <Text style={[viewAccountanciesDetailsStyles.titleText]}>Balance</Text>\r\n                                </View>\r\n                            </View>\r\n                        )\r\n                    }}\r\n                    ListFooterComponent={() => {\r\n                      \r\n                    }}\r\n                    ListEmptyComponent={ () => {\r\n                        return (\r\n                            <View style={[{width:screenWidth, justifyContent:'center', alignItems:'center'}]}>\r\n                                <Text style={[viewAccountanciesDetailsStyles.titleText]}>Pas de donnees</Text>\r\n                            </View>\r\n                        )\r\n                    }}\r\n            />\r\n\r\n           \r\n\r\n\r\n            \r\n     <View style={{hieght:10}}></View>\r\n\r\n\r\n            \r\n\r\n            <CustomModalActivityIndicator onRequestClose={setIsPostLoading} isLoading={isPostLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Chargements des données...\" />\r\n        </View>\r\n    </ScrollView>\r\n    )\r\n}\r\n\r\nexport default ViewAccountanciesDetails\r\n\r\n\r\nconst viewAccountanciesDetailsStyles = StyleSheet.create({\r\n    container :\r\n    {\r\n        flexGrow : 1,\r\n        //paddingHorizontal : 10,\r\n    },\r\n    searchButton :\r\n    {\r\n        padding : 10,\r\n    },\r\n    topSearch :\r\n    {\r\n        //flexDirection : 'row',\r\n        //justifyContent : 'space-around',\r\n        //alignItems : 'center',\r\n        width : screenWidth,\r\n        backgroundColor : appColors.white,\r\n        //height : 60,\r\n    }, \r\n    topSearchEl : \r\n    {\r\n        //width : screenWidth/4,\r\n    },\r\n    inputContainer :\r\n    {\r\n        width : '100%',\r\n        borderRadius : 0,\r\n        borderWidth : 0,\r\n        borderBottom : 1,\r\n        padding : 0\r\n    },\r\n    containerBox :\r\n    {\r\n        backgroundColor : appColors.white,\r\n    },\r\n    picker :\r\n    {\r\n        padding : 10,\r\n    },\r\n\r\n\r\n    line : \r\n    {\r\n        flexDirection : 'row',\r\n        justifyContent : 'space-between',\r\n    },\r\n    record :\r\n    {\r\n        flexDirection : 'row',\r\n        justifyContent : 'space-between',\r\n    },\r\n    cell :\r\n    {\r\n        width : 200,\r\n        height : 30,\r\n        borderRightWidth : 1,\r\n        borderColor : appColors.white,\r\n        justifyContent :'center',\r\n        alignItems : 'center',\r\n    },\r\n    subTitle :\r\n    {\r\n\r\n    },\r\n    subTitleText :\r\n    {\r\n\r\n    },\r\n\r\n\r\n    titleText :\r\n    {\r\n        color : appColors.secondaryColor5,\r\n        fontWeight : 'bold',\r\n        fontSize : 15,\r\n    },\r\n    recordItemText :\r\n    {\r\n        color : appColors.secondaryColor5,\r\n    },\r\n\r\n    pressable :\r\n    {\r\n        padding : 20,\r\n    }\r\n})\r\n","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, KeyboardAvoidingView} from 'react-native';\r\nimport { Input } from 'react-native-elements';\r\n\r\nimport { formatMoney, getDate, isValidDate } from '../../utils/commonAppFonctions'\r\nimport { CustomButton, CustomModalActivityIndicator} from '../common/CommonSimpleComponents'\r\nimport { appColors, formErrorStyle} from '../../styles/commonStyles';\r\nimport { searchBarStyles } from '../../styles/searchBarStyles';\r\nimport { addAccountancyStyles } from '../../styles/addAccountancyStyles';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { AccountancyContext } from '../../context/AccountancyContext';\r\n\r\nconst AddAccountancy = (props) => {\r\n\r\n    const navigation = useNavigation()\r\n    const route = useRoute()\r\n    const { user } = useContext(UserContext)\r\n    const { addUserDailyAccountancy } = useContext(AccountancyContext)\r\n\r\n    const [checkoutReason, setCheckoutReason] = useState(\"\")\r\n    const [amount, setAmount] = useState(0)\r\n    const [billNo, setBillNo] = useState(\"\")\r\n    const [receivedBy, setReceivedBy] = useState(\"\")\r\n    const [cashBalance, setCashBalance] = useState(\"\")\r\n    const [date, setDate] = useState(getDate())\r\n\r\n\r\n    const [checkoutReasonFocused, setCheckoutReasonFocused] = useState(false)\r\n    const [amountFocused, setAmountFocused] = useState(false)\r\n    const [billNoFocused, setBillNoFocused] = useState(false)\r\n    const [receivedByFocused, setReceivedByFocused] = useState(false)\r\n    const [cashBalanceFocused, setCashBalanceFocused] = useState(false)\r\n    const [dateFocused, setDateFocused] = useState(false)\r\n\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [isPostLoading, setIsPostLoading] = useState(false)\r\n\r\n    const submitAccountancy = async () => {\r\n        try\r\n        {\r\n            setIsPostLoading(true)\r\n            setErrors({})\r\n\r\n            if(!isValidDate(date))\r\n            {\r\n                Alert.alert('Date Error', 'Entrez une date valide, au format JJ/MM/AA')\r\n                return;\r\n            }\r\n\r\n            const report = {\r\n                receivedBy,\r\n                reason : checkoutReason,\r\n                amount : parseInt(amount.split('.').join('')),\r\n                billNo,\r\n                type : 'outcome',\r\n                date : date\r\n            }\r\n            const res = await addUserDailyAccountancy(user, report)\r\n            \r\n            Alert.alert(\r\n                \"Alert\", \r\n                \"Ajouté avec succes\",\r\n                [\r\n                  {\r\n                    text: \"Ok\",\r\n                    onPress: () => navigation.goBack(),\r\n                  },\r\n                ],\r\n                { cancelable: false } \r\n              );\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            Alert.alert('Error', 'Verifier votre connexion a Internet. Si cela persiste contacter l\\'admin.')\r\n        }finally {\r\n            setIsPostLoading(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n    <View>         \r\n        <ScrollView contentContainerStyle={[addAccountancyStyles.container,{flexGrow: 1}]}>\r\n            <View style={[addAccountancyStyles.containers]}>\r\n                <View style={[addAccountancyStyles.titles]}>\r\n                    <Text style={[addAccountancyStyles.titlesText]}>Motif De Retrait : </Text>\r\n                </View>\r\n                \r\n                <View style={[addAccountancyStyles.contents]}>\r\n                    <View style={{width:10,}}></View>\r\n                    <View>\r\n                        <Input placeholder=\"EX : Give a reason\" value={checkoutReason} onChangeText={(name)=>{setCheckoutReason(name)}}\r\n                            inputMode='text'\r\n                            multiline={true}\r\n                            placeholderTextColor={appColors.secondaryColor3}\r\n                            inputStyle = {[searchBarStyles.inputText, ]}\r\n                            onFocus={() => setCheckoutReasonFocused(true)}\r\n                            onBlur={() => setCheckoutReasonFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            containerStyle={ [searchBarStyles.containerBox,]}\r\n                            inputContainerStyle = {[searchBarStyles.inputContainer, checkoutReasonFocused && searchBarStyles.inputContainerFocused,  addAccountancyStyles.inputContainer,]}\r\n                        />\r\n                        {errors.name && <Text style={[formErrorStyle.text]}>{errors.checkoutReason}</Text>}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={[addAccountancyStyles.containers]}>\r\n                <View style={[addAccountancyStyles.titles]}>\r\n                    <Text style={[addAccountancyStyles.titlesText]}>Montant : </Text>\r\n                </View>\r\n                \r\n                <View style={[addAccountancyStyles.contents]}>\r\n                    <View style={{width:10,}}></View>\r\n                    <View>\r\n                        <Input placeholder=\"EX : Amount\" value={amount} onChangeText={(name)=>{setAmount(formatMoney(name))}}\r\n                            inputMode='text'\r\n                            multiline={false}\r\n                            maxLength={100}\r\n                            placeholderTextColor={appColors.secondaryColor3}\r\n                            inputStyle = {[searchBarStyles.inputText, ]}\r\n                            onFocus={() => setAmountFocused(true)}\r\n                            onBlur={() => setAmountFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            containerStyle={ [searchBarStyles.containerBox,]}\r\n                            inputContainerStyle = {[searchBarStyles.inputContainer, amountFocused && searchBarStyles.inputContainerFocused,  addAccountancyStyles.inputContainer]}\r\n                        />\r\n                        {errors.name && <Text style={[formErrorStyle.text]}>{errors.amount}</Text>}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={[addAccountancyStyles.containers]}>\r\n                <View style={[addAccountancyStyles.titles]}>\r\n                    <Text style={[addAccountancyStyles.titlesText]}>Numero De Facture </Text>\r\n                </View>\r\n                \r\n                <View style={[addAccountancyStyles.contents]}>\r\n                    <View style={{width:10,}}></View>\r\n                    <View>\r\n                        <Input placeholder=\"EX : Bill No\" value={billNo} onChangeText={(name)=>{setBillNo(name)}}\r\n                            inputMode='text'\r\n                            multiline={false}\r\n                            maxLength={100}\r\n                            placeholderTextColor={appColors.secondaryColor3}\r\n                            inputStyle = {[searchBarStyles.inputText, ]}\r\n                            onFocus={() => setBillNoFocused(true)}\r\n                            onBlur={() => setBillNoFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            containerStyle={ [searchBarStyles.containerBox,]}\r\n                            inputContainerStyle = {[searchBarStyles.inputContainer, billNoFocused && searchBarStyles.inputContainerFocused,  addAccountancyStyles.inputContainer]}\r\n                        />\r\n                        {errors.name && <Text style={[formErrorStyle.text]}>{errors.billNo}</Text>}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={[addAccountancyStyles.containers]}>\r\n                <View style={[addAccountancyStyles.titles]}>\r\n                    <Text style={[addAccountancyStyles.titlesText]}>Recu Par : </Text>\r\n                </View>\r\n                \r\n                <View style={[addAccountancyStyles.contents]}>\r\n                    <View style={{width:10,}}></View>\r\n                    <View>\r\n                        <Input placeholder=\"Name\" value={receivedBy} onChangeText={(name)=>{setReceivedBy(name)}}\r\n                            inputMode='text'\r\n                            readOnly={false}\r\n                            multiline={false}\r\n                            maxLength={100}\r\n                            placeholderTextColor={appColors.secondaryColor3}\r\n                            inputStyle = {[searchBarStyles.inputText, ]}\r\n                            onFocus={() => setReceivedByFocused(true)}\r\n                            onBlur={() => setReceivedByFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            containerStyle={ [searchBarStyles.containerBox,]}\r\n                            inputContainerStyle = {[searchBarStyles.inputContainer, receivedByFocused && searchBarStyles.inputContainerFocused,  addAccountancyStyles.inputContainer,\r\n                            ]}\r\n                        />\r\n                        {errors.name && <Text style={[formErrorStyle.text]}>{errors.receivedBy}</Text>}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={[addAccountancyStyles.containers]}>\r\n                <View style={[addAccountancyStyles.titles]}>\r\n                    <Text style={[addAccountancyStyles.titlesText]}>Date : </Text>\r\n                </View>\r\n                \r\n                <View style={[addAccountancyStyles.contents]}>\r\n                    <View style={{width:10,}}></View>\r\n                    <View>\r\n                        <Input placeholder=\"Date de la transaction\" value={date} onChangeText={(name)=>{setDate(name)}}\r\n                            inputMode='text'\r\n                            multiline={false}\r\n                            readOnly={false}\r\n                            maxLength={100}\r\n                            placeholderTextColor={appColors.secondaryColor3}\r\n                            inputStyle = {[searchBarStyles.inputText, ]}\r\n                            onFocus={() => setDateFocused(true)}\r\n                            onBlur={() => setDateFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            containerStyle={ [searchBarStyles.containerBox,]}\r\n                            inputContainerStyle = {[searchBarStyles.inputContainer, dateFocused && searchBarStyles.inputContainerFocused,  addAccountancyStyles.inputContainer,\r\n                                {backgroundColor:appColors.lightWhite}\r\n                            ]}\r\n                        />\r\n                        {errors.date && <Text style={[formErrorStyle.text]}>{errors.date}</Text>}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n\r\n    </ScrollView>\r\n\r\n     <View style={{hieght:10}}></View>\r\n\r\n\r\n        <View style={[addAccountancyStyles.addProductSubmitView,{}]}>\r\n                <CustomButton text=\"Soumettre\" color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={addAccountancyStyles} onPress={()=>{submitAccountancy()}} />\r\n        </View>\r\n\r\n\r\n        <CustomModalActivityIndicator onRequestClose={setIsPostLoading} isLoading={isPostLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Chargements des données...\" />\r\n\r\n    </View>\r\n\r\n    )\r\n}\r\n\r\nexport default AddAccountancy\r\n\r\n","import * as Yup from 'yup';\r\n\r\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\nconst userValidationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n    .matches(emailRegex, 'L\\'adresse email n\\'est pas valide')\r\n    .required('L\\'adresse email est requise'),\r\n\r\n  password: Yup.string()\r\n    .min(7, 'Le mot de passe doit contenir au moins 7 caractères') \r\n    .required('Le mot de passe est requis'),\r\n\r\n  username: Yup.string()\r\n    .min(3, 'Le nom d\\'utilisateur doit contenir au moins 3 caractères')\r\n    .required('Le nom d\\'utilisateur est requis'),\r\n\r\n});\r\n\r\nexport default userValidationSchema;\r\n","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, KeyboardAvoidingView, ImageBackground, Keyboard} from 'react-native';\r\nimport { Input, Icon } from 'react-native-elements';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\n\r\nimport { RadioButton } from 'react-native-paper';\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\n\r\nimport { appColors, customText, appFont, formErrorStyle } from '../../styles/commonStyles';\r\nimport { userLoginStyles } from './userLoginStyles';\r\n\r\nimport { CustomButton, CustomModalActivityIndicator} from '../common/CommonSimpleComponents';\r\n\r\nimport auth from '@react-native-firebase/auth';\r\n\r\n\r\nimport { server } from '../../remote/server';\r\nimport { serialize, getFirebaseErrorMessage } from '../../utils/commonAppFonctions'\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\n\r\nimport userValidationSchema from '../forms/validations/userValidation';\r\nimport * as Yup from 'yup';\r\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\r\nimport { addAccountancyStyles } from '../../styles/addAccountancyStyles';\r\n\r\n\r\nconst UserLogin = (props) =>\r\n{\r\n    const {  } = props\r\n    const route = useRoute()\r\n    const navigation = useNavigation()\r\n    const {checkEmail, checkPassword, checkUsername, user, setUser, updateUser, setIsAuthenticated, signupUserWithEmailAndPassword, loginUserWithEmailAndPassword} = useContext(UserContext)\r\n\r\n    const [credentialType, setCredentialType] = React.useState('register');\r\n    const [role, setRole] = useState('cashier')\r\n\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [adminPassword, setAdminPassword] = useState(\"\")\r\n    const [location, setLocation] = useState(\"\")\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    const [isEmailFocused, setIsEmailFocused] = useState(false)\r\n    const [isPasswordFocused, setIsPasswordFocused] = useState(false)\r\n    const [isUsernameFocused, setIsUsernameFocused] = useState(false)\r\n    const [adminPasswordFocused, setAdminPasswordFocused] = useState(false)\r\n    const [locationFocused, setLocationFocused] = useState(false)\r\n\r\n    \r\n    const [isPasswordShowed, setIsPasswordShowed] = useState(false)\r\n    const [adminPasswordShowed, setAdminPasswordShowed] = useState(false)\r\n\r\n\r\n    const [isEmailCorrect, setIsEmailCorrect] = useState(\"\")\r\n    const [isPasswordCorrect, setIsPasswordCorrect] = useState(\"\")\r\n    const [isUsernameCorrect, setIsUsernameCorrect] = useState(\"\")\r\n\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const signUpUser = async (email, username, password)  => {\r\n        try\r\n        {\r\n            setIsLoading(true)\r\n            const form = {email, password, username:email.split('.')[0], adminPassword:adminPassword}\r\n            await userValidationSchema.validate(form, { abortEarly: false });\r\n\r\n            \r\n            //const userCredential  = await auth().createUserWithEmailAndPassword(email, password)\r\n            signupUserWithEmailAndPassword(email, username, password, adminPassword, role, location).then(async ()=> {\r\n                await loginUser(email, username, password) \r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n            if (error instanceof Yup.ValidationError) \r\n            {\r\n                const formErrors = {};\r\n                    error.inner.forEach(err => {\r\n                        formErrors[err.path] = err.message;\r\n                });\r\n                        //console.log(formErrors)\r\n                setErrors(formErrors);\r\n            }\r\n            else\r\n            {\r\n                if(error.code)\r\n                {\r\n                    Alert.alert(\"Erreur\", getFirebaseErrorMessage(error.code))\r\n                    return;\r\n                }\r\n                Alert.alert(\"Error\", \"Une erreur est sruvenue lors de la verificaiton de vos informations. Vérifiez les données fournies.\")\r\n            }\r\n\r\n        }finally{\r\n            setIsLoading(false)\r\n        }\r\n            \r\n    }\r\n\r\n//console.log(user)   \r\nconst loginUser = async (email, username, password) => {\r\n    try\r\n    {\r\n        setIsLoading(true)\r\n        const formData = new FormData()\r\n        \r\n    /*\r\n        const userCredential = await auth().signInWithEmailAndPassword(email, password);\r\n\r\n        const firebase_user = userCredential.user;\r\n        \r\n        if(!firebase_user)\r\n        {   \r\n            const error = new Error('Utilisateur non trouvé');\r\n            error.code = 'auth/user-not-found';\r\n            throw error;\r\n        }\r\n    */\r\n        //lors de la reinitialisation\r\n    /*\r\n        formData.append('password', password); //OR firebase_user.password\r\n        const newUser = await updateUser(email, formData);\r\n    */\r\n        let user;\r\n      \r\n      \r\n        user = await loginUserWithEmailAndPassword(email, username, password,)\r\n\r\n//console.log(user)\r\n        if(!user)\r\n        {   \r\n            const error = new Error('Utilisateur non trouvé');\r\n            error.code = 'auth/user-not-found';\r\n            throw error;\r\n\r\n        }\r\n\r\n        navigation.replace('Home');\r\n        return;\r\n    }\r\n    catch(error)\r\n    {\r\n        \r\n        console.log(error)\r\n\r\n      \r\n            if(error.code)\r\n            {\r\n                Alert.alert(\"Erreur\", getFirebaseErrorMessage(error.code))\r\n                return;\r\n            }\r\n            Alert.alert(\"Error\", \"Une erreur est sruvenue lors de la verificaiton de vos informations. Vérifiez les données fournies.\")\r\n        \r\n        return;\r\n    }finally{\r\n        setIsLoading(false)\r\n    }\r\n}\r\n\r\n// {errors.images && <Text style={[formErrorStyle.text]}>{errors.images}</Text>}\r\n/*\r\n<LinearGradient\r\n                colors={['#f27a1a', '#ff8a2a', '#ba5c11', '#551b01']} // Ajoutez autant de couleurs que nécessaire\r\n                locations={[0.2, 0.1, 0.3, 0.7]} // Réglez les pourcentages de chaque couleur\r\n                start={{ x: 0, y: 0 }}\r\n                end={{ x: 1, y: 1, }}\r\n                style={[{flex:1,}]}\r\n                >\r\n                    <View style={[userLoginStyles.titleBox]}>\r\n                        <Text style={[userLoginStyles.title]}>Connectez-Vous</Text>\r\n                    </View>\r\n                </LinearGradient>\r\n            */\r\n    return(\r\n<View style={[userLoginStyles.container]}>\r\n                        \r\n    <KeyboardAwareScrollView resetScrollToCoords={{ x: 0, y: 0 }} contentContainerStyle={{flexGrow:1, justifyContent:'center'}} scrollEnabled={true}>\r\n            <ScrollView contentContainerStyle={[userLoginStyles.infoContainer, {}]}>\r\n            <View  style={[userLoginStyles.registerOrLogin]}>  \r\n                <RadioButton.Group onValueChange={newValue => setCredentialType(newValue)}  value={credentialType} >\r\n                    <View style={[userLoginStyles.credentialGroup]}>\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"register\" />\r\n                            <Text>Register</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"login\" />\r\n                            <Text>Login</Text>\r\n                        </View>\r\n                    </View>\r\n                </RadioButton.Group>\r\n            </View>\r\n\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Votre Email\" onChangeText={(text)=>{setEmail(text)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input, ]}\r\n                            onFocus={() => setIsEmailFocused(true)}\r\n                            onBlur={() => setIsEmailFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[userLoginStyles.inputContainer, isEmailFocused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='email' type='entypo' size={24} color={isEmailFocused?appColors.secondaryColor1:appColors.black} />\r\n                                </Pressable>\r\n                            }\r\n                            rightIcon={ \r\n                                isEmailCorrect === 'true' ?\r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='checkmark-circle-outline' type='ionicon' size={24} color={appColors.green} />\r\n                                </Pressable>\r\n                                :\r\n                                isEmailCorrect === 'false' ?\r\n                                 <Pressable onPress={() => {}}>\r\n                                 <Icon name='close-circle-outline' type='ionicon' size={24} color={appColors.red} />\r\n                             </Pressable>\r\n                             :\r\n                             false\r\n                            }\r\n                            value={email}\r\n                        /> \r\n                        {errors.email && <Text style={[formErrorStyle.text]}>{errors.email}</Text>}\r\n                </View>\r\n\r\n                <View style={{height:10}}></View>\r\n\r\n               \r\n\r\n\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Votre Mot De Passe\" onChangeText={(pwd)=>{setPassword(pwd)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input,]}\r\n                            onFocus={() => setIsPasswordFocused(true)}\r\n                            onBlur={() => setIsPasswordFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[{borderBottomWidth:1},isPasswordFocused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='lock-closed-sharp' type='ionicon' size={24} color={isPasswordFocused?appColors.secondaryColor1:appColors.black} />\r\n                                </Pressable>\r\n                            }\r\n                            rightIcon = {\r\n                                isPasswordShowed ?\r\n                                    <Pressable onPress={()=>{setIsPasswordShowed(false)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-off-outline\" size={24} color={appColors.gray} />\r\n                                    </Pressable>\r\n                                :\r\n                                <Pressable onPress={()=>{setIsPasswordShowed(true)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-outline\" size={24} color={appColors.secondaryColor1} />\r\n                                    </Pressable>\r\n                            }\r\n                            value={password}\r\n                            secureTextEntry={!isPasswordShowed}\r\n                        /> \r\n                        {errors.password && <Text style={[formErrorStyle.text]}>{errors.password}</Text>} \r\n                </View>   \r\n\r\n            {\r\n                credentialType=='register' &&\r\n\r\n                <>\r\n                <View  style={[userLoginStyles.registerOrLogin]}>  \r\n                <RadioButton.Group onValueChange={newValue => setRole(newValue)}  value={role} >\r\n                    <View style={[userLoginStyles.credentialGroup]}>\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"admin\" />\r\n                            <Text>Admin</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"supplier\" />\r\n                            <Text>Supplier</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"visualiser\" />\r\n                            <Text>Visualiser</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\r\n                            <RadioButton value=\"cashier\" />\r\n                            <Text>Cashier</Text>\r\n                        </View>\r\n                    </View>\r\n                </RadioButton.Group>\r\n            </View>\r\n\r\n\r\n      \r\n\r\n                    <View style={[userLoginStyles.credentialContainers]}>\r\n                        <Input placeholder=\"Votre Email\" onChangeText={(text)=>{setLocation(text)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input, ]}\r\n                            onFocus={() => setLocationFocused(true)}\r\n                            onBlur={() => setLocationFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[userLoginStyles.inputContainer, locationFocused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='email' type='entypo' size={24} color={isEmailFocused?appColors.secondaryColor1:appColors.black} />\r\n                                </Pressable>\r\n                            }\r\n                           \r\n                            value={location}\r\n                        /> \r\n                        {errors.location && <Text style={[formErrorStyle.text]}>{errors.location}</Text>}\r\n                </View>\r\n\r\n                <View style={{height:10}}></View>\r\n\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                <Input placeholder=\"Votre Mot De Passe\" onChangeText={(pwd)=>{setAdminPassword(pwd)}}\r\n                        multiline={false}\r\n                        numberOfLines={1}\r\n                        placeholderTextColor={appColors.lightWhite}\r\n                        inputStyle = {[userLoginStyles.input,]}\r\n                        onFocus={() => setAdminPasswordFocused(true)}\r\n                        onBlur={() => setAdminPasswordFocused(false)}\r\n                        underlineColorAndroid='transparent'\r\n                        inputContainerStyle={[{borderBottomWidth:1}, adminPasswordFocused && userLoginStyles.inputFocused,]}\r\n                        leftIcon={ \r\n                            <Pressable onPress={() => {}}>\r\n                                <Icon name='lock-closed-sharp' type='ionicon' size={24} color={adminPasswordFocused?appColors.secondaryColor1:appColors.black} />\r\n                            </Pressable>\r\n                        }\r\n                        rightIcon = {\r\n                            adminPasswordShowed ?\r\n                                <Pressable onPress={()=>{setAdminPasswordShowed(false)}}>\r\n                                    <Icon type=\"ionicon\" name=\"eye-off-outline\" size={24} color={appColors.gray} />\r\n                                </Pressable>\r\n                            :\r\n                            <Pressable onPress={()=>{setAdminPasswordShowed(true)}}>\r\n                                    <Icon type=\"ionicon\" name=\"eye-outline\" size={24} color={appColors.secondaryColor1} />\r\n                                </Pressable>\r\n                        }\r\n                        value={adminPassword}\r\n                        secureTextEntry={!adminPasswordShowed}\r\n                    /> \r\n                    {errors.password && <Text style={[formErrorStyle.text]}>{errors.password}</Text>} \r\n            </View>  \r\n            </>\r\n            }\r\n\r\n\r\n            \r\n\r\n\r\n                <Pressable style={[userLoginStyles.forgotBox]} onPress={() => { navigation.navigate('ResetPassword') } }>\r\n                    <Text style={[customText.text, userLoginStyles.forgotText]}>Mot de passe oublié ?</Text>\r\n                </Pressable>    \r\n                \r\n                              \r\n    \r\n    \r\n\r\n                </ScrollView>\r\n</KeyboardAwareScrollView>\r\n        \r\n\r\n            <CustomButton text=\"Valider\" onPress={()=>{credentialType==='login' ? loginUser(email, username, password) :  signUpUser(email, username, password);}} color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={{pressable: userLoginStyles.pressable, text:userLoginStyles.text}} />\r\n                     \r\n\r\n        <CustomModalActivityIndicator onRequestClose={setIsLoading} isLoading={isLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Vérification des donnéees...\" />\r\n\r\n</View>\r\n    )\r\n/*}else{\r\n    navigation.navigate(\"Preferences\", {user:user})\r\n}*/\r\n}\r\n\r\n\r\nexport default UserLogin\r\n\r\n\r\n","import React, { useState, forwardRef, useRef, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button } from 'react-native';\r\nimport { Input, Icon } from 'react-native-elements';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\n\r\nimport { appColors, customText, appFont } from '../../styles/commonStyles';\r\nimport { userLoginStyles } from './userLoginStyles';\r\n\r\nimport { CustomButton } from '../common/CommonSimpleComponents';\r\n\r\nconst UserSignup = (props) =>\r\n{\r\n    const {  } = props\r\n    const route = useRoute()\r\n    const navigation = useNavigation()\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [isFocused, setIsFocused] = useState(false)\r\n\r\n    const loginUserWithEmailAndPassword = () => {\r\n        \r\n    }\r\n\r\n\r\n    return(\r\n        <View style={[{flex:1}]}>\r\n            <Button title=\"Login\" onPress={()=>{navigation.navigate(\"UserLogin\")}} />\r\n            <View>\r\n                <Input placeholder=\"Posez une question\" onChangeText={(text)=>{setEmail(text)}}\r\n                        multiline={true}\r\n                        numberOfLines={1}\r\n                        placeholderTextColor={appColors.lightWhite}\r\n                        inputStyle = {[userLoginStyles.input, isFocused && userLoginStyles.inputFocused,]}\r\n                        onFocus={() => setIsFocused(true)}\r\n                        onBlur={() => setIsFocused(false)}\r\n                        underlineColorAndroid='transparent'\r\n                        inputContainerStyle={ { borderBottomWidth:isFocused?0:1, }}\r\n                        leftIcon={ \r\n                            <Pressable onPress={() => {}}>\r\n                                <Icon name='send-sharp' type='ionicon' size={24} color={appColors.secondaryColor1} />\r\n                            </Pressable>\r\n                        }\r\n                        value={email}\r\n                    />\r\n\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Nom De Votre Boutique\" onChangeText={(shop)=>{setUsername(shop)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input,]}\r\n                            onFocus={() => setIsUsernameFocused(true)}\r\n                            onBlur={() => setIsUsernameFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[{borderBottomWidth:1},isUsernameFocused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='basket-outline' type='ionicon' size={24} color={appColors.secondaryColor1} />\r\n                                </Pressable>\r\n                            }\r\n                            rightIcon={ \r\n                                isUsernameCorrect === 'true'  ?\r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='checkmark-circle-outline' type='ionicon' size={24} color={appColors.green} />\r\n                                </Pressable>\r\n                                :\r\n                                isUsernameCorrect === 'false'  ?\r\n                                 <Pressable onPress={() => {}}>\r\n                                 <Icon name='close-circle-outline' type='ionicon' size={24} color={appColors.red} />\r\n                             </Pressable>\r\n                                :\r\n                                false\r\n                            }\r\n                            value={username}\r\n                        />   \r\n                </View> \r\n\r\n                    <CustomButton text=\"Valider\" color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={{pressable: userLoginStyles.pressable, text:userLoginStyles.text}} />\r\n                </View>\r\n                    <Button title=\"Login\" onPress={()=>{navigation.navigate(\"UserLogin\")}} />\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport default UserSignup\r\n\r\n\r\n","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert } from 'react-native';\r\nimport { Input, Icon } from 'react-native-elements';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\n\r\nimport { appColors, customText, appFont, formErrorStyle } from '../../styles/commonStyles';\r\nimport { userLoginStyles } from './userLoginStyles';\r\n\r\nimport { CustomButton, CustomModalActivityIndicator } from '../common/CommonSimpleComponents';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { getFirebaseErrorMessage } from '../../utils/commonAppFonctions'\r\n\r\nimport auth from '@react-native-firebase/auth';\r\n\r\nimport userValidationSchema from '../forms/validations/userValidation';\r\nimport * as Yup from 'yup';\r\nimport { storeCache } from '../../cache/cacheFunctions';\r\n\r\nconst ResetPassword = (props) =>\r\n{\r\n    const {  } = props\r\n    const route = useRoute()\r\n    const navigation = useNavigation()\r\n    const {checkEmail, checkPassword, checkUsername, user, setUser, getUser, updateUser, setIsAuthenticated, loginUserWithEmailAndPassword} = useContext(UserContext)\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [password1, setPassword1] = useState(\"\")\r\n    const [password2, setPassword2] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    const [isEmailFocused, setIsEmailFocused] = useState(false)\r\n    const [isPassword1Focused, setIsPassword1Focused] = useState(false)\r\n    const [isPassword2Focused, setIsPassword2Focused] = useState(false)\r\n    const [isUsernameFocused, setIsUsernameFocused] = useState(false)\r\n\r\n\r\n    const [isPassword1Showed, setIsPassword1Showed] = useState(false)\r\n    const [isPassword2Showed, setIsPassword2Showed] = useState(false)\r\n    \r\n\r\n    const [isEmailCorrect, setIsEmailCorrect] = useState(\"\")\r\n    const [isPasswordCorrect, setIsPasswordCorrect] = useState(\"\")\r\n    const [isUsernameCorrect, setIsUsernameCorrect] = useState(\"\")\r\n\r\n    const [emailExists, setEmailExists] = useState(false)\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const  resetUserPassword = async (email) => {\r\n    try\r\n    {\r\n        setIsLoading(true)\r\n        setErrors({});\r\n        \r\n           const userExists = await getUser(email)\r\n            if(!userExists)\r\n            {\r\n                //return; if not exists\r\n                Alert.alert('Error', 'Email non trouvée')\r\n            }\r\n        \r\n        \r\n        const formData = new FormData()\r\n        //On met u mot de passe temporaire au genere aleatoirement\r\n        formData.append('password', Math.random()*10000)\r\n        const newUser = await updateUser(email, formData);\r\n        if(!newUser)\r\n        {\r\n            const error = new Error('Utilisateur non trouvé');\r\n            error.code = 'auth/user-not-found';\r\n            throw error;\r\n        }\r\n        await auth().sendPasswordResetEmail(email);\r\n/*\r\n        const form = {email:email}\r\n        //console.log(form)\r\n        //await userValidationSchema.validate(form, { abortEarly: false });\r\n    \r\n        const formData = new FormData()\r\n        //password\r\n\r\n        if (password1 !== password2) \r\n        {\r\n            throw new Error('Vos 2 mots de passe ne correspondent pas.');\r\n        }\r\n        \r\n        formData.append('password', password1);\r\n        const newUser = await updateUser(email, formData);\r\n          //console.log(newUser)\r\n        storeCache('user', {email:newUser.email, username:newUser.username, password:newUser.password})\r\n        */\r\n        //FIREBASE\r\n\r\n          //Rediriger ver UserLogin\r\n\r\n          Alert.alert(\r\n            \"Password reset\",\r\n            \"Vous allez recevoir un email pour enregistrer votre nouveau mot de passe. Si vous ne le trouvez pas, regardez vos spams.\",\r\n            [\r\n              \r\n              {\r\n                text: \"OK\", \r\n                onPress: () => navigation.navigate('UserLogin'),\r\n              },\r\n             \r\n            ],\r\n            { cancelable: true }\r\n          );\r\n    }\r\n    catch(error)\r\n    {\r\n       /* if(password1 !== password2)\r\n        {\r\n            Alert.alert(\"Error\", \"Vos 2 mots de passe ne correspondent pas.\")\r\n        }*/\r\n\r\n        if (error instanceof Yup.ValidationError) \r\n        {\r\n            const formErrors = {};\r\n            error.inner.forEach(err => {\r\n                formErrors[err.path] = err.message;\r\n            });\r\n                console.log(formErrors)\r\n            setErrors(formErrors);\r\n        }\r\n        else\r\n        {\r\n            if(error.code)\r\n            {\r\n                Alert.alert(\"Erreur\", getFirebaseErrorMessage(error.code))\r\n                return;\r\n            }\r\n            Alert.alert(\"Error\", \"Une erreur est sruvenue lors de la verificaiton de vos informations. Vérifiez les données fournies.\")\r\n        }\r\n        console.log(error)\r\n    }finally {\r\n        setIsLoading(false)\r\n    }\r\n}\r\n\r\n    return(\r\n        <View style={[{flex:1}]}>\r\n             <View style={[userLoginStyles.infoContainer]}>\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Votre Email\" onChangeText={(text)=>{setEmail(text)}}\r\n                            multiline={false}\r\n                            readOnly={emailExists}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input, ]}\r\n                            onFocus={() => setIsEmailFocused(true)}\r\n                            onBlur={() => setIsEmailFocused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[userLoginStyles.inputContainer,isEmailFocused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='email' type='entypo' size={24} color={isEmailFocused?appColors.secondaryColor1:appColors.black} />\r\n                                    </Pressable>\r\n                            }\r\n                            rightIcon={ \r\n                                isEmailCorrect === 'true' ?\r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='checkmark-circle-outline' type='ionicon' size={24} color={appColors.green} />\r\n                                </Pressable>\r\n                                :\r\n                                isEmailCorrect === 'false' ?\r\n                                 <Pressable onPress={() => {}}>\r\n                                 <Icon name='close-circle-outline' type='ionicon' size={24} color={appColors.red} />\r\n                             </Pressable>\r\n                             :\r\n                             false\r\n                            }\r\n                            value={email}\r\n                        />   \r\n                         {errors.email && <Text style={[formErrorStyle.text]}>{errors.email}</Text>}\r\n                </View>\r\n{ emailExists &&\r\n        <View>\r\n              \r\n              <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Votre Mot De Passe\" onChangeText={(pwd)=>{setPassword1(pwd)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input,]}\r\n                            onFocus={() => setIsPassword1Focused(true)}\r\n                            onBlur={() => setIsPassword1Focused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[{borderBottomWidth:1},isPassword1Focused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='key-outline' type='ionicon' size={24} color={appColors.secondaryColor1} />\r\n                                </Pressable>\r\n                            }\r\n                            rightIcon = {\r\n                                isPassword1Showed ?\r\n                                    <Pressable onPress={()=>{setIsPassword1Showed(false)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-off-outline\" size={24} color={appColors.gray} />\r\n                                    </Pressable>\r\n                                :\r\n                                <Pressable onPress={()=>{setIsPassword1Showed(true)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-outline\" size={24} color={appColors.secondaryColor1} />\r\n                                    </Pressable>\r\n                            }\r\n                            value={password1}\r\n                            secureTextEntry={!isPassword1Showed}\r\n                        />   \r\n                </View>\r\n\r\n\r\n                <View style={[userLoginStyles.credentialContainers]}>\r\n                    <Input placeholder=\"Votre Mot De Passe\" onChangeText={(pwd)=>{setPassword2(pwd)}}\r\n                            multiline={false}\r\n                            numberOfLines={1}\r\n                            placeholderTextColor={appColors.lightWhite}\r\n                            inputStyle = {[userLoginStyles.input,]}\r\n                            onFocus={() => setIsPassword2Focused(true)}\r\n                            onBlur={() => setIsPassword2Focused(false)}\r\n                            underlineColorAndroid='transparent'\r\n                            inputContainerStyle={[{borderBottomWidth:1},isPassword2Focused && userLoginStyles.inputFocused,]}\r\n                            leftIcon={ \r\n                                <Pressable onPress={() => {}}>\r\n                                    <Icon name='key-outline' type='ionicon' size={24} color={appColors.secondaryColor1} />\r\n                                </Pressable>\r\n                            }\r\n                            rightIcon = {\r\n                                isPassword2Showed ?\r\n                                    <Pressable onPress={()=>{setIsPassword2Showed(false)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-off-outline\" size={24} color={appColors.gray} />\r\n                                    </Pressable>\r\n                                :\r\n                                <Pressable onPress={()=>{setIsPassword2Showed(true)}}>\r\n                                        <Icon type=\"ionicon\" name=\"eye-outline\" size={24} color={appColors.secondaryColor1} />\r\n                                    </Pressable>\r\n                            }\r\n                            value={password2}\r\n                            secureTextEntry={!isPassword2Showed}\r\n                        />   \r\n                      {errors.password && <Text style={[formErrorStyle.text]}>{errors.password}</Text>}\r\n                </View> \r\n        </View>\r\n}\r\n                <View style={{height:6}}></View>\r\n                    <CustomButton text=\"Valider\" onPress={()=>{resetUserPassword(email)}} color={appColors.white} backgroundColor={appColors.secondaryColor1} styles={{pressable: userLoginStyles.pressable, text:userLoginStyles.text}} />\r\n                \r\n                   \r\n                \r\n                </View>\r\n                    \r\n\r\n                <CustomModalActivityIndicator onRequestClose={setIsLoading} isLoading={isLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Envoie de l'email de reinitialisation en cours...\" />\r\n\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n/*\r\n <View>\r\n                          {errors.password && <Text style={[formErrorStyle.text]}>{errors.password}</Text>}\r\n                          {errors.email && <Text style={[formErrorStyle.text]}>{errors.email}</Text>}\r\n                    </View>\r\n*/\r\n\r\nexport default ResetPassword\r\n\r\n\r\n","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Pressable, Button, Alert, ScrollView, KeyboardAvoidingView} from 'react-native';\r\nimport { Input, Icon } from 'react-native-elements';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\n\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\n\r\nimport { appColors, customText, appFont } from '../../styles/commonStyles';\r\nimport { userLoginStyles } from './userLoginStyles';\r\n\r\nimport { CustomButton, CustomModalActivityIndicator } from '../common/CommonSimpleComponents';\r\n\r\nimport { server } from '../../remote/server';\r\nimport { serialize } from '../../utils/commonAppFonctions'\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\n\r\n\r\nconst LoaderPage = (props) => {\r\n\r\n    const route = useRoute()\r\n    const navigation = useNavigation()\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const {checkEmail, checkPassword, checkUsername, user, setUser, isAuthenticated, setIsAuthenticated, loginUserWithEmailAndPassword} = useContext(UserContext)\r\n    useEffect(() => {\r\n        const checkToken = async () => {\r\n            //await SecureStore.deleteItemAsync('user');\r\n            //await SecureStore.deleteItemAsync('authToken');\r\n    //console.log(\"oj\")\r\n            try{\r\n                setIsLoading(true)\r\n                const token = await SecureStore.getItemAsync('authToken');\r\n                \r\n                if(!!token)\r\n                {\r\n                    const user = JSON.parse(await SecureStore.getItemAsync('user'));\r\n                    //console.log(typeof user)\r\n                    //A remplace par user.email...\r\n                    ///await loginUserWithEmailAndPassword(\"francky877832@gmail.com\", \"francky877832\", \"0000000\")\r\n                    loginUserWithEmailAndPassword(user.email, user.username, user.password).then(async (user)=>{\r\n                        //Chargement des données de l'Appli\r\n                        if(!user)\r\n                        {   \r\n                            throw new Error(\"Nous n'avons pas pu vous connecter automatiquement.\")\r\n                        }\r\n                        navigation.replace('Home');\r\n\r\n                        return;\r\n                    }).catch((error) => {\r\n                        console.log(\"TOKEN\")\r\n                        navigation.replace('UserLogin');\r\n                        return;\r\n                    })\r\n                    \r\n                    //setIsAuthenticated(true);\r\n\r\n                    return;\r\n                }\r\n                else\r\n                {\r\n                    navigation.replace('UserLogin');\r\n                }\r\n            }\r\n            catch(error)\r\n            {\r\n                console.log(error)\r\n                console.log(\"NOT TOKEN\")\r\n                navigation.replace('UserLogin');\r\n                setIsAuthenticated(false);\r\n                setIsLoading(false)\r\n            }finally{\r\n                \r\n            }\r\n        }\r\n\r\n        checkToken();\r\n/*\r\n        if (isAuthenticated) {\r\n            // Naviguer vers une autre page si l'utilisateur est authentifié\r\n              navigation.replace('Preferences');\r\n        }\r\n        else\r\n        {\r\n            navigation.replace('UserLogin');\r\n        }\r\n*/\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n       \r\n      }, [isAuthenticated, navigation]);\r\n    \r\n      return (\r\n        <View style={[loaderPageStyles.container]}>\r\n            <CustomModalActivityIndicator onRequestClose={setIsLoading} isLoading={isLoading} size=\"large\" color={appColors.secondaryColor1} message=\"Chargements des données...\" />\r\n        </View>\r\n      )\r\n}\r\n\r\n\r\n/*\r\n <LottieView\r\n                source={require('../../assets/animations/loaderPage1.json')}\r\n                autoPlay\r\n                loop\r\n                style={[loaderPageStyles.animation]}\r\n            />\r\n    */\r\nexport default LoaderPage\r\n\r\n\r\nconst loaderPageStyles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    animation: {\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n})","import React, { useState, forwardRef, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, } from 'react-native';\r\nimport { Input } from 'react-native-elements';\r\nimport { useRoute } from '@react-navigation/native';\r\n\r\n\r\n\r\nconst HeaderNavigation = (props) =>\r\n{\r\n    const { title } = props\r\n    const route = useRoute()\r\n    return(\r\n        <View>\r\n            <Text>{title}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst herderNavigationStyles = StyleSheet.create({\r\n    container :\r\n    {\r\n        \r\n    }\r\n})\r\n\r\nexport default HeaderNavigation\r\n\r\n\r\n","import { Easing } from \"react-native\";\r\n\r\nexport const annimatedStackTransition = (layoutWidthOutputRatio, openAnimationTime, closeAnimationTime) => {\r\n    return {\r\n        headerShown: false,\r\n        gestureEnabled: true,\r\n        cardStyleInterpolator: ({ current, next, layouts }) => {\r\n          const progress = current.progress.interpolate({\r\n            inputRange: [0, 1],\r\n            outputRange: [layouts.screen.width * layoutWidthOutputRatio, 0], // Ajuste la vitesse de défilement\r\n            extrapolate: 'clamp',\r\n          });\r\n\r\n          return {\r\n            cardStyle: {\r\n              transform: [\r\n                {\r\n                  translateX: progress,\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        },\r\n        transitionSpec: {\r\n          open: {\r\n            animation: 'timing',\r\n            config: {\r\n                duration: openAnimationTime, // Durée de l'animation en millisecondes\r\n                //easing: Easing.inOut(Easing.ease),\r\n            },\r\n          },\r\n          close: {\r\n            animation: 'timing',\r\n            config: {\r\n                duration: closeAnimationTime, // Durée de l'animation en millisecondes\r\n                //easing: Easing.inOut(Easing.ease),\r\n            },\r\n          },\r\n        },\r\n      }\r\n}","import React, { useState, useEffect, createContext, useContext } from 'react';\r\nimport { View, Text, StyleSheet, StatusBar, Platform } from 'react-native';\r\nimport { NavigationContainer, } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { TransitionPresets } from '@react-navigation/stack';\r\n\r\n\r\nimport Home from '../components/specific/Home';\r\nimport ViewAccountancies from '../components/specific/ViewAccountancies';\r\nimport ViewAccountanciesDetails from '../components/specific/ViewAccountanciesDetails';\r\nimport AddAccountancy from '../components/specific/AddAccountancy';\r\nimport SupplyFunds from '../components/specific/SupplyFunds';\r\n\r\nimport UserLogin from '../components/user/UserLogin';\r\nimport UserSignup from '../components/user/UserSignup';\r\nimport ResetPassword from '../components/user/ResetPassword';\r\nimport LoaderPage from '../components/user/LoaderPage';\r\n\r\nimport HeaderNavigation from '../components/common/HeaderNavigation'\r\n//Contexts\r\n\r\nimport { UserProvider } from '../context/UserContext';\r\nimport { AccountancyProvider } from '../context/AccountancyContext';\r\n\r\nimport { annimatedStackTransition } from './commonNavigationFonctions'\r\n\r\n\r\n\r\n\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n\r\n\r\nexport default function MainNavigation() {\r\n\r\n\r\n\r\n  return ( \r\n<SafeAreaView style={{ flex: 1, }}>\r\n <UserProvider>\r\n  <AccountancyProvider>\r\n            \r\n            <Stack.Navigator\r\n              initialRouteName=\"LoaderPage\"\r\n              screenOptions={annimatedStackTransition(0.9, 250, 200)}\r\n            >\r\n                \r\n                <Stack.Screen name=\"Home\" component={Home}  options={{ title: <HeaderNavigation title=\"Home\"/>, headerShown : false, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"ViewAccountancies\" component={ViewAccountancies}  options={{ title: <HeaderNavigation title=\"Accountancies\"/>, headerShown : false, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"ViewAccountanciesDetails\" component={ViewAccountanciesDetails}  options={{ title: <HeaderNavigation title=\"Accountancies Details\"/>, headerShown : false, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"AddAccountancy\" component={AddAccountancy}  options={{ title: <HeaderNavigation title=\"Add Accountancy\"/>, headerShown : false, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"SupplyFunds\" component={SupplyFunds}  options={{ title: <HeaderNavigation title=\"ASupply Funds\"/>, headerShown : false, tabBarVisible: false, }} />\r\n\r\n\r\n\r\n\r\n                <Stack.Screen name=\"LoaderPage\" component={LoaderPage}  options={{ title: <HeaderNavigation title=\"Loader\"/>, headerShown : false, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"UserLogin\" component={UserLogin}  options={{ title: <HeaderNavigation title=\"Login\"/>, headerShown : false, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"UserSignup\" component={UserSignup}  options={{ title: <HeaderNavigation title=\"Sign Up\"/>, headerShown : true, tabBarVisible: false, }} />\r\n                <Stack.Screen name=\"ResetPassword\" component={ResetPassword}  options={{ title: <HeaderNavigation title=\"Reset Password\"/>, headerShown : true, tabBarVisible: false, }} />\r\n                   \r\n              \r\n              </Stack.Navigator>\r\n      </AccountancyProvider>       \r\n    </UserProvider>\r\n\r\n  </SafeAreaView>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\n\r\n\r\n","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport MainNavigation from './src/navigation/MainNavigation'; \n\nexport default function App() {\n  return (\n      <SafeAreaProvider>\n        <SafeAreaView style={{ flex: 1 }}>\n          <NavigationContainer> \n\n            <MainNavigation />\n          </NavigationContainer> \n        </SafeAreaView>\n      </SafeAreaProvider>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [474], () => (__webpack_require__(3931)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["screen","Dimensions","get","screenWidth","width","appColors","height","appFont","mainFontFamily","undefined","secondaryFontFamily1","secondaryFontFamily2","secondaryFontFamily3","secondaryFontFamily4","customText","text","fontFamily","fontSize","color","inputTextStyle","fontWeight","formErrorStyle","cardWidth","productStyles","StyleSheet","create","container","backgroundColor","marginHorizontal","marginVertical","paddingBottom","containerVisibility","position","justifyContent","alignItems","opacity","zIndex","containerVisibilityInfo","left","right","bottom","padding","containerHorizontal","imageHorizontal","borderRadius","pressable","flex","image","paddingHorizontal","paddingVertical","shopName","fontStyle","productName","alignSelf","price","top","flexDirection","borderWidth","borderColor","category","feesBy","paddingRight","bottomIcons","bottomIconsButton","flexWrap","card","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","isBasketPresent","isBasketPresentText","cardContainer","userLoginStyles","backgroundImage","resizeMode","cover","registerOrLogin","credentialGroup","infoContainer","Object","assign","credentialContainers","forgotBox","forgotText","textDecorationLine","titleBox","title","inputContainer","inputFocused","input","require","formatMoney","m","money","m_tmp","toString","split","money_reverse","j","length","push","i","reverse","join","getFirebaseErrorMessage","errorCode","getDate","today","Date","month","String","getMonth","padStart","getFullYear","slice","isValidDate","date","server","UserContext","createContext","UserProvider","children","refreshComponent","setRefreshComponent","useState","user","setUser","_id","username","accounters","setAccounters","isAuthenticated","setIsAuthenticated","email","setEmail","setUsername","password","setPassword","temporaryAddress","setTemporaryAddress","filterStateVars","filterStateSetters","utilsFunctions","getUserAccounters","async","response","fetch","method","headers","errorData","Error","message","res","json","datas","error","console","log","getUser","encodeURI","updateUser","userId","updatedFormData","encodeURIComponent","body","ok","responseData","success","checkEmail","checkPassword","pwd","checkUsername","signupUserWithEmailAndPassword","adminPassword","role","location","JSON","stringify","data","loginUserWithEmailAndPassword","credentialType","type","queryString","URLSearchParams","loggedUser","token","address","phone","name","_jsx","Provider","value","props","navigation","useNavigation","useRoute","useContext","view","add","supply","_jsxs","View","style","homeStyles","logoBox","Image","source","logoImage","Pressable","menuButton","includes","onPress","navigate","Text","menuText","marginTop","focused","iconContainer","commentContainer","flatlistContainerView","flatlistContainer","flatlistContainerNotAll","maxHeight","comment","maxWidth","subComment","commentText","sendButton","borderBottomWidth","commentProfileContainer","commentProfile","filtersStyles","contentContainerStyle","topContainer","borderBottomColor","topMostContainer","topHeight","modal","borderTopWidth","borderTopColor","filtres","categoryContainer","orderByContainer","radioBox","radioContainer","marginBottom","modalHeader","modalHeaderText","similarContainer","modalVisibleText","priceContainer","minPrice","paddingLeft","maxPrice","label","conditionContainer","categorySeparator","categoryFocused","textCategoryFocused","filterFlatlist","textCategory","trierFiltrer","trierFiltrerFocused","pressableFilter","pressableFilterFocused","pressableFilterDisabled","pressableFilterTextDisabled","productContainer","flatlist","searchBarStyles","buttonContainer","likeContainer","getBackPosition","buttonContainerLeft","prevButton","likeButton","shareButton","underCaroussel","since","details","description","paddingTop","descriptionBox","infosBox","commentsContainer","scrollView","button","buttonText","textAlign","acheter","panier","sellerBrand","likeAddersImages","likeAdders","likeTitle","likeContent","likeItem","someText","propositionPrice","offerLeftText","offerRightText","similarTitleContainer","similarProducts","containerBox","inputText","inputContainerFocused","commonSimpleComponentsStyles","likeIcon","conditionChoice","checkBox","activityIndicator","icon","alignContent","modalActivityIndicator","modalContainer","modalContent","counter","containerStyleInput","priceDetails","priceLine","semiTitle","totalPriceLine","totalPriceText","temporaryNotification","notifications","USER","ON_REGISTERED","action","ORDERS","ON_NEW_ORDER","PAYMENT_SUCCESSFUL","PAYMENT_FAILED","ON_ORDER_PENDING","ON_ORDER_SHIPPED","ON_ORDER_DELIVERED","OFFERS","ON_NEW_OFFER","ON_OFFER_RESPONSE","ON_ACCEPTED","ON_REFUSED","PRODUCTS","ON_NEW_LIKE","ON_NEW_COMMENT","ON_RESPONSE_COMMENT","ON_NEW_BASKET","ON_DELETE_BASKET","ON_PRODUCT_UPDATED","ON_PRODUCT_CREADTED","ADMIN","MISSED_YOU","NEW_PRODUCT","DONT_WASTE_TIME","BE_CAREFULL","BAD_COMMENT","BAD_PRODUCT","addFavourite","createAsyncThunk","item","bool","rejectWithValue","favourite","product","updateLikes","favourites","some","el","model","notif","notification","modele","toLowerCase","read","sendNotifications","seller","fetchUserFavourites","page","getState","favouritesSlice","createSlice","initialState","liked","isLoading","disableLikeButton","hasMore","addLike","modifiedProducts","reducers","addLocalFavourite","state","payload","updatedProduct","likes","unshift","removeLocalFavourite","filter","fav","mp","map","addModifiedProduct","updatedProducts","setLikedIcon","setIsLoading","setDisableLikeButton","setPage","setHasMore","addFavouriteContext","isPresent","Set","has","updateLocalFavourites","isAdding","existingIndex","findIndex","splice","extraReducers","builder","addCase","pending","fulfilled","rejected","products","productDetails","actions","CustomButton","styles","disabled","styles_","bg","CustomModalActivityIndicator","onRequestClose","size","Modal","visible","transparent","ActivityIndicator","AccountancyContext","AccountancyProvider","accountancies","setAccountancies","fetchAccountancies","getSearchedAccountancies","addUserDailyAccountancy","dailyReport","fetchAccounters","err","useEffect","fetchData","viewAccountanciesStyles","FlatList","renderItem","accounter","handleAccounterPressed","itemText","keyExtractor","ItemSeparatorComponent","ListEmptyComponent","topTitle","contents","titles","titlesText","addAccountancyStyles","flexGrow","containers","normalText","imageBox","imageCloseButton","bottomPicker","borderBottom","wifth","pressableDetails","addProductSubmitView","fullImage","closeButton","closeButtonText","isPostLoading","setIsPostLoading","amount","setAmount","availableReceipients","setAvailableReceipients","amountFocused","setAmountFocused","errors","setErrors","getUsername","getAccounters","tmp","selectedReceipients","setSelectedReceipients","supplyFundsStyles","titleText","Input","placeholder","onChangeText","inputMode","multiline","placeholderTextColor","inputStyle","onFocus","onBlur","underlineColorAndroid","containerStyle","inputBox","inputContainerStyle","receipient","Picker","selectedValue","picker","onValueChange","itemValue","itemIndex","index","Item","report","reason","parseInt","billNo","receivedBy","Alert","alert","goBack","cancelable","submitAccountancy","route","params","RenderAccount","viewAccountanciesDetailsStyles","line","cell","recordItemText","cashBalance","selectedDate","setSelectedDate","setDate","dateFocused","setDateFocused","showSearch","setShowSearch","ScrollView","horizontal","topSearch","searchButton","prev","_Fragment","topElInput","readOnly","maxLength","topEl","date_","searchedAccountancies","ListHeaderComponent","ListFooterComponent","hieght","topSearchEl","record","borderRightWidth","subTitle","subTitleText","checkoutReason","setCheckoutReason","setBillNo","setReceivedBy","setCashBalance","checkoutReasonFocused","setCheckoutReasonFocused","billNoFocused","setBillNoFocused","receivedByFocused","setReceivedByFocused","cashBalanceFocused","setCashBalanceFocused","Yup","shape","matches","required","min","setCredentialType","React","setRole","setAdminPassword","setLocation","isEmailFocused","setIsEmailFocused","isPasswordFocused","setIsPasswordFocused","isUsernameFocused","setIsUsernameFocused","adminPasswordFocused","setAdminPasswordFocused","locationFocused","setLocationFocused","isPasswordShowed","setIsPasswordShowed","adminPasswordShowed","setAdminPasswordShowed","isEmailCorrect","setIsEmailCorrect","isPasswordCorrect","setIsPasswordCorrect","isUsernameCorrect","setIsUsernameCorrect","loginUser","FormData","code","replace","KeyboardAwareScrollView","resetScrollToCoords","x","y","scrollEnabled","RadioButton","Group","newValue","numberOfLines","leftIcon","Icon","rightIcon","secureTextEntry","form","userValidationSchema","validate","abortEarly","then","formErrors","inner","forEach","path","signUpUser","isFocused","setIsFocused","Button","shop","password1","setPassword1","password2","setPassword2","isPassword1Focused","setIsPassword1Focused","isPassword2Focused","setIsPassword2Focused","isPassword1Showed","setIsPassword1Showed","isPassword2Showed","setIsPassword2Showed","emailExists","setEmailExists","formData","append","Math","random","auth","sendPasswordResetEmail","resetUserPassword","SecureStore","getItemAsync","parse","catch","checkToken","loaderPageStyles","animation","annimatedStackTransition","layoutWidthOutputRatio","openAnimationTime","closeAnimationTime","headerShown","gestureEnabled","cardStyleInterpolator","current","next","layouts","cardStyle","transform","translateX","progress","interpolate","inputRange","outputRange","extrapolate","transitionSpec","open","config","duration","close","Stack","createStackNavigator","MainNavigation","SafeAreaView","Navigator","initialRouteName","screenOptions","Screen","component","Home","options","HeaderNavigation","tabBarVisible","ViewAccountancies","ViewAccountanciesDetails","AddAccountancy","SupplyFunds","LoaderPage","UserLogin","UserSignup","ResetPassword","App","SafeAreaProvider","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","keys","every","key","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}